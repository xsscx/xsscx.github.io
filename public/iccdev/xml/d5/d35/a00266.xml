<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="d5/d35/a00266" kind="file" language="C++">
    <compoundname>IccUtilXml.cpp</compoundname>
    <includes local="no">time.h</includes>
    <includes refid="d9/d39/a00257" local="yes">IccUtilXml.h</includes>
    <includes refid="d3/d00/a00113" local="yes">IccConvertUTF.h</includes>
    <includes refid="d8/d41/a00038" local="yes">IccTagFactory.h</includes>
    <includes local="no">cstring</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="30">
        <label>IccConvertUTF.h</label>
        <link refid="d3/d00/a00113"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>IccDefs.h</label>
        <link refid="d4/d81/a00110"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>IccIO.h</label>
        <link refid="df/d6a/a00119"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>IccPcc.h</label>
        <link refid="d4/d3a/a00101"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>IccProfLibConf.h</label>
        <link refid="d5/d16/a00029"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>IccProfile.h</label>
        <link refid="d4/d51/a00017"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>IccTag.h</label>
        <link refid="d2/df5/a00137"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>IccTagBasic.h</label>
        <link refid="da/dec/a00080"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>IccTagComposite.h</label>
        <link refid="d1/da8/a00230"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>IccTagDict.h</label>
        <link refid="df/d03/a00062"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>IccTagEmbedIcc.h</label>
        <link refid="dc/d9a/a00218"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>IccTagFactory.h</label>
        <link refid="d8/d41/a00038"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>IccTagLut.h</label>
        <link refid="da/d24/a00068"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>IccTagMPE.h</label>
        <link refid="d7/d25/a00182"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>IccTagProfSeqId.h</label>
        <link refid="d5/df1/a00206"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>IccUtil.h</label>
        <link refid="d7/dce/a00143"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>icProfileHeader.h</label>
        <link refid="d7/d46/a00002"/>
      </node>
      <node id="1">
        <label>IccXML/IccLibXML/IccUtilXml.cpp</label>
        <link refid="d5/d35/a00266"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>IccUtilXml.h</label>
        <link refid="d9/d39/a00257"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>IccXmlConfig.h</label>
        <link refid="d7/d03/a00254"/>
      </node>
      <node id="31">
        <label>cstring</label>
      </node>
      <node id="28">
        <label>libxml/parser.h</label>
      </node>
      <node id="11">
        <label>limits</label>
      </node>
      <node id="15">
        <label>list</label>
      </node>
      <node id="32">
        <label>math.h</label>
      </node>
      <node id="20">
        <label>memory</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="8">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>stdio.h</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="2">
        <label>time.h</label>
      </node>
      <node id="29">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="d3/d1e/a02093" prot="public">CIccDumpXmlCLUT</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="d5/d35/a00266_1ac9541b1c483019737e7f4c23bc5c1b09" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int hexValue</definition>
        <argsstring>(char c)</argsstring>
        <name>hexValue</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="597" column="12" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="597" bodyend="606"/>
        <referencedby refid="d9/d39/a00257_1a7e2e6f47df3c6baacbda01035dfbbbee" compoundref="d5/d35/a00266" startline="609" endline="628">icXmlGetHexData</referencedby>
        <referencedby refid="d9/d39/a00257_1a4798bcdc271228ef7083a57412803e06" compoundref="d5/d35/a00266" startline="630" endline="646">icXmlGetHexDataSize</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1afb616c9224f7f0db7e412064a547dd42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * icAnsiToUtf8</definition>
        <argsstring>(std::string &amp;buf, const char *szSrc)</argsstring>
        <name>icAnsiToUtf8</name>
        <param>
          <type>std::string &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szSrc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="372" column="12" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="372" bodyend="395"/>
        <referencedby refid="d0/d27/a00239_1a99866e7756870ecb09e429ab2233f691" compoundref="d0/d27/a00239" startline="124" endline="144">icXmlDumpTextData</referencedby>
        <referencedby refid="da/d8c/a01845_1ac311b1efcaa76a914e7e1f8f077dd828" compoundref="d0/d27/a00239" startline="655" endline="718">CIccTagXmlNamedColor2::ToXml</referencedby>
        <referencedby refid="d5/d99/a01901_1a9cb804649f0ae9f4d2dba8463840a532" compoundref="d0/d27/a00239" startline="1809" endline="1831">CIccTagXmlColorantTable::ToXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1aae207bac51345186d04fe645169a5f5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool icCLUTDataToXml</definition>
        <argsstring>(std::string &amp;xml, CIccCLUT *pCLUT, icConvertType nType, std::string blanks, bool bSaveGridPoints)</argsstring>
        <name>icCLUTDataToXml</name>
        <param>
          <type>std::string &amp;</type>
          <declname>xml</declname>
        </param>
        <param>
          <type><ref refid="d8/d02/a01149" kindref="compound">CIccCLUT</ref> *</type>
          <declname>pCLUT</declname>
        </param>
        <param>
          <type><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref></type>
          <declname>nType</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>blanks</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bSaveGridPoints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="485" column="6" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="485" bodyend="535"/>
        <references refid="d3/d1e/a02093_1a33842eacf643a8fe8ad291ccb1f716fd" compoundref="d5/d35/a00266" startline="425" endline="433">CIccDumpXmlCLUT::CIccDumpXmlCLUT</references>
        <references refid="d3/d1e/a02093_1ae27b0f4072c985798a2bee0e6276386e" compoundref="d5/d35/a00266" startline="470" endline="475">CIccDumpXmlCLUT::Finish</references>
        <references refid="d8/d02/a01149_1a0e017fe91f97b04ee7ac8d7ebdf69ee5" compoundref="da/d24/a00068" startline="356" endline="356">CIccCLUT::GetInputDim</references>
        <references refid="d8/d02/a01149_1a11c1f0a6f3f878840eaed3e00d1ce74e" compoundref="da/d24/a00068" startline="357" endline="357">CIccCLUT::GetOutputChannels</references>
        <references refid="d8/d02/a01149_1af754b393a5e5570d67bf14daf759e335" compoundref="da/d24/a00068" startline="381" endline="381">CIccCLUT::GetPrecision</references>
        <references refid="d8/d02/a01149_1a9a0c0cde105baab7884f1c8f7dd55cdf" compoundref="da/d24/a00068" startline="350" endline="350">CIccCLUT::GridPoint</references>
        <references refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" compoundref="d7/d03/a00254" startline="69">icConvert16Bit</references>
        <references refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" compoundref="d7/d03/a00254" startline="68">icConvert8Bit</references>
        <references refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8acf7f3d311a96b6529fb7b3ac82fd372b" compoundref="d7/d03/a00254" startline="71">icConvertVariable</references>
        <references refid="d8/d02/a01149_1a6daf6407801422f20ec2a70b60651ce4" compoundref="d4/d3e/a00116" startline="2069" endline="2112">CIccCLUT::Iterate</references>
        <referencedby refid="d9/d39/a00257_1a8e60807f7d16227a24f22ad32623bf98" compoundref="d5/d35/a00266" startline="537" endline="557">icCLUTToXml</referencedby>
        <referencedby refid="de/df8/a02073_1a90bc60d68216a101341bba3e58c048d6" compoundref="dd/dd7/a00260" startline="3180" endline="3219">CIccMpeXmlEmissionCLUT::ToXml</referencedby>
        <referencedby refid="db/dac/a02077_1a65a4dd5664e7e4b7e72db2cb6613c2d3" compoundref="dd/dd7/a00260" startline="3293" endline="3332">CIccMpeXmlReflectanceCLUT::ToXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1aefcd0fb51a51cdf98e9e0b142a7e1ba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool icCLUTToXml</definition>
        <argsstring>(std::string &amp;xml, CIccCLUT *pCLUT, icConvertType nType, std::string blanks, bool bSaveGridPoints, const char *szExtraAttrs, const char *szName)</argsstring>
        <name>icCLUTToXml</name>
        <param>
          <type>std::string &amp;</type>
          <declname>xml</declname>
        </param>
        <param>
          <type><ref refid="d8/d02/a01149" kindref="compound">CIccCLUT</ref> *</type>
          <declname>pCLUT</declname>
        </param>
        <param>
          <type><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref></type>
          <declname>nType</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>blanks</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bSaveGridPoints</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szExtraAttrs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="537" column="6" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="537" bodyend="557"/>
        <references refid="d8/d02/a01149_1a9a0c0cde105baab7884f1c8f7dd55cdf" compoundref="da/d24/a00068" startline="350" endline="350">CIccCLUT::GridPoint</references>
        <references refid="d9/d39/a00257_1ad5170248b277a4a29ceda7150dfe054c" compoundref="d5/d35/a00266" startline="485" endline="535">icCLUTDataToXml</references>
        <referencedby refid="d0/d27/a00239_1a2637faf66e8480a8e4b3b1ebfcb3d491" compoundref="d0/d27/a00239" startline="3131" endline="3229">icMBBToXml</referencedby>
        <referencedby refid="da/d3e/a02025_1a6be0a6ac589d3e7ef65dea4771847ea3" compoundref="dd/dd7/a00260" startline="1873" endline="1885">CIccMpeXmlCLUT::ToXml</referencedby>
        <referencedby refid="d6/d19/a02029_1a43c55f1b5cee810f8182340c359c61ee" compoundref="dd/dd7/a00260" startline="1907" endline="1925">CIccMpeXmlExtCLUT::ToXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1ae0c91ded77f7e0a950355b4e6e96efc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * icFixXml</definition>
        <argsstring>(char *szDest, const char *szStr)</argsstring>
        <name>icFixXml</name>
        <param>
          <type>char *</type>
          <declname>szDest</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="305" column="12" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="305" bodyend="339"/>
        <referencedby refid="d0/d27/a00239_1a5e18ab5a318311f6b8e807ae44b7ed45" compoundref="d0/d27/a00239" startline="2181" endline="2255">icProfDescToXml</referencedby>
        <referencedby refid="d0/d2b/a01997_1afc27f607d1f137b32dad65b538714536" compoundref="dd/dd7/a00260" startline="83" endline="104">CIccMpeXmlUnknown::ToXml</referencedby>
        <referencedby refid="d6/d94/a02033_1ab99bd7712342c0d63b6cb2d545f13c9a" compoundref="dd/dd7/a00260" startline="1950" endline="1978">CIccMpeXmlBAcs::ToXml</referencedby>
        <referencedby refid="dd/dfc/a02037_1afeb82ef0fbc9b414a1d7131e0f08f037" compoundref="dd/dd7/a00260" startline="2006" endline="2032">CIccMpeXmlEAcs::ToXml</referencedby>
        <referencedby refid="d2/d5b/a01841_1a7c57572003c894b3bdbf12ef6dcd7c83" compoundref="d0/d27/a00239" startline="568" endline="578">CIccTagXmlSignature::ToXml</referencedby>
        <referencedby refid="da/d8c/a01845_1ac311b1efcaa76a914e7e1f8f077dd828" compoundref="d0/d27/a00239" startline="655" endline="718">CIccTagXmlNamedColor2::ToXml</referencedby>
        <referencedby refid="d5/d99/a01901_1a9cb804649f0ae9f4d2dba8463840a532" compoundref="d0/d27/a00239" startline="1809" endline="1831">CIccTagXmlColorantTable::ToXml</referencedby>
        <referencedby refid="d9/d90/a01909_1a2aaf089230461749006fb254d588fb86" compoundref="d0/d27/a00239" startline="592" endline="614">CIccTagXmlSpectralDataInfo::ToXml</referencedby>
        <referencedby refid="d2/d23/a01961_1a41908f2a338b06b71d5291aaa8ac1532" compoundref="d0/d27/a00239" startline="4134" endline="4173">CIccTagXmlProfileSequenceId::ToXml</referencedby>
        <referencedby refid="d6/d9a/a01965_1a392a644105c454e2f0aa9b9b7b69a6d6" compoundref="d0/d27/a00239" startline="4219" endline="4277">CIccTagXmlDict::ToXml</referencedby>
        <referencedby refid="db/d49/a01969_1a8a1f6fe1c2db87a647aa00e2f98844e4" compoundref="d0/d27/a00239" startline="4363" endline="4478">CIccTagXmlStruct::ToXml</referencedby>
        <referencedby refid="d3/d59/a01973_1a90f7a44016b69c099ea5cb6b71772b0b" compoundref="d0/d27/a00239" startline="4734" endline="4788">CIccTagXmlArray::ToXml</referencedby>
        <referencedby refid="d6/d27/a01781_1a3fde5384cf19ae259cb72c3863f936b4" compoundref="dd/dd7/a00248" startline="82" endline="309">CIccProfileXml::ToXmlWithBlanks</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1abe67111a2ffb15f0dd07425c9bce6960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * icFixXml</definition>
        <argsstring>(std::string &amp;buf, const char *szStr)</argsstring>
        <name>icFixXml</name>
        <param>
          <type>std::string &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="276" column="12" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="276" bodyend="303"/>
        <referencedby refid="d7/db1/a01837_1a237b1ad09fe25ec7be340b0087a799ed" compoundref="d0/d27/a00239" startline="336" endline="378">CIccTagXmlTextDescription::ToXml</referencedby>
        <referencedby refid="d7/d9c/a01885_1a38e9548763954f73c29b8bc8ce0f5b5d" compoundref="d0/d27/a00239" startline="1660" endline="1678">CIccTagXmlMultiLocalizedUnicode::ToXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a15a2a61f96267fe65a6e79e413f6e88a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1a913fdffb4ed34f95d70833d696a65d99" kindref="member">icMeasurementGeometry</ref></type>
        <definition>icMeasurementGeometry icGeNamedtMeasurementGeometryValue</definition>
        <argsstring>(const icChar *str)</argsstring>
        <name>icGeNamedtMeasurementGeometryValue</name>
        <param>
          <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="1190" column="23" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="1190" bodyend="1205"/>
        <references refid="d7/d46/a00002_1a913fdffb4ed34f95d70833d696a65d99a6f2f98eb0066eaa49b79632eb2beef2f" compoundref="d7/d46/a00002" startline="1131">icGeometry045or450</references>
        <references refid="d7/d46/a00002_1a913fdffb4ed34f95d70833d696a65d99a72e0cb6f5045b9053a1e59623e6562c2" compoundref="d7/d46/a00002" startline="1132">icGeometry0dord0</references>
        <references refid="d7/d46/a00002_1a913fdffb4ed34f95d70833d696a65d99ad5402ac19929041f150fd24596fadcae" compoundref="d7/d46/a00002" startline="1130">icGeometryUnknown</references>
        <referencedby refid="de/d9f/a01881_1a157b1263fdf8de283af4d229d2e4bd94" compoundref="d0/d27/a00239" startline="1612" endline="1658">CIccTagXmlMeasurement::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a2e2198cd437d3c36ae2040acba4a07e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1a2b2782f9ad3719ac6197c1f3d9816132" kindref="member">icColorantEncoding</ref></type>
        <definition>icColorantEncoding icGetColorantValue</definition>
        <argsstring>(const icChar *str)</argsstring>
        <name>icGetColorantValue</name>
        <param>
          <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="1377" column="20" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="1377" bodyend="1392"/>
        <references refid="d7/d46/a00002_1a2b2782f9ad3719ac6197c1f3d9816132a6a1cf103b2c513f645512f5032db8d9d" compoundref="d7/d46/a00002" startline="1299">icColorantEBU</references>
        <references refid="d7/d46/a00002_1a2b2782f9ad3719ac6197c1f3d9816132a97eaf81a9b66f3bd4f1f1758af636c0d" compoundref="d7/d46/a00002" startline="1297">icColorantITU</references>
        <references refid="d7/d46/a00002_1a2b2782f9ad3719ac6197c1f3d9816132af04ffc8fb91da99c8757aafcea30892c" compoundref="d7/d46/a00002" startline="1300">icColorantP22</references>
        <references refid="d7/d46/a00002_1a2b2782f9ad3719ac6197c1f3d9816132ae593a74f211a7ed7cb4da81609763cf7" compoundref="d7/d46/a00002" startline="1298">icColorantSMPTE</references>
        <references refid="d7/d46/a00002_1a2b2782f9ad3719ac6197c1f3d9816132a8153d8240843a9825a1122fbb698f964" compoundref="d7/d46/a00002" startline="1296">icColorantUnknown</references>
        <referencedby refid="db/d6b/a01853_1a49d8593f3fb56d4d0d418ede2184fa79" compoundref="d0/d27/a00239" startline="946" endline="980">CIccTagXmlChromaticity::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a522c038996d47b04a3b404b85133e78c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/def/a00513" kindref="compound">icDateTimeNumber</ref></type>
        <definition>icDateTimeNumber icGetDateTimeValue</definition>
        <argsstring>(const icChar *str)</argsstring>
        <name>icGetDateTimeValue</name>
        <param>
          <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="1312" column="18" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="1312" bodyend="1342"/>
        <references refid="da/def/a00513_1aa853a4d45cda9f9542d12edf872d1b95" compoundref="d7/d46/a00002" startline="1421">icDateTimeNumber::day</references>
        <references refid="da/def/a00513_1a750a7db1ac713dfeea3c807a2f3a5a08" compoundref="d7/d46/a00002" startline="1422">icDateTimeNumber::hours</references>
        <references refid="da/def/a00513_1a263e022871eed8cc62e3d35140d1a0bc" compoundref="d7/d46/a00002" startline="1423">icDateTimeNumber::minutes</references>
        <references refid="da/def/a00513_1a208ea2fce0a9c7e72c3c06d5cbb43274" compoundref="d7/d46/a00002" startline="1420">icDateTimeNumber::month</references>
        <references refid="da/def/a00513_1a455c54212545ed44d29e800c62596c1c" compoundref="d7/d46/a00002" startline="1424">icDateTimeNumber::seconds</references>
        <references refid="da/def/a00513_1a1c28dcfa33b3bba180c5abebd74a29ef" compoundref="d7/d46/a00002" startline="1419">icDateTimeNumber::year</references>
        <referencedby refid="d6/d27/a01781_1ac2e86ed8d2e31113e5ef612ee29ed712" compoundref="dd/dd7/a00248" startline="333" endline="555">CIccProfileXml::ParseBasic</referencedby>
        <referencedby refid="dd/d80/a01893_1ad5de92490a23f29b1f636918923cf281" compoundref="d0/d27/a00239" startline="1760" endline="1770">CIccTagXmlDateTime::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a29395cadeb827a6be39833c934c84074" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string icGetDeviceAttrName</definition>
        <argsstring>(icUInt64Number devAttr)</argsstring>
        <name>icGetDeviceAttrName</name>
        <param>
          <type><ref refid="d7/d46/a00002_1a7d5ef7f224b316dacc02ba0bce6d3110" kindref="member">icUInt64Number</ref></type>
          <declname>devAttr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="1426" column="19" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="1426" bodyend="1467"/>
        <referencedby refid="d0/d27/a00239_1a5e18ab5a318311f6b8e807ae44b7ed45" compoundref="d0/d27/a00239" startline="2181" endline="2255">icProfDescToXml</referencedby>
        <referencedby refid="d6/d27/a01781_1a3fde5384cf19ae259cb72c3863f936b4" compoundref="dd/dd7/a00248" startline="82" endline="309">CIccProfileXml::ToXmlWithBlanks</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1ab515209dc98599451e8def16c2cdee32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1a7d5ef7f224b316dacc02ba0bce6d3110" kindref="member">icUInt64Number</ref></type>
        <definition>icUInt64Number icGetDeviceAttrValue</definition>
        <argsstring>(xmlNode *pNode)</argsstring>
        <name>icGetDeviceAttrValue</name>
        <param>
          <type>xmlNode *</type>
          <declname>pNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="1344" column="16" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="1344" bodyend="1375"/>
        <references refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" compoundref="d5/d35/a00266" startline="572" endline="578">icXmlAttrValue</references>
        <references refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" compoundref="d5/d35/a00266" startline="669" endline="685">icXmlFindAttr</references>
        <referencedby refid="d0/d27/a00239_1a0f0f9f2d4fbf03932c3a2512b8d63410" compoundref="d0/d27/a00239" startline="2257" endline="2338">icXmlParseProfDesc</referencedby>
        <referencedby refid="d6/d27/a01781_1ac2e86ed8d2e31113e5ef612ee29ed712" compoundref="dd/dd7/a00248" startline="333" endline="555">CIccProfileXml::ParseBasic</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1ab519fe18a17449734971d4c628b6e8b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string icGetHeaderFlagsName</definition>
        <argsstring>(icUInt32Number flags, bool bUsesMCS)</argsstring>
        <name>icGetHeaderFlagsName</name>
        <param>
          <type><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bUsesMCS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="1469" column="19" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="1469" bodyend="1511"/>
        <referencedby refid="d6/d27/a01781_1a3fde5384cf19ae259cb72c3863f936b4" compoundref="dd/dd7/a00248" startline="82" endline="309">CIccProfileXml::ToXmlWithBlanks</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1abfaa8c68f9f1ae46bf1f4578eb06d0f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17" kindref="member">icIlluminant</ref></type>
        <definition>icIlluminant icGetIlluminantValue</definition>
        <argsstring>(const icChar *str)</argsstring>
        <name>icGetIlluminantValue</name>
        <param>
          <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="1221" column="14" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="1221" bodyend="1293"/>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a8a45d870e58637e69dba6880adcfd8a7" compoundref="d7/d46/a00002" startline="1197">icIlluminantA</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a7496498516f74e19ad2de229c2fe641a" compoundref="d7/d46/a00002" startline="1204">icIlluminantB</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17aa2ae921dec6ee8f3fede2f53bd7f3d60" compoundref="d7/d46/a00002" startline="1202">icIlluminantBlackBody</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17acdbda48c6c0d6bb633cdeb77a8203094" compoundref="d7/d46/a00002" startline="1205">icIlluminantC</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17ac5371c55bd4c3d83624ba6cf705207fd" compoundref="d7/d46/a00002" startline="1192">icIlluminantD50</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a4a7cbc826a131c94c39dd5d5b1aa27b5" compoundref="d7/d46/a00002" startline="1196">icIlluminantD55</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17ab5abfa1ed5e6ceb001b00f4b13444426" compoundref="d7/d46/a00002" startline="1193">icIlluminantD65</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17abff07031c0b07488498839610152d9e2" compoundref="d7/d46/a00002" startline="1194">icIlluminantD93</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a4f741f748f7d67a4c26eaf716f4acfeb" compoundref="d7/d46/a00002" startline="1203">icIlluminantDaylight</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a376fbad42501a31786f44ae26ef711e7" compoundref="d7/d46/a00002" startline="1198">icIlluminantEquiPowerE</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a26a20c59010c38ddeeee0ce630acc23f" compoundref="d7/d46/a00002" startline="1206">icIlluminantF1</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17ab8bfaccb1ee450e329ecfefa4c0d7156" compoundref="d7/d46/a00002" startline="1213">icIlluminantF10</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a3a70dcf570e00d636c1c75689488c120" compoundref="d7/d46/a00002" startline="1214">icIlluminantF11</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17ae7af34e1cafa130d2f275db3565face4" compoundref="d7/d46/a00002" startline="1215">icIlluminantF12</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a44378a4d6c29b2c5ffa5e8713b7bcdfd" compoundref="d7/d46/a00002" startline="1195">icIlluminantF2</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a48fa50f619ae962be0cd59fc7d40c67b" compoundref="d7/d46/a00002" startline="1207">icIlluminantF3</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a44dc6c1dcbc50da22c3a0b7fccebbd3a" compoundref="d7/d46/a00002" startline="1208">icIlluminantF4</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17acfae429d27688d4d2c58af1a2e7b3e72" compoundref="d7/d46/a00002" startline="1209">icIlluminantF5</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a03b4215125807903e09d07c1e695501e" compoundref="d7/d46/a00002" startline="1210">icIlluminantF6</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a3c89b422ea021e634a7a70cce1d97674" compoundref="d7/d46/a00002" startline="1211">icIlluminantF7</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a0c6a226ae923661e4a7b094543f2bc12" compoundref="d7/d46/a00002" startline="1199">icIlluminantF8</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a9369446635e00e09a8179c9631dc31d0" compoundref="d7/d46/a00002" startline="1212">icIlluminantF9</references>
        <references refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17ab1c241e8a8bf7f4843c929227113ac84" compoundref="d7/d46/a00002" startline="1191">icIlluminantUnknown</references>
        <referencedby refid="de/d9f/a01881_1a157b1263fdf8de283af4d229d2e4bd94" compoundref="d0/d27/a00239" startline="1612" endline="1658">CIccTagXmlMeasurement::ParseXml</referencedby>
        <referencedby refid="d9/d65/a01905_1a506a0dfd74a95a70e8ac7eb805aff014" compoundref="d0/d27/a00239" startline="1905" endline="1957">CIccTagXmlViewingConditions::ParseXml</referencedby>
        <referencedby refid="d4/d07/a01913_1a0117e79492f9a25f32df61b4beba6ebb" compoundref="d0/d27/a00239" startline="2044" endline="2177">CIccTagXmlSpectralViewingConditions::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1abfd91744aadc29c59db098931ce63ffa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78" kindref="member">icMeasurementUnitSig</ref></type>
        <definition>icMeasurementUnitSig icGetMeasurementValue</definition>
        <argsstring>(const icChar *str)</argsstring>
        <name>icGetMeasurementValue</name>
        <param>
          <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="1394" column="22" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="1394" bodyend="1424"/>
        <references refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78a8cfe99677b174541f071898ac1ae227f" compoundref="d7/d46/a00002" startline="1283">icSigDN</references>
        <references refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78ae7f4fe5da63530727a71394766d77ad1" compoundref="d7/d46/a00002" startline="1285">icSigDNN</references>
        <references refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78a3914cfba84254bdb2dd6dfc0cf46dcff" compoundref="d7/d46/a00002" startline="1286">icSigDNNP</references>
        <references refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78ad2ba89e0bbbe0e28f25f12bbceb22829" compoundref="d7/d46/a00002" startline="1284">icSigDNP</references>
        <references refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78a7a34807a4459a7fcedbfdacdc0fb4f78" compoundref="d7/d46/a00002" startline="1278">icSigStatusA</references>
        <references refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78a29cdd67a1f54a822c763942a4d9971a2" compoundref="d7/d46/a00002" startline="1279">icSigStatusE</references>
        <references refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78a28246c0327d46c333395de46ee37edab" compoundref="d7/d46/a00002" startline="1280">icSigStatusI</references>
        <references refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78afb573c4a707be32fd465bae2e063aaab" compoundref="d7/d46/a00002" startline="1282">icSigStatusM</references>
        <references refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78aa110dfae73978c9afab842b1d74320df" compoundref="d7/d46/a00002" startline="1281">icSigStatusT</references>
        <referencedby refid="da/d6c/a01921_1a28ee8a1b0496d7c25a3f4ad7d2f95331" compoundref="d0/d27/a00239" startline="2424" endline="2494">CIccTagXmlResponseCurveSet16::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a9a9b1edaba3b35fb7beecc1ff5ec5ac1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1a242c6f629b1f7891df0b57de836c85eb" kindref="member">icMeasurementFlare</ref></type>
        <definition>icMeasurementFlare icGetNamedMeasurementFlareValue</definition>
        <argsstring>(const icChar *str)</argsstring>
        <name>icGetNamedMeasurementFlareValue</name>
        <param>
          <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="1207" column="20" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="1207" bodyend="1219"/>
        <references refid="d7/d46/a00002_1a242c6f629b1f7891df0b57de836c85ebafe8f84f868bdc90cd64f96d4e742350e" compoundref="d7/d46/a00002" startline="1118">icFlare0</references>
        <references refid="d7/d46/a00002_1a242c6f629b1f7891df0b57de836c85ebad510342b8cfc2c8b819e0eb474e4abef" compoundref="d7/d46/a00002" startline="1119">icFlare100</references>
        <referencedby refid="de/d9f/a01881_1a157b1263fdf8de283af4d229d2e4bd94" compoundref="d0/d27/a00239" startline="1612" endline="1658">CIccTagXmlMeasurement::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1ac10624d354a483abc82f31013e78a4cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1af513aa5d6844f10ca9aa78ad5fa7859b" kindref="member">icStandardObserver</ref></type>
        <definition>icStandardObserver icGetNamedStandardObserverValue</definition>
        <argsstring>(const icChar *str)</argsstring>
        <name>icGetNamedStandardObserverValue</name>
        <param>
          <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="1175" column="20" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="1175" bodyend="1187"/>
        <references refid="d7/d46/a00002_1af513aa5d6844f10ca9aa78ad5fa7859ba75bc24faaa2326e527a38382dc626ab8" compoundref="d7/d46/a00002" startline="1177">icStdObs1931TwoDegrees</references>
        <references refid="d7/d46/a00002_1af513aa5d6844f10ca9aa78ad5fa7859ba56d2f4a07f7b0624a6aab2a9b9d62b43" compoundref="d7/d46/a00002" startline="1178">icStdObs1964TenDegrees</references>
        <references refid="d7/d46/a00002_1af513aa5d6844f10ca9aa78ad5fa7859ba363218b26c81ee65a62869b50aae371e" compoundref="d7/d46/a00002" startline="1176">icStdObsUnknown</references>
        <referencedby refid="de/d9f/a01881_1a157b1263fdf8de283af4d229d2e4bd94" compoundref="d0/d27/a00239" startline="1612" endline="1658">CIccTagXmlMeasurement::ParseXml</referencedby>
        <referencedby refid="d4/d07/a01913_1a0117e79492f9a25f32df61b4beba6ebb" compoundref="d0/d27/a00239" startline="2044" endline="2177">CIccTagXmlSpectralViewingConditions::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1ab56d6af38aa473fa839b66890512fbec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string icGetPadSpace</definition>
        <argsstring>(double value)</argsstring>
        <name>icGetPadSpace</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="1513" column="19" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="1513" bodyend="1524"/>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1ad09756c3f2357a3e840c0ba731738379" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1ad596b62f264ef4846d435b494c8d2a77" kindref="member">icRenderingIntent</ref></type>
        <definition>icRenderingIntent icGetRenderingIntentValue</definition>
        <argsstring>(const icChar *szRenderingIntent)</argsstring>
        <name>icGetRenderingIntentValue</name>
        <param>
          <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
          <declname>szRenderingIntent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="1127" column="19" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="1127" bodyend="1139"/>
        <references refid="d7/d46/a00002_1ad596b62f264ef4846d435b494c8d2a77ae6136c556a175effd2e35cb1db5ff944" compoundref="d7/d46/a00002" startline="1147">icAbsoluteColorimetric</references>
        <references refid="d7/d46/a00002_1ad596b62f264ef4846d435b494c8d2a77a300c7e86384819a2318614c61c20a112" compoundref="d7/d46/a00002" startline="1143">icPerceptual</references>
        <references refid="d7/d46/a00002_1ad596b62f264ef4846d435b494c8d2a77a64d6354071e8f3d7b461202675e755cb" compoundref="d7/d46/a00002" startline="1144">icRelativeColorimetric</references>
        <references refid="d7/d46/a00002_1ad596b62f264ef4846d435b494c8d2a77ae73fda5aaf64986600eb12f2f41e85f3" compoundref="d7/d46/a00002" startline="1146">icSaturation</references>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a9c8f67b712d7d370a26c759e8afbce2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
        <definition>const icChar * icGetStandardObserverName</definition>
        <argsstring>(icStandardObserver str)</argsstring>
        <name>icGetStandardObserverName</name>
        <param>
          <type><ref refid="d7/d46/a00002_1af513aa5d6844f10ca9aa78ad5fa7859b" kindref="member">icStandardObserver</ref></type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="1295" column="14" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="1295" bodyend="1310"/>
        <references refid="d7/d46/a00002_1af513aa5d6844f10ca9aa78ad5fa7859ba75bc24faaa2326e527a38382dc626ab8" compoundref="d7/d46/a00002" startline="1177">icStdObs1931TwoDegrees</references>
        <references refid="d7/d46/a00002_1af513aa5d6844f10ca9aa78ad5fa7859ba56d2f4a07f7b0624a6aab2a9b9d62b43" compoundref="d7/d46/a00002" startline="1178">icStdObs1964TenDegrees</references>
        <references refid="d7/d46/a00002_1af513aa5d6844f10ca9aa78ad5fa7859ba363218b26c81ee65a62869b50aae371e" compoundref="d7/d46/a00002" startline="1176">icStdObsUnknown</references>
        <referencedby refid="de/d9f/a01881_1a943c0e19163087a7e59350c75b14491c" compoundref="d0/d27/a00239" startline="1587" endline="1609">CIccTagXmlMeasurement::ToXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1aafe4a2ab443888507597a7b0bb31290e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref></type>
        <definition>icTagSignature icGetTagNameSig</definition>
        <argsstring>(const icChar *szName)</argsstring>
        <name>icGetTagNameSig</name>
        <param>
          <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
          <declname>szName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="1169" column="16" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="1169" bodyend="1172"/>
        <references refid="da/dd8/a01265_1a95e4fcd099488e0b460153b9c2237c6d" compoundref="d8/d41/a00038" startline="306" endline="309">CIccTagCreator::GetTagNameSig</references>
        <referencedby refid="d6/d27/a01781_1abf34239bc20b8c58e1940bd4b132b659" compoundref="dd/dd7/a00248" startline="574" endline="797">CIccProfileXml::ParseTag</referencedby>
        <referencedby refid="db/d49/a01969_1adc66f52cad265a25289afdf71b69dcc7" compoundref="d0/d27/a00239" startline="4496" endline="4666">CIccTagXmlStruct::ParseTag</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1aad9c9a8b3a0e06f659b0ce5b1631810a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
        <definition>const icChar * icGetTagSigName</definition>
        <argsstring>(icTagSignature tagTypeSig)</argsstring>
        <name>icGetTagSigName</name>
        <param>
          <type><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref></type>
          <declname>tagTypeSig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="1158" column="14" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="1158" bodyend="1167"/>
        <references refid="da/dd8/a01265_1a7c59cb6e6fcce1dae966cbad6d95b9fe" compoundref="d8/d41/a00038" startline="292" endline="293">CIccTagCreator::GetTagSigName</references>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a9df441a57e3659e7ae404779feaea9a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
        <definition>const icChar * icGetTagSigTypeName</definition>
        <argsstring>(icTagTypeSignature tagTypeSig)</argsstring>
        <name>icGetTagSigTypeName</name>
        <param>
          <type><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref></type>
          <declname>tagTypeSig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="1141" column="14" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="1141" bodyend="1150"/>
        <references refid="da/dd8/a01265_1aa6aef9f6c963c17afc3f4d40b5d71f3a" compoundref="d8/d41/a00038" startline="322" endline="323">CIccTagCreator::GetTagTypeSigName</references>
        <referencedby refid="d0/d27/a00239_1a5e18ab5a318311f6b8e807ae44b7ed45" compoundref="d0/d27/a00239" startline="2181" endline="2255">icProfDescToXml</referencedby>
        <referencedby refid="d8/d98/a02009_1afd9f966c3a39c281716e5c06baf8770d" compoundref="dd/dd7/a00260" startline="1534" endline="1566">CIccMpeXmlTintArray::ToXml</referencedby>
        <referencedby refid="db/d49/a01969_1a8a1f6fe1c2db87a647aa00e2f98844e4" compoundref="d0/d27/a00239" startline="4363" endline="4478">CIccTagXmlStruct::ToXml</referencedby>
        <referencedby refid="d3/d59/a01973_1a90f7a44016b69c099ea5cb6b71772b0b" compoundref="d0/d27/a00239" startline="4734" endline="4788">CIccTagXmlArray::ToXml</referencedby>
        <referencedby refid="d6/d27/a01781_1a3fde5384cf19ae259cb72c3863f936b4" compoundref="dd/dd7/a00248" startline="82" endline="309">CIccProfileXml::ToXmlWithBlanks</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a7e4a8379f29fbaded2a4dd75b6222e55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref></type>
        <definition>icTagTypeSignature icGetTypeNameTagSig</definition>
        <argsstring>(const icChar *szTagType)</argsstring>
        <name>icGetTypeNameTagSig</name>
        <param>
          <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
          <declname>szTagType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="1152" column="20" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="1152" bodyend="1156"/>
        <references refid="da/dd8/a01265_1a659ff2074de1288b9654ce36e252a493" compoundref="d8/d41/a00038" startline="335" endline="338">CIccTagCreator::GetTagTypeNameSig</references>
        <referencedby refid="d0/d27/a00239_1a0f0f9f2d4fbf03932c3a2512b8d63410" compoundref="d0/d27/a00239" startline="2257" endline="2338">icXmlParseProfDesc</referencedby>
        <referencedby refid="d6/d27/a01781_1abf34239bc20b8c58e1940bd4b132b659" compoundref="dd/dd7/a00248" startline="574" endline="797">CIccProfileXml::ParseTag</referencedby>
        <referencedby refid="db/d49/a01969_1adc66f52cad265a25289afdf71b69dcc7" compoundref="d0/d27/a00239" startline="4496" endline="4666">CIccTagXmlStruct::ParseTag</referencedby>
        <referencedby refid="d8/d98/a02009_1a19998ce7d4f5678af3c3e2211292e9f6" compoundref="dd/dd7/a00260" startline="1569" endline="1643">CIccMpeXmlTintArray::ParseXml</referencedby>
        <referencedby refid="d3/d59/a01973_1abccc6c4d4ab6b62ac620371e1e5ab361" compoundref="d0/d27/a00239" startline="4791" endline="4907">CIccTagXmlArray::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a8fbbab9d547dd00d638bb85a1d6df35d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool icIsNumChar</definition>
        <argsstring>(char c)</argsstring>
        <name>icIsNumChar</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="912" column="20" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="912" bodyend="917"/>
        <referencedby refid="de/dd3/a01873_1a61e2c5ba24052fe6ef06555158cdefd6" compoundref="d5/d35/a00266" startline="989" endline="1031">CIccXmlArrayType&lt; T, Tsig &gt;::ParseText</referencedby>
        <referencedby refid="de/dd3/a01873_1abc41cc59bb211a642158d024731afb76" compoundref="d5/d35/a00266" startline="961" endline="986">CIccXmlArrayType&lt; T, Tsig &gt;::ParseTextCount</referencedby>
        <referencedby refid="de/dd3/a01873_1ab303f6345307dc7ee0f5e2f2aac3b2d4" compoundref="d5/d35/a00266" startline="922" endline="958">CIccXmlArrayType&lt; T, Tsig &gt;::ParseTextCountNum</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a5375769a600dcfbde6aa6b4a7f383ce5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * icUtf16ToUtf8</definition>
        <argsstring>(std::string &amp;buf, const icUInt16Number *szSrc, int sizeSrc)</argsstring>
        <name>icUtf16ToUtf8</name>
        <param>
          <type>std::string &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const <ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref> *</type>
          <declname>szSrc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sizeSrc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="341" column="12" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="341" bodyend="363"/>
        <references refid="d5/ddf/a00224_1a9475bff9709f2bff030ab67184e39bf2" compoundref="d5/ddf/a00224" startline="299" endline="365">icConvertUTF16toUTF8</references>
        <references refid="d3/d00/a00113_1afdfb6f5dac09ba1b8e138ad4f3a0abbbac7c2c3c32c7fbed195185e68879e550c" compoundref="d3/d00/a00113" startline="127">lenientConversion</references>
        <references refid="db/ddd/a02089_1a3b64269237eff9ec57b1adb8609b19fd" compoundref="d5/d35/a00266" startline="162" endline="168">CIccUTF16String::WStrlen</references>
        <referencedby refid="db/ddd/a02089_1a3103facd65438b09816f9b967567ad93" compoundref="d5/d35/a00266" startline="258" endline="261">CIccUTF16String::ToUtf8</referencedby>
        <referencedby refid="d7/db1/a01837_1a237b1ad09fe25ec7be340b0087a799ed" compoundref="d0/d27/a00239" startline="336" endline="378">CIccTagXmlTextDescription::ToXml</referencedby>
        <referencedby refid="d7/d9c/a01885_1a38e9548763954f73c29b8bc8ce0f5b5d" compoundref="d0/d27/a00239" startline="1660" endline="1678">CIccTagXmlMultiLocalizedUnicode::ToXml</referencedby>
        <referencedby refid="d2/d23/a01961_1a41908f2a338b06b71d5291aaa8ac1532" compoundref="d0/d27/a00239" startline="4134" endline="4173">CIccTagXmlProfileSequenceId::ToXml</referencedby>
        <referencedby refid="d6/d9a/a01965_1a392a644105c454e2f0aa9b9b7b69a6d6" compoundref="d0/d27/a00239" startline="4219" endline="4277">CIccTagXmlDict::ToXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a17f6cde39ef474623e3b1082566bb5d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * icUtf8ToAnsi</definition>
        <argsstring>(std::string &amp;buf, const char *szSrc)</argsstring>
        <name>icUtf8ToAnsi</name>
        <param>
          <type>std::string &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szSrc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="397" column="12" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="397" bodyend="420"/>
        <referencedby refid="d0/d27/a00239_1a27a49e117d637e0073ff82ff83e0ed17" compoundref="d0/d27/a00239" startline="180" endline="251">icXmlParseTextString</referencedby>
        <referencedby refid="d7/db1/a01837_1a90eeefd13346d44fe87970c91ca28287" compoundref="d0/d27/a00239" startline="381" endline="565">CIccTagXmlTextDescription::ParseXml</referencedby>
        <referencedby refid="da/d8c/a01845_1afc82bcf77ee741c29ea0679efa73cbdd" compoundref="d0/d27/a00239" startline="721" endline="877">CIccTagXmlNamedColor2::ParseXml</referencedby>
        <referencedby refid="d5/d99/a01901_1a1433cb8568d5b783eee6628c539a9097" compoundref="d0/d27/a00239" startline="1834" endline="1883">CIccTagXmlColorantTable::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a7e9c5de46dd2e23ed3ce85f7802cae12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const unsigned short *</type>
        <definition>const unsigned short * icUtf8ToUtf16</definition>
        <argsstring>(CIccUTF16String &amp;buf, const char *szSrc, int sizeSrc)</argsstring>
        <name>icUtf8ToUtf16</name>
        <param>
          <type><ref refid="db/ddd/a02089" kindref="compound">CIccUTF16String</ref> &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szSrc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sizeSrc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="365" column="22" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="365" bodyend="370"/>
        <references refid="db/ddd/a02089_1ac7629e2161d7ada902d83eb93945ebcd" compoundref="d9/d39/a00257" startline="93" endline="93">CIccUTF16String::c_str</references>
        <references refid="db/ddd/a02089_1a6974e5dc49b8069799812361ae3d764d" compoundref="d5/d35/a00266" startline="223" endline="256">CIccUTF16String::FromUtf8</references>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1acd7c60d9436e5019c7bc25db7fd0a77a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * icXmlAttrValue</definition>
        <argsstring>(xmlAttr *attr, const char *szDefault)</argsstring>
        <name>icXmlAttrValue</name>
        <param>
          <type>xmlAttr *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szDefault</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="572" column="12" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="572" bodyend="578"/>
        <referencedby refid="dd/dd7/a00260_1a7c5a7e91d27be931c8067c38c7f17ea6" compoundref="d0/d27/a00239" startline="3327" endline="3791">icCLutFromXml</referencedby>
        <referencedby refid="d9/d39/a00257_1ab515209dc98599451e8def16c2cdee32" compoundref="d5/d35/a00266" startline="1344" endline="1375">icGetDeviceAttrValue</referencedby>
        <referencedby refid="d0/d27/a00239_1ac1a584ae1478d58b3578ae2b7c3dc10c" compoundref="d0/d27/a00239" startline="3301" endline="3325">icMatrixFromXml</referencedby>
        <referencedby refid="d0/d27/a00239_1abb2a2c1c6eec43dfdc6cea84fe88a77f" compoundref="d0/d27/a00239" startline="3793" endline="3858">icMBBFromXml</referencedby>
        <referencedby refid="d9/d39/a00257_1a459e22a536debe98c547657efa20b5ca" compoundref="d5/d35/a00266" startline="580" endline="587">icXmlAttrValue</referencedby>
        <referencedby refid="dd/dd7/a00260_1a539f9b308a780ec7fadf73e076292ff9" compoundref="dd/dd7/a00260" startline="2093" endline="2160">icXmlParseColorAppearanceParams</referencedby>
        <referencedby refid="d6/d27/a01781_1ac2e86ed8d2e31113e5ef612ee29ed712" compoundref="dd/dd7/a00248" startline="333" endline="555">CIccProfileXml::ParseBasic</referencedby>
        <referencedby refid="d2/d6f/a01957_1a09408c36528ddcd6177b41b0d08614ea" compoundref="d0/d27/a00239" startline="4036" endline="4086">CIccTagXmlMultiProcessElement::ParseElement</referencedby>
        <referencedby refid="d8/de6/a02061_1a71ab517362b15ce1f2e189a3c830d439" compoundref="dd/dd7/a00260" startline="2341" endline="2618">CIccMpeXmlCalculator::ParseImport</referencedby>
        <referencedby refid="d6/d27/a01781_1abf34239bc20b8c58e1940bd4b132b659" compoundref="dd/dd7/a00248" startline="574" endline="797">CIccProfileXml::ParseTag</referencedby>
        <referencedby refid="db/d49/a01969_1adc66f52cad265a25289afdf71b69dcc7" compoundref="d0/d27/a00239" startline="4496" endline="4666">CIccTagXmlStruct::ParseTag</referencedby>
        <referencedby refid="d4/dc6/a01793_1acb3c0c9f73139cd186a0d7fd43c3669e" compoundref="dd/dd7/a00260" startline="193" endline="255">CIccFormulaCurveSegmentXml::ParseXml</referencedby>
        <referencedby refid="d4/dd1/a01797_1a17951bffcfa1b0cc3494411d61ba6fb5" compoundref="dd/dd7/a00260" startline="286" endline="505">CIccSampledCurveSegmentXml::ParseXml</referencedby>
        <referencedby refid="d2/d42/a01801_1a4b104659e9a0beb8c36c0f165c07b43f" compoundref="dd/dd7/a00260" startline="554" endline="599">CIccSampledCalculatorCurveXml::ParseXml</referencedby>
        <referencedby refid="d7/d62/a01805_1aa6fcb8735d6aa3f1e104778862dfeb6d" compoundref="dd/dd7/a00260" startline="636" endline="961">CIccSinglSampledeCurveXml::ParseXml</referencedby>
        <referencedby refid="d8/d98/a02009_1a19998ce7d4f5678af3c3e2211292e9f6" compoundref="dd/dd7/a00260" startline="1569" endline="1643">CIccMpeXmlTintArray::ParseXml</referencedby>
        <referencedby refid="d1/dc5/a02013_1a67d52136c7b6a56968bfab8d22dfecb6" compoundref="dd/dd7/a00260" startline="1681" endline="1726">CIccXmlToneMapFunc::ParseXml</referencedby>
        <referencedby refid="da/d8c/a01845_1afc82bcf77ee741c29ea0679efa73cbdd" compoundref="d0/d27/a00239" startline="721" endline="877">CIccTagXmlNamedColor2::ParseXml</referencedby>
        <referencedby refid="db/dd4/a01849_1ad1128c315377cd9d17f38fb32f6a221d" compoundref="d0/d27/a00239" startline="895" endline="924">CIccTagXmlXYZ::ParseXml</referencedby>
        <referencedby refid="db/d6b/a01853_1a49d8593f3fb56d4d0d418ede2184fa79" compoundref="d0/d27/a00239" startline="946" endline="980">CIccTagXmlChromaticity::ParseXml</referencedby>
        <referencedby refid="de/d51/a01857_1a01fdca7df355b1fd4f8d322d5e15ba47" compoundref="d0/d27/a00239" startline="996" endline="1027">CIccTagXmlCicp::ParseXml</referencedby>
        <referencedby refid="d6/d56/a01861_1ad1bd79a785003f26fbaa470222c12ea7" compoundref="d0/d27/a00239" startline="1070" endline="1204">CIccTagXmlSparseMatrixArray::ParseXml</referencedby>
        <referencedby refid="de/d9f/a01881_1a157b1263fdf8de283af4d229d2e4bd94" compoundref="d0/d27/a00239" startline="1612" endline="1658">CIccTagXmlMeasurement::ParseXml</referencedby>
        <referencedby refid="d7/d9c/a01885_1adcb1238d1761fc5a61a03df9bcdfa18e" compoundref="d0/d27/a00239" startline="1681" endline="1709">CIccTagXmlMultiLocalizedUnicode::ParseXml</referencedby>
        <referencedby refid="d5/d99/a01901_1a1433cb8568d5b783eee6628c539a9097" compoundref="d0/d27/a00239" startline="1834" endline="1883">CIccTagXmlColorantTable::ParseXml</referencedby>
        <referencedby refid="d9/d65/a01905_1a506a0dfd74a95a70e8ac7eb805aff014" compoundref="d0/d27/a00239" startline="1905" endline="1957">CIccTagXmlViewingConditions::ParseXml</referencedby>
        <referencedby refid="d4/d07/a01913_1a0117e79492f9a25f32df61b4beba6ebb" compoundref="d0/d27/a00239" startline="2044" endline="2177">CIccTagXmlSpectralViewingConditions::ParseXml</referencedby>
        <referencedby refid="dc/da7/a01933_1a3ac52dc4008e07a54f88b930fa0365c8" compoundref="d0/d27/a00239" startline="2996" endline="3039">CIccTagXmlParametricCurve::ParseXml</referencedby>
        <referencedby refid="d2/d6f/a01957_1a9fc2116a88d2d5ea8009ad4bc5154942" compoundref="d0/d27/a00239" startline="4089" endline="4131">CIccTagXmlMultiProcessElement::ParseXml</referencedby>
        <referencedby refid="d2/d23/a01961_1afbaaee340011d5bd09960d699d352e14" compoundref="d0/d27/a00239" startline="4176" endline="4216">CIccTagXmlProfileSequenceId::ParseXml</referencedby>
        <referencedby refid="d6/d9a/a01965_1a88c29060c9f89f8b6033dcb3a535d4d4" compoundref="d0/d27/a00239" startline="4280" endline="4360">CIccTagXmlDict::ParseXml</referencedby>
        <referencedby refid="d3/d59/a01973_1abccc6c4d4ab6b62ac620371e1e5ab361" compoundref="d0/d27/a00239" startline="4791" endline="4907">CIccTagXmlArray::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a62ee87e8e51fd2fa28c48b25a5cf86da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * icXmlAttrValue</definition>
        <argsstring>(xmlNode *pNode, const char *szName, const char *szDefault)</argsstring>
        <name>icXmlAttrValue</name>
        <param>
          <type>xmlNode *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szDefault</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="580" column="12" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="580" bodyend="587"/>
        <references refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" compoundref="d5/d35/a00266" startline="572" endline="578">icXmlAttrValue</references>
        <references refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" compoundref="d5/d35/a00266" startline="669" endline="685">icXmlFindAttr</references>
        <referencedby refid="dd/dd7/a00260_1a7c5a7e91d27be931c8067c38c7f17ea6" compoundref="d0/d27/a00239" startline="3327" endline="3791">icCLutFromXml</referencedby>
        <referencedby refid="d0/d27/a00239_1a27a49e117d637e0073ff82ff83e0ed17" compoundref="d0/d27/a00239" startline="180" endline="251">icXmlParseTextString</referencedby>
        <referencedby refid="d6/d27/a01781_1abf34239bc20b8c58e1940bd4b132b659" compoundref="dd/dd7/a00248" startline="574" endline="797">CIccProfileXml::ParseTag</referencedby>
        <referencedby refid="db/d49/a01969_1adc66f52cad265a25289afdf71b69dcc7" compoundref="d0/d27/a00239" startline="4496" endline="4666">CIccTagXmlStruct::ParseTag</referencedby>
        <referencedby refid="dc/dc8/a01929_1a92fda6907dac46dc92bbafa9efa9d40b" compoundref="d0/d27/a00239" startline="2570" endline="2956">CIccTagXmlCurve::ParseXml</referencedby>
        <referencedby refid="d4/dc6/a01793_1acb3c0c9f73139cd186a0d7fd43c3669e" compoundref="dd/dd7/a00260" startline="193" endline="255">CIccFormulaCurveSegmentXml::ParseXml</referencedby>
        <referencedby refid="d4/dd1/a01797_1a17951bffcfa1b0cc3494411d61ba6fb5" compoundref="dd/dd7/a00260" startline="286" endline="505">CIccSampledCurveSegmentXml::ParseXml</referencedby>
        <referencedby refid="d7/d62/a01805_1aa6fcb8735d6aa3f1e104778862dfeb6d" compoundref="dd/dd7/a00260" startline="636" endline="961">CIccSinglSampledeCurveXml::ParseXml</referencedby>
        <referencedby refid="d0/d2b/a01997_1afd0de293c04c43de441a2152e800cf66" compoundref="dd/dd7/a00260" startline="107" endline="124">CIccMpeXmlUnknown::ParseXml</referencedby>
        <referencedby refid="d8/d24/a02001_1a2bc340753a906c5ac56b9c546359f436" compoundref="dd/dd7/a00260" startline="986" endline="1021">CIccSegmentedCurveXml::ParseXml</referencedby>
        <referencedby refid="d3/d39/a02005_1ab416b1d359f1a1d001a83ceeb3f579d1" compoundref="dd/dd7/a00260" startline="1126" endline="1180">CIccMpeXmlCurveSet::ParseXml</referencedby>
        <referencedby refid="d8/d98/a02009_1a19998ce7d4f5678af3c3e2211292e9f6" compoundref="dd/dd7/a00260" startline="1569" endline="1643">CIccMpeXmlTintArray::ParseXml</referencedby>
        <referencedby refid="d1/dc5/a02013_1a67d52136c7b6a56968bfab8d22dfecb6" compoundref="dd/dd7/a00260" startline="1681" endline="1726">CIccXmlToneMapFunc::ParseXml</referencedby>
        <referencedby refid="d0/dfd/a02017_1a37d0e2cd5456b14801f72b2181ccb94a" compoundref="dd/dd7/a00260" startline="1782" endline="1869">CIccMpeXmlToneMap::ParseXml</referencedby>
        <referencedby refid="d8/d45/a02021_1a1548b3217cbe964eab8e5bfff32af85b" compoundref="dd/dd7/a00260" startline="1236" endline="1278">CIccMpeXmlMatrix::ParseXml</referencedby>
        <referencedby refid="da/d3e/a02025_1a12bdfaf73489d4043eaef10a429cff0a" compoundref="dd/dd7/a00260" startline="1887" endline="1905">CIccMpeXmlCLUT::ParseXml</referencedby>
        <referencedby refid="d6/d19/a02029_1ad58a9eae57a40bbebbc8cfefe6f1e24f" compoundref="dd/dd7/a00260" startline="1927" endline="1948">CIccMpeXmlExtCLUT::ParseXml</referencedby>
        <referencedby refid="d6/d94/a02033_1a0accb98f250503e091797235b89e06c1" compoundref="dd/dd7/a00260" startline="1981" endline="2003">CIccMpeXmlBAcs::ParseXml</referencedby>
        <referencedby refid="dd/dfc/a02037_1a42deed0c1855bd1cbfa3c9a8ebc160e6" compoundref="dd/dd7/a00260" startline="2035" endline="2057">CIccMpeXmlEAcs::ParseXml</referencedby>
        <referencedby refid="d3/dea/a02041_1a80da7cd38a9645ba1a22a5b81e92af16" compoundref="dd/dd7/a00260" startline="2184" endline="2211">CIccMpeXmlJabToXYZ::ParseXml</referencedby>
        <referencedby refid="d7/d13/a02045_1a93de44beabef1e61b64a1bed175b28e2" compoundref="dd/dd7/a00260" startline="2235" endline="2262">CIccMpeXmlXYZToJab::ParseXml</referencedby>
        <referencedby refid="d8/de6/a02061_1aa49fb555bcc2fe5e5377f7d608368b94" compoundref="dd/dd7/a00260" startline="3080" endline="3177">CIccMpeXmlCalculator::ParseXml</referencedby>
        <referencedby refid="d0/d67/a02065_1aec428d59121847f8cee29f5d5530d0bd" compoundref="dd/dd7/a00260" startline="1343" endline="1405">CIccMpeXmlEmissionMatrix::ParseXml</referencedby>
        <referencedby refid="d3/d48/a02069_1a8e2cfe4334c50774e232bd5671b6b683" compoundref="dd/dd7/a00260" startline="1470" endline="1532">CIccMpeXmlInvEmissionMatrix::ParseXml</referencedby>
        <referencedby refid="de/df8/a02073_1aa5d45fb5b70d1e4895c876400c2ea344" compoundref="dd/dd7/a00260" startline="3221" endline="3291">CIccMpeXmlEmissionCLUT::ParseXml</referencedby>
        <referencedby refid="db/dac/a02077_1a96cc9696018abfed330d18170568536b" compoundref="dd/dd7/a00260" startline="3334" endline="3404">CIccMpeXmlReflectanceCLUT::ParseXml</referencedby>
        <referencedby refid="d2/d50/a02081_1a7a0dcf4d4c49e598d0710545f601cbfd" compoundref="dd/dd7/a00260" startline="3406" endline="3451">CIccMpeXmlEmissionObserver::ParseXml</referencedby>
        <referencedby refid="d2/dde/a02085_1aea6bb4f288917a8087c52ad06ddb486a" compoundref="dd/dd7/a00260" startline="3488" endline="3533">CIccMpeXmlReflectanceObserver::ParseXml</referencedby>
        <referencedby refid="d1/d20/a01813_1aee9f44f9fd888c70919cb498f913b54f" compoundref="d0/d27/a00239" startline="96" endline="121">CIccTagXmlUnknown::ParseXml</referencedby>
        <referencedby refid="d7/db1/a01837_1a90eeefd13346d44fe87970c91ca28287" compoundref="d0/d27/a00239" startline="381" endline="565">CIccTagXmlTextDescription::ParseXml</referencedby>
        <referencedby refid="da/d8c/a01845_1afc82bcf77ee741c29ea0679efa73cbdd" compoundref="d0/d27/a00239" startline="721" endline="877">CIccTagXmlNamedColor2::ParseXml</referencedby>
        <referencedby refid="d9/d63/a01877_1aef548e5ab696b113bf1158b5bbf36f0b" compoundref="d0/d27/a00239" startline="1463" endline="1578">CIccTagXmlFloatNum&lt; T, A, Tsig &gt;::ParseXml</referencedby>
        <referencedby refid="d9/d9b/a01889_1add635b1bc955516c006c481659c53aed" compoundref="d0/d27/a00239" startline="1729" endline="1747">CIccTagXmlTagData::ParseXml</referencedby>
        <referencedby refid="d5/d99/a01901_1a1433cb8568d5b783eee6628c539a9097" compoundref="d0/d27/a00239" startline="1834" endline="1883">CIccTagXmlColorantTable::ParseXml</referencedby>
        <referencedby refid="d9/d90/a01909_1a8de3d30fbcc00445ce544ae23fc47607" compoundref="d0/d27/a00239" startline="617" endline="652">CIccTagXmlSpectralDataInfo::ParseXml</referencedby>
        <referencedby refid="da/d6c/a01921_1a28ee8a1b0496d7c25a3f4ad7d2f95331" compoundref="d0/d27/a00239" startline="2424" endline="2494">CIccTagXmlResponseCurveSet16::ParseXml</referencedby>
        <referencedby refid="dc/da7/a01933_1a3ac52dc4008e07a54f88b930fa0365c8" compoundref="d0/d27/a00239" startline="2996" endline="3039">CIccTagXmlParametricCurve::ParseXml</referencedby>
        <referencedby refid="d2/d23/a01961_1afbaaee340011d5bd09960d699d352e14" compoundref="d0/d27/a00239" startline="4176" endline="4216">CIccTagXmlProfileSequenceId::ParseXml</referencedby>
        <referencedby refid="d6/d9a/a01965_1a88c29060c9f89f8b6033dcb3a535d4d4" compoundref="d0/d27/a00239" startline="4280" endline="4360">CIccTagXmlDict::ParseXml</referencedby>
        <referencedby refid="d5/d92/a01977_1a6e3095ab0d0da8f239228841c9f60233" compoundref="d0/d27/a00239" startline="4948" endline="5062">CIccTagXmlGamutBoundaryDesc::ParseXml</referencedby>
        <referencedby refid="df/db2/a01981_1a1f911f834c825441d4694595710bcf55" compoundref="d0/d27/a00239" startline="5099" endline="5162">CIccTagXmlEmbeddedHeightImage::ParseXml</referencedby>
        <referencedby refid="d3/def/a01985_1a40585eab56b698d0579d922b924997e9" compoundref="d0/d27/a00239" startline="5195" endline="5255">CIccTagXmlEmbeddedNormalImage::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1aac906ed45d63b044aa871d3366c05c6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref></type>
        <definition>icUInt32Number icXmlDumpHexData</definition>
        <argsstring>(std::string &amp;xml, std::string blanks, void *pBuf, icUInt32Number nBufSize)</argsstring>
        <name>icXmlDumpHexData</name>
        <param>
          <type>std::string &amp;</type>
          <declname>xml</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>blanks</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pBuf</declname>
        </param>
        <param>
          <type><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref></type>
          <declname>nBufSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="648" column="16" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="648" bodyend="667"/>
        <referencedby refid="d0/d27/a00239_1a99866e7756870ecb09e429ab2233f691" compoundref="d0/d27/a00239" startline="124" endline="144">icXmlDumpTextData</referencedby>
        <referencedby refid="d0/d2b/a01997_1afc27f607d1f137b32dad65b538714536" compoundref="dd/dd7/a00260" startline="83" endline="104">CIccMpeXmlUnknown::ToXml</referencedby>
        <referencedby refid="d6/d94/a02033_1ab99bd7712342c0d63b6cb2d545f13c9a" compoundref="dd/dd7/a00260" startline="1950" endline="1978">CIccMpeXmlBAcs::ToXml</referencedby>
        <referencedby refid="dd/dfc/a02037_1afeb82ef0fbc9b414a1d7131e0f08f037" compoundref="dd/dd7/a00260" startline="2006" endline="2032">CIccMpeXmlEAcs::ToXml</referencedby>
        <referencedby refid="d1/d20/a01813_1a0dfde7e786adbb11ce523c5a7b25a806" compoundref="d0/d27/a00239" startline="86" endline="93">CIccTagXmlUnknown::ToXml</referencedby>
        <referencedby refid="df/dee/a01825_1a99b62f8f9b01a7cc73b7ae61e22afd7e" compoundref="d0/d27/a00239" startline="156" endline="163">CIccTagXmlZipUtf8Text::ToXml</referencedby>
        <referencedby refid="d6/dbd/a01829_1aaa6a624e24c433cb8334c73d9e700ac6" compoundref="d0/d27/a00239" startline="165" endline="172">CIccTagXmlZipXml::ToXml</referencedby>
        <referencedby refid="d9/d9b/a01889_1a2f318f2c6da32de6933c397be1042eb4" compoundref="d0/d27/a00239" startline="1712" endline="1726">CIccTagXmlTagData::ToXml</referencedby>
        <referencedby refid="df/db2/a01981_1af99181d25030a6c9267f8d695ed05b30" compoundref="d0/d27/a00239" startline="5164" endline="5193">CIccTagXmlEmbeddedHeightImage::ToXml</referencedby>
        <referencedby refid="d3/def/a01985_1a26df4c9fce06a9898921b9e456960aac" compoundref="d0/d27/a00239" startline="5257" endline="5280">CIccTagXmlEmbeddedNormalImage::ToXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a57c0984fcae05f9fa17b70d1db38900c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>xmlAttr *</type>
        <definition>xmlAttr * icXmlFindAttr</definition>
        <argsstring>(xmlNode *pNode, const char *szAttrName)</argsstring>
        <name>icXmlFindAttr</name>
        <param>
          <type>xmlNode *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szAttrName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="669" column="9" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="669" bodyend="685"/>
        <referencedby refid="dd/dd7/a00260_1a7c5a7e91d27be931c8067c38c7f17ea6" compoundref="d0/d27/a00239" startline="3327" endline="3791">icCLutFromXml</referencedby>
        <referencedby refid="d9/d39/a00257_1ab515209dc98599451e8def16c2cdee32" compoundref="d5/d35/a00266" startline="1344" endline="1375">icGetDeviceAttrValue</referencedby>
        <referencedby refid="d0/d27/a00239_1ac1a584ae1478d58b3578ae2b7c3dc10c" compoundref="d0/d27/a00239" startline="3301" endline="3325">icMatrixFromXml</referencedby>
        <referencedby refid="d0/d27/a00239_1abb2a2c1c6eec43dfdc6cea84fe88a77f" compoundref="d0/d27/a00239" startline="3793" endline="3858">icMBBFromXml</referencedby>
        <referencedby refid="d9/d39/a00257_1a459e22a536debe98c547657efa20b5ca" compoundref="d5/d35/a00266" startline="580" endline="587">icXmlAttrValue</referencedby>
        <referencedby refid="dd/dd7/a00260_1a539f9b308a780ec7fadf73e076292ff9" compoundref="dd/dd7/a00260" startline="2093" endline="2160">icXmlParseColorAppearanceParams</referencedby>
        <referencedby refid="d6/d27/a01781_1ac2e86ed8d2e31113e5ef612ee29ed712" compoundref="dd/dd7/a00248" startline="333" endline="555">CIccProfileXml::ParseBasic</referencedby>
        <referencedby refid="d2/d6f/a01957_1a09408c36528ddcd6177b41b0d08614ea" compoundref="d0/d27/a00239" startline="4036" endline="4086">CIccTagXmlMultiProcessElement::ParseElement</referencedby>
        <referencedby refid="d8/de6/a02061_1a71ab517362b15ce1f2e189a3c830d439" compoundref="dd/dd7/a00260" startline="2341" endline="2618">CIccMpeXmlCalculator::ParseImport</referencedby>
        <referencedby refid="d6/d27/a01781_1abf34239bc20b8c58e1940bd4b132b659" compoundref="dd/dd7/a00248" startline="574" endline="797">CIccProfileXml::ParseTag</referencedby>
        <referencedby refid="db/d49/a01969_1adc66f52cad265a25289afdf71b69dcc7" compoundref="d0/d27/a00239" startline="4496" endline="4666">CIccTagXmlStruct::ParseTag</referencedby>
        <referencedby refid="d4/dc6/a01793_1acb3c0c9f73139cd186a0d7fd43c3669e" compoundref="dd/dd7/a00260" startline="193" endline="255">CIccFormulaCurveSegmentXml::ParseXml</referencedby>
        <referencedby refid="d4/dd1/a01797_1a17951bffcfa1b0cc3494411d61ba6fb5" compoundref="dd/dd7/a00260" startline="286" endline="505">CIccSampledCurveSegmentXml::ParseXml</referencedby>
        <referencedby refid="d2/d42/a01801_1a4b104659e9a0beb8c36c0f165c07b43f" compoundref="dd/dd7/a00260" startline="554" endline="599">CIccSampledCalculatorCurveXml::ParseXml</referencedby>
        <referencedby refid="d7/d62/a01805_1aa6fcb8735d6aa3f1e104778862dfeb6d" compoundref="dd/dd7/a00260" startline="636" endline="961">CIccSinglSampledeCurveXml::ParseXml</referencedby>
        <referencedby refid="d8/d98/a02009_1a19998ce7d4f5678af3c3e2211292e9f6" compoundref="dd/dd7/a00260" startline="1569" endline="1643">CIccMpeXmlTintArray::ParseXml</referencedby>
        <referencedby refid="d1/dc5/a02013_1a67d52136c7b6a56968bfab8d22dfecb6" compoundref="dd/dd7/a00260" startline="1681" endline="1726">CIccXmlToneMapFunc::ParseXml</referencedby>
        <referencedby refid="da/d8c/a01845_1afc82bcf77ee741c29ea0679efa73cbdd" compoundref="d0/d27/a00239" startline="721" endline="877">CIccTagXmlNamedColor2::ParseXml</referencedby>
        <referencedby refid="db/dd4/a01849_1ad1128c315377cd9d17f38fb32f6a221d" compoundref="d0/d27/a00239" startline="895" endline="924">CIccTagXmlXYZ::ParseXml</referencedby>
        <referencedby refid="db/d6b/a01853_1a49d8593f3fb56d4d0d418ede2184fa79" compoundref="d0/d27/a00239" startline="946" endline="980">CIccTagXmlChromaticity::ParseXml</referencedby>
        <referencedby refid="de/d51/a01857_1a01fdca7df355b1fd4f8d322d5e15ba47" compoundref="d0/d27/a00239" startline="996" endline="1027">CIccTagXmlCicp::ParseXml</referencedby>
        <referencedby refid="d6/d56/a01861_1ad1bd79a785003f26fbaa470222c12ea7" compoundref="d0/d27/a00239" startline="1070" endline="1204">CIccTagXmlSparseMatrixArray::ParseXml</referencedby>
        <referencedby refid="de/d9f/a01881_1a157b1263fdf8de283af4d229d2e4bd94" compoundref="d0/d27/a00239" startline="1612" endline="1658">CIccTagXmlMeasurement::ParseXml</referencedby>
        <referencedby refid="d7/d9c/a01885_1adcb1238d1761fc5a61a03df9bcdfa18e" compoundref="d0/d27/a00239" startline="1681" endline="1709">CIccTagXmlMultiLocalizedUnicode::ParseXml</referencedby>
        <referencedby refid="d5/d99/a01901_1a1433cb8568d5b783eee6628c539a9097" compoundref="d0/d27/a00239" startline="1834" endline="1883">CIccTagXmlColorantTable::ParseXml</referencedby>
        <referencedby refid="d9/d65/a01905_1a506a0dfd74a95a70e8ac7eb805aff014" compoundref="d0/d27/a00239" startline="1905" endline="1957">CIccTagXmlViewingConditions::ParseXml</referencedby>
        <referencedby refid="d4/d07/a01913_1a0117e79492f9a25f32df61b4beba6ebb" compoundref="d0/d27/a00239" startline="2044" endline="2177">CIccTagXmlSpectralViewingConditions::ParseXml</referencedby>
        <referencedby refid="dc/da7/a01933_1a3ac52dc4008e07a54f88b930fa0365c8" compoundref="d0/d27/a00239" startline="2996" endline="3039">CIccTagXmlParametricCurve::ParseXml</referencedby>
        <referencedby refid="d2/d6f/a01957_1a9fc2116a88d2d5ea8009ad4bc5154942" compoundref="d0/d27/a00239" startline="4089" endline="4131">CIccTagXmlMultiProcessElement::ParseXml</referencedby>
        <referencedby refid="d2/d23/a01961_1afbaaee340011d5bd09960d699d352e14" compoundref="d0/d27/a00239" startline="4176" endline="4216">CIccTagXmlProfileSequenceId::ParseXml</referencedby>
        <referencedby refid="d6/d9a/a01965_1a88c29060c9f89f8b6033dcb3a535d4d4" compoundref="d0/d27/a00239" startline="4280" endline="4360">CIccTagXmlDict::ParseXml</referencedby>
        <referencedby refid="d3/d59/a01973_1abccc6c4d4ab6b62ac620371e1e5ab361" compoundref="d0/d27/a00239" startline="4791" endline="4907">CIccTagXmlArray::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a73c51b42259052bca0b176744f8a6bae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>xmlNode *</type>
        <definition>xmlNode * icXmlFindNode</definition>
        <argsstring>(xmlNode *pNode, const char *szNodeName)</argsstring>
        <name>icXmlFindNode</name>
        <param>
          <type>xmlNode *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szNodeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="687" column="9" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="687" bodyend="701"/>
        <referencedby refid="dd/dd7/a00260_1a7c5a7e91d27be931c8067c38c7f17ea6" compoundref="d0/d27/a00239" startline="3327" endline="3791">icCLutFromXml</referencedby>
        <referencedby refid="d0/d27/a00239_1abb2a2c1c6eec43dfdc6cea84fe88a77f" compoundref="d0/d27/a00239" startline="3793" endline="3858">icMBBFromXml</referencedby>
        <referencedby refid="dd/dd7/a00260_1a539f9b308a780ec7fadf73e076292ff9" compoundref="dd/dd7/a00260" startline="2093" endline="2160">icXmlParseColorAppearanceParams</referencedby>
        <referencedby refid="d0/d27/a00239_1a0f0f9f2d4fbf03932c3a2512b8d63410" compoundref="d0/d27/a00239" startline="2257" endline="2338">icXmlParseProfDesc</referencedby>
        <referencedby refid="d6/d27/a01781_1ac2e86ed8d2e31113e5ef612ee29ed712" compoundref="dd/dd7/a00248" startline="333" endline="555">CIccProfileXml::ParseBasic</referencedby>
        <referencedby refid="d8/de6/a02061_1a71ab517362b15ce1f2e189a3c830d439" compoundref="dd/dd7/a00260" startline="2341" endline="2618">CIccMpeXmlCalculator::ParseImport</referencedby>
        <referencedby refid="dc/dc8/a01929_1a92fda6907dac46dc92bbafa9efa9d40b" compoundref="d0/d27/a00239" startline="2570" endline="2956">CIccTagXmlCurve::ParseXml</referencedby>
        <referencedby refid="d2/d42/a01801_1a4b104659e9a0beb8c36c0f165c07b43f" compoundref="dd/dd7/a00260" startline="554" endline="599">CIccSampledCalculatorCurveXml::ParseXml</referencedby>
        <referencedby refid="d0/dfd/a02017_1a37d0e2cd5456b14801f72b2181ccb94a" compoundref="dd/dd7/a00260" startline="1782" endline="1869">CIccMpeXmlToneMap::ParseXml</referencedby>
        <referencedby refid="d8/d45/a02021_1a1548b3217cbe964eab8e5bfff32af85b" compoundref="dd/dd7/a00260" startline="1236" endline="1278">CIccMpeXmlMatrix::ParseXml</referencedby>
        <referencedby refid="d3/dea/a02041_1a80da7cd38a9645ba1a22a5b81e92af16" compoundref="dd/dd7/a00260" startline="2184" endline="2211">CIccMpeXmlJabToXYZ::ParseXml</referencedby>
        <referencedby refid="d7/d13/a02045_1a93de44beabef1e61b64a1bed175b28e2" compoundref="dd/dd7/a00260" startline="2235" endline="2262">CIccMpeXmlXYZToJab::ParseXml</referencedby>
        <referencedby refid="d8/de6/a02061_1aa49fb555bcc2fe5e5377f7d608368b94" compoundref="dd/dd7/a00260" startline="3080" endline="3177">CIccMpeXmlCalculator::ParseXml</referencedby>
        <referencedby refid="d0/d67/a02065_1aec428d59121847f8cee29f5d5530d0bd" compoundref="dd/dd7/a00260" startline="1343" endline="1405">CIccMpeXmlEmissionMatrix::ParseXml</referencedby>
        <referencedby refid="d3/d48/a02069_1a8e2cfe4334c50774e232bd5671b6b683" compoundref="dd/dd7/a00260" startline="1470" endline="1532">CIccMpeXmlInvEmissionMatrix::ParseXml</referencedby>
        <referencedby refid="de/df8/a02073_1aa5d45fb5b70d1e4895c876400c2ea344" compoundref="dd/dd7/a00260" startline="3221" endline="3291">CIccMpeXmlEmissionCLUT::ParseXml</referencedby>
        <referencedby refid="db/dac/a02077_1a96cc9696018abfed330d18170568536b" compoundref="dd/dd7/a00260" startline="3334" endline="3404">CIccMpeXmlReflectanceCLUT::ParseXml</referencedby>
        <referencedby refid="d2/d50/a02081_1a7a0dcf4d4c49e598d0710545f601cbfd" compoundref="dd/dd7/a00260" startline="3406" endline="3451">CIccMpeXmlEmissionObserver::ParseXml</referencedby>
        <referencedby refid="d2/dde/a02085_1aea6bb4f288917a8087c52ad06ddb486a" compoundref="dd/dd7/a00260" startline="3488" endline="3533">CIccMpeXmlReflectanceObserver::ParseXml</referencedby>
        <referencedby refid="d6/d27/a01781_1af4605fcf803152d71090e6c668d8997a" compoundref="dd/dd7/a00248" startline="801" endline="826">CIccProfileXml::ParseXml</referencedby>
        <referencedby refid="d1/d20/a01813_1aee9f44f9fd888c70919cb498f913b54f" compoundref="d0/d27/a00239" startline="96" endline="121">CIccTagXmlUnknown::ParseXml</referencedby>
        <referencedby refid="d7/db1/a01837_1a90eeefd13346d44fe87970c91ca28287" compoundref="d0/d27/a00239" startline="381" endline="565">CIccTagXmlTextDescription::ParseXml</referencedby>
        <referencedby refid="d2/d5b/a01841_1a9b1f2dbf0af9bb05e4c92e5c6615ba56" compoundref="d0/d27/a00239" startline="581" endline="589">CIccTagXmlSignature::ParseXml</referencedby>
        <referencedby refid="da/d8c/a01845_1afc82bcf77ee741c29ea0679efa73cbdd" compoundref="d0/d27/a00239" startline="721" endline="877">CIccTagXmlNamedColor2::ParseXml</referencedby>
        <referencedby refid="db/d6b/a01853_1a49d8593f3fb56d4d0d418ede2184fa79" compoundref="d0/d27/a00239" startline="946" endline="980">CIccTagXmlChromaticity::ParseXml</referencedby>
        <referencedby refid="de/d51/a01857_1a01fdca7df355b1fd4f8d322d5e15ba47" compoundref="d0/d27/a00239" startline="996" endline="1027">CIccTagXmlCicp::ParseXml</referencedby>
        <referencedby refid="d6/d56/a01861_1ad1bd79a785003f26fbaa470222c12ea7" compoundref="d0/d27/a00239" startline="1070" endline="1204">CIccTagXmlSparseMatrixArray::ParseXml</referencedby>
        <referencedby refid="d5/da8/a01865_1a7f4971e529abcc48dd78c99d0eea5852" compoundref="d0/d27/a00239" startline="1270" endline="1295">CIccTagXmlFixedNum&lt; T, Tsig &gt;::ParseXml</referencedby>
        <referencedby refid="d8/d3a/a01869_1a62090daf2e66d15845d7f561e59df6b8" compoundref="d0/d27/a00239" startline="1355" endline="1383">CIccTagXmlNum&lt; T, A, Tsig &gt;::ParseXml</referencedby>
        <referencedby refid="d9/d63/a01877_1aef548e5ab696b113bf1158b5bbf36f0b" compoundref="d0/d27/a00239" startline="1463" endline="1578">CIccTagXmlFloatNum&lt; T, A, Tsig &gt;::ParseXml</referencedby>
        <referencedby refid="de/d9f/a01881_1a157b1263fdf8de283af4d229d2e4bd94" compoundref="d0/d27/a00239" startline="1612" endline="1658">CIccTagXmlMeasurement::ParseXml</referencedby>
        <referencedby refid="d7/d9c/a01885_1adcb1238d1761fc5a61a03df9bcdfa18e" compoundref="d0/d27/a00239" startline="1681" endline="1709">CIccTagXmlMultiLocalizedUnicode::ParseXml</referencedby>
        <referencedby refid="d9/d9b/a01889_1add635b1bc955516c006c481659c53aed" compoundref="d0/d27/a00239" startline="1729" endline="1747">CIccTagXmlTagData::ParseXml</referencedby>
        <referencedby refid="dd/d80/a01893_1ad5de92490a23f29b1f636918923cf281" compoundref="d0/d27/a00239" startline="1760" endline="1770">CIccTagXmlDateTime::ParseXml</referencedby>
        <referencedby refid="d9/d0c/a01897_1abb3915ff834b197b005e3314225bcdde" compoundref="d0/d27/a00239" startline="1789" endline="1806">CIccTagXmlColorantOrder::ParseXml</referencedby>
        <referencedby refid="d5/d99/a01901_1a1433cb8568d5b783eee6628c539a9097" compoundref="d0/d27/a00239" startline="1834" endline="1883">CIccTagXmlColorantTable::ParseXml</referencedby>
        <referencedby refid="d9/d65/a01905_1a506a0dfd74a95a70e8ac7eb805aff014" compoundref="d0/d27/a00239" startline="1905" endline="1957">CIccTagXmlViewingConditions::ParseXml</referencedby>
        <referencedby refid="d9/d90/a01909_1a8de3d30fbcc00445ce544ae23fc47607" compoundref="d0/d27/a00239" startline="617" endline="652">CIccTagXmlSpectralDataInfo::ParseXml</referencedby>
        <referencedby refid="d4/d07/a01913_1a0117e79492f9a25f32df61b4beba6ebb" compoundref="d0/d27/a00239" startline="2044" endline="2177">CIccTagXmlSpectralViewingConditions::ParseXml</referencedby>
        <referencedby refid="d2/d54/a01917_1a0b8bea51eaf695cd51933826c97e342f" compoundref="d0/d27/a00239" startline="2357" endline="2379">CIccTagXmlProfileSeqDesc::ParseXml</referencedby>
        <referencedby refid="da/d6c/a01921_1a28ee8a1b0496d7c25a3f4ad7d2f95331" compoundref="d0/d27/a00239" startline="2424" endline="2494">CIccTagXmlResponseCurveSet16::ParseXml</referencedby>
        <referencedby refid="dc/da7/a01933_1a3ac52dc4008e07a54f88b930fa0365c8" compoundref="d0/d27/a00239" startline="2996" endline="3039">CIccTagXmlParametricCurve::ParseXml</referencedby>
        <referencedby refid="d9/d17/a01937_1a00dfc958c87aaf5c7840028fbba29959" compoundref="d0/d27/a00239" startline="3077" endline="3098">CIccTagXmlSegmentedCurve::ParseXml</referencedby>
        <referencedby refid="d2/d6f/a01957_1a9fc2116a88d2d5ea8009ad4bc5154942" compoundref="d0/d27/a00239" startline="4089" endline="4131">CIccTagXmlMultiProcessElement::ParseXml</referencedby>
        <referencedby refid="d2/d23/a01961_1afbaaee340011d5bd09960d699d352e14" compoundref="d0/d27/a00239" startline="4176" endline="4216">CIccTagXmlProfileSequenceId::ParseXml</referencedby>
        <referencedby refid="d6/d9a/a01965_1a88c29060c9f89f8b6033dcb3a535d4d4" compoundref="d0/d27/a00239" startline="4280" endline="4360">CIccTagXmlDict::ParseXml</referencedby>
        <referencedby refid="db/d49/a01969_1a4bf99f4ff03849bb6c1a13c7967aeb6c" compoundref="d0/d27/a00239" startline="4669" endline="4732">CIccTagXmlStruct::ParseXml</referencedby>
        <referencedby refid="d3/d59/a01973_1abccc6c4d4ab6b62ac620371e1e5ab361" compoundref="d0/d27/a00239" startline="4791" endline="4907">CIccTagXmlArray::ParseXml</referencedby>
        <referencedby refid="d5/d92/a01977_1a6e3095ab0d0da8f239228841c9f60233" compoundref="d0/d27/a00239" startline="4948" endline="5062">CIccTagXmlGamutBoundaryDesc::ParseXml</referencedby>
        <referencedby refid="df/db2/a01981_1a1f911f834c825441d4694595710bcf55" compoundref="d0/d27/a00239" startline="5099" endline="5162">CIccTagXmlEmbeddedHeightImage::ParseXml</referencedby>
        <referencedby refid="d3/def/a01985_1a40585eab56b698d0579d922b924997e9" compoundref="d0/d27/a00239" startline="5195" endline="5255">CIccTagXmlEmbeddedNormalImage::ParseXml</referencedby>
        <referencedby refid="dc/d67/a01989_1ae48ad89db3a44ccf101482acece44bdc" compoundref="d0/d27/a00239" startline="5064" endline="5086">CIccTagXmlEmbeddedProfile::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a87a808865a486a3d8e332d0a73806817" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref></type>
        <definition>icUInt32Number icXmlGetChildSigVal</definition>
        <argsstring>(xmlNode *pNode)</argsstring>
        <name>icXmlGetChildSigVal</name>
        <param>
          <type>xmlNode *</type>
          <declname>pNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="589" column="16" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="589" bodyend="595"/>
        <references refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" compoundref="d5/db1/a00140" startline="1258" endline="1300">icGetSigVal</references>
        <referencedby refid="d6/d27/a01781_1ac2e86ed8d2e31113e5ef612ee29ed712" compoundref="dd/dd7/a00248" startline="333" endline="555">CIccProfileXml::ParseBasic</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a7e2e6f47df3c6baacbda01035dfbbbee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref></type>
        <definition>icUInt32Number icXmlGetHexData</definition>
        <argsstring>(void *pBuf, const char *szText, icUInt32Number nBufSize)</argsstring>
        <name>icXmlGetHexData</name>
        <param>
          <type>void *</type>
          <declname>pBuf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szText</declname>
        </param>
        <param>
          <type><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref></type>
          <declname>nBufSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="609" column="16" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="609" bodyend="628"/>
        <references refid="d5/d35/a00266_1ac9541b1c483019737e7f4c23bc5c1b09" compoundref="d5/d35/a00266" startline="597" endline="606">hexValue</references>
        <referencedby refid="d0/d27/a00239_1a27a49e117d637e0073ff82ff83e0ed17" compoundref="d0/d27/a00239" startline="180" endline="251">icXmlParseTextString</referencedby>
        <referencedby refid="d6/d27/a01781_1ac2e86ed8d2e31113e5ef612ee29ed712" compoundref="dd/dd7/a00248" startline="333" endline="555">CIccProfileXml::ParseBasic</referencedby>
        <referencedby refid="d0/d2b/a01997_1afd0de293c04c43de441a2152e800cf66" compoundref="dd/dd7/a00260" startline="107" endline="124">CIccMpeXmlUnknown::ParseXml</referencedby>
        <referencedby refid="d6/d94/a02033_1a0accb98f250503e091797235b89e06c1" compoundref="dd/dd7/a00260" startline="1981" endline="2003">CIccMpeXmlBAcs::ParseXml</referencedby>
        <referencedby refid="dd/dfc/a02037_1a42deed0c1855bd1cbfa3c9a8ebc160e6" compoundref="dd/dd7/a00260" startline="2035" endline="2057">CIccMpeXmlEAcs::ParseXml</referencedby>
        <referencedby refid="d1/d20/a01813_1aee9f44f9fd888c70919cb498f913b54f" compoundref="d0/d27/a00239" startline="96" endline="121">CIccTagXmlUnknown::ParseXml</referencedby>
        <referencedby refid="df/dee/a01825_1ab4d07b5329f5b3ce766c74386483f4aa" compoundref="d0/d27/a00239" startline="275" endline="298">CIccTagXmlZipUtf8Text::ParseXml</referencedby>
        <referencedby refid="d6/dbd/a01829_1aa486edc3eb28f3c08aaa29ccdf056f65" compoundref="d0/d27/a00239" startline="300" endline="323">CIccTagXmlZipXml::ParseXml</referencedby>
        <referencedby refid="d7/db1/a01837_1a90eeefd13346d44fe87970c91ca28287" compoundref="d0/d27/a00239" startline="381" endline="565">CIccTagXmlTextDescription::ParseXml</referencedby>
        <referencedby refid="d9/d9b/a01889_1add635b1bc955516c006c481659c53aed" compoundref="d0/d27/a00239" startline="1729" endline="1747">CIccTagXmlTagData::ParseXml</referencedby>
        <referencedby refid="d2/d23/a01961_1afbaaee340011d5bd09960d699d352e14" compoundref="d0/d27/a00239" startline="4176" endline="4216">CIccTagXmlProfileSequenceId::ParseXml</referencedby>
        <referencedby refid="df/db2/a01981_1a1f911f834c825441d4694595710bcf55" compoundref="d0/d27/a00239" startline="5099" endline="5162">CIccTagXmlEmbeddedHeightImage::ParseXml</referencedby>
        <referencedby refid="d3/def/a01985_1a40585eab56b698d0579d922b924997e9" compoundref="d0/d27/a00239" startline="5195" endline="5255">CIccTagXmlEmbeddedNormalImage::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a4798bcdc271228ef7083a57412803e06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref></type>
        <definition>icUInt32Number icXmlGetHexDataSize</definition>
        <argsstring>(const char *szText)</argsstring>
        <name>icXmlGetHexDataSize</name>
        <param>
          <type>const char *</type>
          <declname>szText</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="630" column="16" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="630" bodyend="646"/>
        <references refid="d5/d35/a00266_1ac9541b1c483019737e7f4c23bc5c1b09" compoundref="d5/d35/a00266" startline="597" endline="606">hexValue</references>
        <referencedby refid="d0/d27/a00239_1a27a49e117d637e0073ff82ff83e0ed17" compoundref="d0/d27/a00239" startline="180" endline="251">icXmlParseTextString</referencedby>
        <referencedby refid="d0/d2b/a01997_1afd0de293c04c43de441a2152e800cf66" compoundref="dd/dd7/a00260" startline="107" endline="124">CIccMpeXmlUnknown::ParseXml</referencedby>
        <referencedby refid="d6/d94/a02033_1a0accb98f250503e091797235b89e06c1" compoundref="dd/dd7/a00260" startline="1981" endline="2003">CIccMpeXmlBAcs::ParseXml</referencedby>
        <referencedby refid="dd/dfc/a02037_1a42deed0c1855bd1cbfa3c9a8ebc160e6" compoundref="dd/dd7/a00260" startline="2035" endline="2057">CIccMpeXmlEAcs::ParseXml</referencedby>
        <referencedby refid="d1/d20/a01813_1aee9f44f9fd888c70919cb498f913b54f" compoundref="d0/d27/a00239" startline="96" endline="121">CIccTagXmlUnknown::ParseXml</referencedby>
        <referencedby refid="df/dee/a01825_1ab4d07b5329f5b3ce766c74386483f4aa" compoundref="d0/d27/a00239" startline="275" endline="298">CIccTagXmlZipUtf8Text::ParseXml</referencedby>
        <referencedby refid="d6/dbd/a01829_1aa486edc3eb28f3c08aaa29ccdf056f65" compoundref="d0/d27/a00239" startline="300" endline="323">CIccTagXmlZipXml::ParseXml</referencedby>
        <referencedby refid="d9/d9b/a01889_1add635b1bc955516c006c481659c53aed" compoundref="d0/d27/a00239" startline="1729" endline="1747">CIccTagXmlTagData::ParseXml</referencedby>
        <referencedby refid="df/db2/a01981_1a1f911f834c825441d4694595710bcf55" compoundref="d0/d27/a00239" startline="5099" endline="5162">CIccTagXmlEmbeddedHeightImage::ParseXml</referencedby>
        <referencedby refid="d3/def/a01985_1a40585eab56b698d0579d922b924997e9" compoundref="d0/d27/a00239" startline="5195" endline="5255">CIccTagXmlEmbeddedNormalImage::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a4020a24172a2a573879d8cb257522a72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref></type>
        <definition>icUInt32Number icXmlNodeCount</definition>
        <argsstring>(xmlNode *pNode, const char *szNodeName)</argsstring>
        <name>icXmlNodeCount</name>
        <param>
          <type>xmlNode *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szNodeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="703" column="16" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="703" bodyend="713"/>
        <referencedby refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" compoundref="d5/d35/a00266" startline="1034" endline="1098">CIccXmlArrayType&lt; T, Tsig &gt;::ParseArray</referencedby>
        <referencedby refid="de/dd3/a01873_1a07d799736e57c092e6b375e4b197c75c" compoundref="d5/d35/a00266" startline="755" endline="780">CIccXmlArrayType&lt; T, Tsig &gt;::ParseArray</referencedby>
        <referencedby refid="db/dd4/a01849_1ad1128c315377cd9d17f38fb32f6a221d" compoundref="d0/d27/a00239" startline="895" endline="924">CIccTagXmlXYZ::ParseXml</referencedby>
        <referencedby refid="db/d6b/a01853_1a49d8593f3fb56d4d0d418ede2184fa79" compoundref="d0/d27/a00239" startline="946" endline="980">CIccTagXmlChromaticity::ParseXml</referencedby>
        <referencedby refid="d9/d0c/a01897_1abb3915ff834b197b005e3314225bcdde" compoundref="d0/d27/a00239" startline="1789" endline="1806">CIccTagXmlColorantOrder::ParseXml</referencedby>
        <referencedby refid="d5/d99/a01901_1a1433cb8568d5b783eee6628c539a9097" compoundref="d0/d27/a00239" startline="1834" endline="1883">CIccTagXmlColorantTable::ParseXml</referencedby>
        <referencedby refid="da/d6c/a01921_1a28ee8a1b0496d7c25a3f4ad7d2f95331" compoundref="d0/d27/a00239" startline="2424" endline="2494">CIccTagXmlResponseCurveSet16::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a68636108399b3bff85169df00e99c9a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref></type>
        <definition>icUInt32Number icXmlNodeCount2</definition>
        <argsstring>(xmlNode *pNode, const char *szNodeName1, const char *szNodeName2)</argsstring>
        <name>icXmlNodeCount2</name>
        <param>
          <type>xmlNode *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szNodeName1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szNodeName2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="715" column="16" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="715" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a2a556605d5fd8e4ff5ab461f13e64c55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref></type>
        <definition>icUInt32Number icXmlNodeCount3</definition>
        <argsstring>(xmlNode *pNode, const char *szNodeName1, const char *szNodeName2, const char *szNodeName3)</argsstring>
        <name>icXmlNodeCount3</name>
        <param>
          <type>xmlNode *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szNodeName1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szNodeName2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szNodeName3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="727" column="16" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="727" bodyend="737"/>
        <referencedby refid="da/d8c/a01845_1afc82bcf77ee741c29ea0679efa73cbdd" compoundref="d0/d27/a00239" startline="721" endline="877">CIccTagXmlNamedColor2::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1adcdfdaf459a03f1af0222d62af59ed3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref></type>
        <definition>icFloatNumber icXmlStrToFloat</definition>
        <argsstring>(const xmlChar *szStr)</argsstring>
        <name>icXmlStrToFloat</name>
        <param>
          <type>const xmlChar *</type>
          <declname>szStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="559" column="15" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="559" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1aeb7c91622f164201b2a5a0afe9cd3848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1a67fa1b773fad35303680761ee5ef9313" kindref="member">icSignature</ref></type>
        <definition>icSignature icXmlStrToSig</definition>
        <argsstring>(const char *szStr)</argsstring>
        <name>icXmlStrToSig</name>
        <param>
          <type>const char *</type>
          <declname>szStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccUtilXml.cpp" line="567" column="13" bodyfile="IccXML/IccLibXML/IccUtilXml.cpp" bodystart="567" bodyend="570"/>
        <references refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" compoundref="d5/db1/a00140" startline="1258" endline="1300">icGetSigVal</references>
        <referencedby refid="d0/d27/a00239_1a0f0f9f2d4fbf03932c3a2512b8d63410" compoundref="d0/d27/a00239" startline="2257" endline="2338">icXmlParseProfDesc</referencedby>
        <referencedby refid="d0/d2b/a01997_1afd0de293c04c43de441a2152e800cf66" compoundref="dd/dd7/a00260" startline="107" endline="124">CIccMpeXmlUnknown::ParseXml</referencedby>
        <referencedby refid="d6/d94/a02033_1a0accb98f250503e091797235b89e06c1" compoundref="dd/dd7/a00260" startline="1981" endline="2003">CIccMpeXmlBAcs::ParseXml</referencedby>
        <referencedby refid="dd/dfc/a02037_1a42deed0c1855bd1cbfa3c9a8ebc160e6" compoundref="dd/dd7/a00260" startline="2035" endline="2057">CIccMpeXmlEAcs::ParseXml</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>File: <ref refid="d5/d35/a00266" kindref="compound">IccUtilXml.cpp</ref></para>
<para>Contains: Implementation of XML conversion utilities</para>
<para>Version: V1</para>
<para>Copyright: (c) see ICC Software License </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>ICC<sp/>Software<sp/>License,<sp/>Version<sp/>0.2</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2003-2012<sp/>The<sp/>International<sp/>Color<sp/>Consortium.<sp/>All<sp/>rights<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>3.<sp/>In<sp/>the<sp/>absence<sp/>of<sp/>prior<sp/>written<sp/>permission,<sp/>the<sp/>names<sp/>&quot;ICC&quot;<sp/>and<sp/>&quot;The</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>International<sp/>Color<sp/>Consortium&quot;<sp/>must<sp/>not<sp/>be<sp/>used<sp/>to<sp/>imply<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>ICC<sp/>organization<sp/>endorses<sp/>or<sp/>promotes<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>INTERNATIONAL<sp/>COLOR<sp/>CONSORTIUM<sp/>OR</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>ITS<sp/>CONTRIBUTING<sp/>MEMBERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>consists<sp/>of<sp/>voluntary<sp/>contributions<sp/>made<sp/>by<sp/>many</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>individuals<sp/>on<sp/>behalf<sp/>of<sp/>the<sp/>The<sp/>International<sp/>Color<sp/>Consortium.<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>Membership<sp/>in<sp/>the<sp/>ICC<sp/>is<sp/>encouraged<sp/>when<sp/>this<sp/>software<sp/>is<sp/>used<sp/>for</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>commercial<sp/>purposes.<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>For<sp/>more<sp/>information<sp/>on<sp/>The<sp/>International<sp/>Color<sp/>Consortium,<sp/>please</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>see<sp/>&lt;http://www.color.org/&gt;.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/d39/a00257" kindref="compound">IccUtilXml.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d3/d00/a00113" kindref="compound">IccConvertUTF.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/d41/a00038" kindref="compound">IccTagFactory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GetClassName</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>GetClassName</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>C<sp/>strings<sp/>strcpy,<sp/>memcpy<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>nanf<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="db/ddd/a02089_1a7462528d5323b7f03c7b3cfdd125127d" refkind="member"><highlight class="normal"><ref refid="db/ddd/a02089_1a7462528d5323b7f03c7b3cfdd125127d" kindref="member">CIccUTF16String::CIccUTF16String</ref>()</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref>=64;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref><sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>*)calloc(<ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>));</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="db/ddd/a02089_1ad19b98d626c8602fb792d9a7bc8d09eb" refkind="member"><highlight class="normal"><ref refid="db/ddd/a02089_1a7462528d5323b7f03c7b3cfdd125127d" kindref="member">CIccUTF16String::CIccUTF16String</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>*uzStr)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref><sp/>=<sp/><ref refid="db/ddd/a02089_1a3b64269237eff9ec57b1adb8609b19fd" kindref="member">WStrlen</ref>(uzStr);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref><sp/>=<sp/><ref refid="db/ddd/a02089_1a1c563066705191255ff60dff2b8ef8cb" kindref="member">AllocSize</ref>(<ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref><sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>*)malloc(<ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>memcpy(<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>,<sp/>uzStr,<sp/><ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref>+1*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>));</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="db/ddd/a02089_1a5209999d2313fd5b19d6832fb90ee9d5" refkind="member"><highlight class="normal"><ref refid="db/ddd/a02089_1a7462528d5323b7f03c7b3cfdd125127d" kindref="member">CIccUTF16String::CIccUTF16String</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szStr)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sizeSrc<sp/>=<sp/>strlen(szStr);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeSrc)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref><sp/>=<sp/><ref refid="db/ddd/a02089_1a1c563066705191255ff60dff2b8ef8cb" kindref="member">AllocSize</ref>(sizeSrc*2);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref><sp/>=<sp/>(<ref refid="d3/d00/a00113_1a50b71724cb39637be87babb9ddbd5822" kindref="member">UTF16</ref><sp/>*)calloc(<ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>));<sp/></highlight><highlight class="comment">//overallocate<sp/>to<sp/>allow<sp/>for<sp/>up<sp/>to<sp/>4<sp/>bytes<sp/>per<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d00/a00113_1a50b71724cb39637be87babb9ddbd5822" kindref="member">UTF16</ref><sp/>*szDest<sp/>=<sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddf/a00224_1a7cdda5a4721eb3c925fa76a61bf20759" kindref="member">icConvertUTF8toUTF16</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/d00/a00113_1aafe543c40e242c865f970b57a29122ab" kindref="member">UTF8</ref><sp/>**)&amp;szStr,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/d00/a00113_1aafe543c40e242c865f970b57a29122ab" kindref="member">UTF8</ref><sp/>*)&amp;szStr[sizeSrc],<sp/>&amp;szDest,<sp/>&amp;szDest[<ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref>],<sp/><ref refid="d3/d00/a00113_1afdfb6f5dac09ba1b8e138ad4f3a0abbbac7c2c3c32c7fbed195185e68879e550c" kindref="member">lenientConversion</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>[0]==0xfeff)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=1;<sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>[i];<sp/>i++)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>[i-1]<sp/>=<sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>[i];</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>[i-1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref><sp/>=<sp/><ref refid="db/ddd/a02089_1a3b64269237eff9ec57b1adb8609b19fd" kindref="member">WStrlen</ref>(<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref><sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref><sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>*)calloc(<ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="db/ddd/a02089_1af0cbd8e9ef41edfd147b9c231552e06e" refkind="member"><highlight class="normal"><ref refid="db/ddd/a02089_1a7462528d5323b7f03c7b3cfdd125127d" kindref="member">CIccUTF16String::CIccUTF16String</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/ddd/a02089" kindref="compound">CIccUTF16String</ref><sp/>&amp;str)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref><sp/>=<sp/>str.<ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref><sp/>=<sp/>str.<ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref><sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>*)malloc(<ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>memcpy(<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>,<sp/>str.<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>,<sp/>(<ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref>)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>));</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="db/ddd/a02089_1aa94d297d8abaa366e568539b678d778c" refkind="member"><highlight class="normal"><ref refid="db/ddd/a02089_1aa94d297d8abaa366e568539b678d778c" kindref="member">CIccUTF16String::~CIccUTF16String</ref>()</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>free(<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="db/ddd/a02089_1a64280c48fb77967f3fb3acbb959730d2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/ddd/a02089_1a64280c48fb77967f3fb3acbb959730d2" kindref="member">CIccUTF16String::Clear</ref>()</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="db/ddd/a02089_1ae37f16812d6f03cd088cfc447ab9da31" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/ddd/a02089_1ae37f16812d6f03cd088cfc447ab9da31" kindref="member">CIccUTF16String::Resize</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len&gt;<ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nAlloc<sp/>=<sp/><ref refid="db/ddd/a02089_1a1c563066705191255ff60dff2b8ef8cb" kindref="member">AllocSize</ref>(len);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref><sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>*)<ref refid="d7/dce/a00143_1af10fd6a1b6f8ecf3c73646fed85a5969" kindref="member">icRealloc</ref>(<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>,<sp/>nAlloc*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref><sp/>=<sp/>nAlloc;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len&gt;<ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref>)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>[<ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref>],<sp/>0x0020,<sp/>(len-<ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref>)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref><sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>[<ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="db/ddd/a02089_1a3b64269237eff9ec57b1adb8609b19fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="db/ddd/a02089_1a3b64269237eff9ec57b1adb8609b19fd" kindref="member">CIccUTF16String::WStrlen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>*uzStr)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n=0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(uzStr[n])<sp/>n++;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="db/ddd/a02089_1acf2cb3aabc7dafc9c716f9bd2eef3104" refkind="member"><highlight class="normal"><ref refid="db/ddd/a02089" kindref="compound">CIccUTF16String</ref>&amp;<sp/><ref refid="db/ddd/a02089_1acf2cb3aabc7dafc9c716f9bd2eef3104" kindref="member">CIccUTF16String::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/ddd/a02089" kindref="compound">CIccUTF16String</ref><sp/>&amp;wstr)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref>&lt;=wstr.<ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref><sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>*)<ref refid="d7/dce/a00143_1af10fd6a1b6f8ecf3c73646fed85a5969" kindref="member">icRealloc</ref>(<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>,<sp/>wstr.<ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref><sp/>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref><sp/>=<sp/>wstr.<ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref><sp/>=<sp/>wstr.<ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>,<sp/>wstr.<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>,<sp/>(<ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref>+1)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="db/ddd/a02089_1a05e4b7cdf12723b5678b08107235a2bd" refkind="member"><highlight class="normal"><ref refid="db/ddd/a02089" kindref="compound">CIccUTF16String</ref>&amp;<sp/><ref refid="db/ddd/a02089_1acf2cb3aabc7dafc9c716f9bd2eef3104" kindref="member">CIccUTF16String::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szStr)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="db/ddd/a02089_1a6974e5dc49b8069799812361ae3d764d" kindref="member">FromUtf8</ref>(szStr,<sp/>0);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="db/ddd/a02089_1a4ab1186e889437a5e890455e19061ce9" refkind="member"><highlight class="normal"><ref refid="db/ddd/a02089" kindref="compound">CIccUTF16String</ref>&amp;<sp/><ref refid="db/ddd/a02089_1acf2cb3aabc7dafc9c716f9bd2eef3104" kindref="member">CIccUTF16String::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>*uzStr)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="db/ddd/a02089_1a3b64269237eff9ec57b1adb8609b19fd" kindref="member">WStrlen</ref>(uzStr);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nAlloc<sp/>=<sp/><ref refid="db/ddd/a02089_1a1c563066705191255ff60dff2b8ef8cb" kindref="member">AllocSize</ref>(n);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref>&lt;=nAlloc)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref><sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>*)<ref refid="d7/dce/a00143_1af10fd6a1b6f8ecf3c73646fed85a5969" kindref="member">icRealloc</ref>(<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>,<sp/>nAlloc*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref><sp/>=<sp/>nAlloc;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>,<sp/>uzStr,<sp/>(<ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref>+1)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="db/ddd/a02089_1a6974e5dc49b8069799812361ae3d764d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/ddd/a02089_1a6974e5dc49b8069799812361ae3d764d" kindref="member">CIccUTF16String::FromUtf8</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szStr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sizeSrc)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sizeSrc)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>sizeSrc<sp/>=<sp/>strlen(szStr);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeSrc)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nAlloc<sp/>=<sp/><ref refid="db/ddd/a02089_1a1c563066705191255ff60dff2b8ef8cb" kindref="member">AllocSize</ref>(sizeSrc*2);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref>&lt;=nAlloc)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref><sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>*)<ref refid="d7/dce/a00143_1af10fd6a1b6f8ecf3c73646fed85a5969" kindref="member">icRealloc</ref>(<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>,<sp/>nAlloc<sp/>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref><sp/>=<sp/>nAlloc;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>,<sp/>0,<sp/><ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/d00/a00113_1a50b71724cb39637be87babb9ddbd5822" kindref="member">UTF16</ref><sp/>*szDest<sp/>=<sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddf/a00224_1a7cdda5a4721eb3c925fa76a61bf20759" kindref="member">icConvertUTF8toUTF16</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/d00/a00113_1aafe543c40e242c865f970b57a29122ab" kindref="member">UTF8</ref><sp/>**)&amp;szStr,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/d00/a00113_1aafe543c40e242c865f970b57a29122ab" kindref="member">UTF8</ref><sp/>*)&amp;szStr[sizeSrc],<sp/>&amp;szDest,<sp/>&amp;szDest[<ref refid="db/ddd/a02089_1a3594043736839d6343d5cf8b86711341" kindref="member">m_alloc</ref>],<sp/><ref refid="d3/d00/a00113_1afdfb6f5dac09ba1b8e138ad4f3a0abbbac7c2c3c32c7fbed195185e68879e550c" kindref="member">lenientConversion</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>[0]==0xfeff)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=1;<sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>[i];<sp/>i++)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>[i-1]<sp/>=<sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>[i];</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>[i-1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref><sp/>=<sp/><ref refid="db/ddd/a02089_1a3b64269237eff9ec57b1adb8609b19fd" kindref="member">WStrlen</ref>(<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref><sp/>=0;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="db/ddd/a02089_1a3103facd65438b09816f9b967567ad93" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="db/ddd/a02089_1a3103facd65438b09816f9b967567ad93" kindref="member">CIccUTF16String::ToUtf8</ref>(std::string<sp/>&amp;buf)</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/d39/a00257_1a9f320f9caf10d93233cccf39049a5992" kindref="member">icUtf16ToUtf8</ref>(buf,<sp/><ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="db/ddd/a02089_1aeab87eaf251124a5f4d9af34bceec5a7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*<ref refid="db/ddd/a02089_1aeab87eaf251124a5f4d9af34bceec5a7" kindref="member">CIccUTF16String::ToWString</ref>(std::wstring<sp/>&amp;buf)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>buf.clear();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="db/ddd/a02089_1a76b76345a3c2d7b29efd18499c897f48" kindref="member">m_len</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>+=<sp/>(wchar_t)<ref refid="db/ddd/a02089_1a83515b97e1a549321b55b6f025a71ffb" kindref="member">m_str</ref>[i];</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf.c_str();</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="d9/d39/a00257_1abe67111a2ffb15f0dd07425c9bce6960" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="d5/d35/a00266_1abe67111a2ffb15f0dd07425c9bce6960" kindref="member">icFixXml</ref>(std::string<sp/>&amp;buf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szStr)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>buf<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*szStr)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*szStr)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&amp;apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&amp;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&amp;amp;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&amp;quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&amp;lt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&amp;gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>+=<sp/>*szStr;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>szStr++;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf.c_str();</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="d5/d35/a00266_1abe67111a2ffb15f0dd07425c9bce6960" kindref="member">icFixXml</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szDest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szStr)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*m_ptr<sp/>=<sp/>szDest;<sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*szStr)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*szStr)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(m_ptr,<sp/></highlight><highlight class="stringliteral">&quot;&amp;apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr<sp/>+=<sp/>6;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&amp;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(m_ptr,<sp/></highlight><highlight class="stringliteral">&quot;&amp;amp;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr<sp/>+=<sp/>5;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(m_ptr,<sp/></highlight><highlight class="stringliteral">&quot;&amp;quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr<sp/>+=<sp/>6;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(m_ptr,<sp/></highlight><highlight class="stringliteral">&quot;&amp;lt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(m_ptr,<sp/></highlight><highlight class="stringliteral">&quot;&amp;gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*m_ptr++<sp/>=<sp/>*szStr;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>szStr++;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>*m_ptr<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>szDest;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="d9/d39/a00257_1a9f320f9caf10d93233cccf39049a5992" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="d5/d35/a00266_1a5375769a600dcfbde6aa6b4a7f383ce5" kindref="member">icUtf16ToUtf8</ref>(std::string<sp/>&amp;buf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>*szSrc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizeSrc</highlight><highlight class="comment">/*=0*/</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sizeSrc)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>sizeSrc<sp/>=<sp/>(int)<ref refid="db/ddd/a02089_1a3b64269237eff9ec57b1adb8609b19fd" kindref="member">CIccUTF16String::WStrlen</ref>(szSrc);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>sizeSrc*4;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szBuf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(n+1);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szDest<sp/>=<sp/>szBuf;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddf/a00224_1a9475bff9709f2bff030ab67184e39bf2" kindref="member">icConvertUTF16toUTF8</ref>(&amp;szSrc,<sp/>&amp;szSrc[sizeSrc],<sp/>(<ref refid="d3/d00/a00113_1aafe543c40e242c865f970b57a29122ab" kindref="member">UTF8</ref>**)&amp;szDest,<sp/>(<ref refid="d3/d00/a00113_1aafe543c40e242c865f970b57a29122ab" kindref="member">UTF8</ref>*)&amp;szDest[n+1],<sp/><ref refid="d3/d00/a00113_1afdfb6f5dac09ba1b8e138ad4f3a0abbbac7c2c3c32c7fbed195185e68879e550c" kindref="member">lenientConversion</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>*szDest=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>szBuf;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>free(szBuf);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>buf.clear();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf.c_str();</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="d9/d39/a00257_1ae6a418d1fc896a14ecad689092946a55" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*<ref refid="d5/d35/a00266_1a7e9c5de46dd2e23ed3ce85f7802cae12" kindref="member">icUtf8ToUtf16</ref>(<ref refid="db/ddd/a02089" kindref="compound">CIccUTF16String</ref><sp/>&amp;buf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szSrc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizeSrc</highlight><highlight class="comment">/*=0*/</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>buf.<ref refid="db/ddd/a02089_1a6974e5dc49b8069799812361ae3d764d" kindref="member">FromUtf8</ref>(szSrc,<sp/>sizeSrc);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf.<ref refid="db/ddd/a02089_1ac7629e2161d7ada902d83eb93945ebcd" kindref="member">c_str</ref>();</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="d9/d39/a00257_1afb616c9224f7f0db7e412064a547dd42" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="d5/d35/a00266_1afb616c9224f7f0db7e412064a547dd42" kindref="member">icAnsiToUtf8</ref>(std::string<sp/>&amp;buf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szSrc)</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>strlen(szSrc)+1;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*szUnicodeBuf<sp/>=<sp/>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)malloc(len*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)*2);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szBuf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(len*2);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>n=MultiByteToWideChar(CP_ACP,<sp/>0,<sp/>szSrc,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)len-1,<sp/>szUnicodeBuf,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)len*2);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>szUnicodeBuf[n]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>WideCharToMultiByte(CP_UTF8,<sp/>0,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)szUnicodeBuf,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)n,<sp/>szBuf,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)len*2,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>szBuf[n]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>buf<sp/>=<sp/>szBuf;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>free(szBuf);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>free(szUnicodeBuf);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>buf<sp/>=<sp/>szSrc;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf.c_str();</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="d9/d39/a00257_1a17f6cde39ef474623e3b1082566bb5d3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="d5/d35/a00266_1a17f6cde39ef474623e3b1082566bb5d3" kindref="member">icUtf8ToAnsi</ref>(std::string<sp/>&amp;buf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szSrc)</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>strlen(szSrc)+1;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*szUnicodeBuf<sp/>=<sp/>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)malloc(len*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)*2);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szBuf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(len*2);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>n=MultiByteToWideChar(CP_UTF8,<sp/>0,<sp/>szSrc,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)len,<sp/>szUnicodeBuf,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)len*2);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>szUnicodeBuf[n]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>WideCharToMultiByte(CP_ACP,<sp/>0,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)szUnicodeBuf,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)n,<sp/>szBuf,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)len*2,<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>szBuf[n]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>buf<sp/>=<sp/>szBuf;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>free(szBuf);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>free(szUnicodeBuf);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>buf<sp/>=<sp/>szSrc;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf.c_str();</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="d3/d1e/a02093" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d3/d1e/a02093" kindref="compound">CIccDumpXmlCLUT</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="de/df6/a01141" kindref="compound">IIccCLUTExec</ref></highlight></codeline>
<codeline lineno="423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="425" refid="d3/d1e/a02093_1a33842eacf643a8fe8ad291ccb1f716fd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="d3/d1e/a02093_1a33842eacf643a8fe8ad291ccb1f716fd" kindref="member">CIccDumpXmlCLUT</ref>(std::string<sp/>*xml,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref><sp/>nType,<sp/>std::string<sp/>blanks,<sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nSamples,<sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>nPixelsPerRow)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d1e/a02093_1a9df1260d109d6db974d698369300139c" kindref="member">m_xml</ref><sp/>=<sp/>xml;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d1e/a02093_1a467c8b72b8dd76694ef9994765c07d03" kindref="member">m_nType</ref><sp/>=<sp/>nType;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d1e/a02093_1ab95ff3687de6fa21e29415205cc68c46" kindref="member">m_blanks</ref><sp/>=<sp/>blanks;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d1e/a02093_1a706edd23636a5e944f707b964c26072d" kindref="member">m_nSamples</ref><sp/>=<sp/>nSamples;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d1e/a02093_1a978d0fad6c549e8c0459694bac3ce6fc" kindref="member">m_nPixelsPerRow</ref><sp/>=<sp/>nPixelsPerRow;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d1e/a02093_1a07c6d62d5ac6d25f78d430749e8e00e9" kindref="member">m_nCurPixel</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="d3/d1e/a02093_1ad945454bc4ae997578a38e9aef727eff" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d3/d1e/a02093_1ad945454bc4ae997578a38e9aef727eff" kindref="member">PixelOp</ref>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>*<sp/>pGridAdr,<sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>*<sp/>pData)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[128];</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="d3/d1e/a02093_1a07c6d62d5ac6d25f78d430749e8e00e9" kindref="member">m_nCurPixel</ref><sp/>%<sp/><ref refid="d3/d1e/a02093_1a978d0fad6c549e8c0459694bac3ce6fc" kindref="member">m_nPixelsPerRow</ref>))</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="d3/d1e/a02093_1a9df1260d109d6db974d698369300139c" kindref="member">m_xml</ref><sp/>+=<sp/><ref refid="d3/d1e/a02093_1ab95ff3687de6fa21e29415205cc68c46" kindref="member">m_blanks</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="d3/d1e/a02093_1a467c8b72b8dd76694ef9994765c07d03" kindref="member">m_nType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" kindref="member">icConvert8Bit</ref>:</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="d3/d1e/a02093_1a706edd23636a5e944f707b964c26072d" kindref="member">m_nSamples</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%3d&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref>)(pData[i]*255.0<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="d3/d1e/a02093_1a9df1260d109d6db974d698369300139c" kindref="member">m_xml</ref><sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref>:</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="d3/d1e/a02093_1a706edd23636a5e944f707b964c26072d" kindref="member">m_nSamples</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%5d&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)(pData[i]*65535.0<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="d3/d1e/a02093_1a9df1260d109d6db974d698369300139c" kindref="member">m_xml</ref><sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>:</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="d3/d1e/a02093_1a706edd23636a5e944f707b964c26072d" kindref="member">m_nSamples</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%13.8f&quot;</highlight><highlight class="normal">,<sp/>pData[i]);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="d3/d1e/a02093_1a9df1260d109d6db974d698369300139c" kindref="member">m_xml</ref><sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d1e/a02093_1a07c6d62d5ac6d25f78d430749e8e00e9" kindref="member">m_nCurPixel</ref>++;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="d3/d1e/a02093_1a07c6d62d5ac6d25f78d430749e8e00e9" kindref="member">m_nCurPixel</ref><sp/>%<sp/><ref refid="d3/d1e/a02093_1a978d0fad6c549e8c0459694bac3ce6fc" kindref="member">m_nPixelsPerRow</ref>))<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="d3/d1e/a02093_1a9df1260d109d6db974d698369300139c" kindref="member">m_xml</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470" refid="d3/d1e/a02093_1ae27b0f4072c985798a2bee0e6276386e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d3/d1e/a02093_1ae27b0f4072c985798a2bee0e6276386e" kindref="member">Finish</ref>()</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d3/d1e/a02093_1a07c6d62d5ac6d25f78d430749e8e00e9" kindref="member">m_nCurPixel</ref><sp/>%<sp/><ref refid="d3/d1e/a02093_1a978d0fad6c549e8c0459694bac3ce6fc" kindref="member">m_nPixelsPerRow</ref>)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="d3/d1e/a02093_1a9df1260d109d6db974d698369300139c" kindref="member">m_xml</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="d3/d1e/a02093_1a9df1260d109d6db974d698369300139c" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/>*<ref refid="d3/d1e/a02093_1a9df1260d109d6db974d698369300139c" kindref="member">m_xml</ref>;</highlight></codeline>
<codeline lineno="478" refid="d3/d1e/a02093_1a467c8b72b8dd76694ef9994765c07d03" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref><sp/><ref refid="d3/d1e/a02093_1a467c8b72b8dd76694ef9994765c07d03" kindref="member">m_nType</ref>;</highlight></codeline>
<codeline lineno="479" refid="d3/d1e/a02093_1ab95ff3687de6fa21e29415205cc68c46" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="d3/d1e/a02093_1ab95ff3687de6fa21e29415205cc68c46" kindref="member">m_blanks</ref>;</highlight></codeline>
<codeline lineno="480" refid="d3/d1e/a02093_1a706edd23636a5e944f707b964c26072d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/><ref refid="d3/d1e/a02093_1a706edd23636a5e944f707b964c26072d" kindref="member">m_nSamples</ref>;</highlight></codeline>
<codeline lineno="481" refid="d3/d1e/a02093_1a978d0fad6c549e8c0459694bac3ce6fc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/><ref refid="d3/d1e/a02093_1a978d0fad6c549e8c0459694bac3ce6fc" kindref="member">m_nPixelsPerRow</ref>;</highlight></codeline>
<codeline lineno="482" refid="d3/d1e/a02093_1a07c6d62d5ac6d25f78d430749e8e00e9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/><ref refid="d3/d1e/a02093_1a07c6d62d5ac6d25f78d430749e8e00e9" kindref="member">m_nCurPixel</ref>;</highlight></codeline>
<codeline lineno="483"><highlight class="normal">};</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485" refid="d9/d39/a00257_1ad5170248b277a4a29ceda7150dfe054c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d35/a00266_1aae207bac51345186d04fe645169a5f5c" kindref="member">icCLUTDataToXml</ref>(std::string<sp/>&amp;xml,<sp/><ref refid="d8/d02/a01149" kindref="compound">CIccCLUT</ref><sp/>*pCLUT,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref><sp/>nType,<sp/>std::string<sp/>blanks,<sp/></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSaveGridPoints</highlight><highlight class="comment">/*=false*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[128];</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nStartType<sp/>=<sp/>nType;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8acf7f3d311a96b6529fb7b3ac82fd372b" kindref="member">icConvertVariable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>nType<sp/>=<sp/>pCLUT-&gt;<ref refid="d8/d02/a01149_1af754b393a5e5570d67bf14daf759e335" kindref="member">GetPrecision</ref>()==1<sp/>?<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" kindref="member">icConvert8Bit</ref><sp/>:<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref>;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bSaveGridPoints)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;GridPoints&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;pCLUT-&gt;<ref refid="d8/d02/a01149_1a0e017fe91f97b04ee7ac8d7ebdf69ee5" kindref="member">GetInputDim</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>pCLUT-&gt;<ref refid="d8/d02/a01149_1a9a0c0cde105baab7884f1c8f7dd55cdf" kindref="member">GridPoint</ref>(i));</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>pCLUT-&gt;<ref refid="d8/d02/a01149_1a9a0c0cde105baab7884f1c8f7dd55cdf" kindref="member">GridPoint</ref>(i));</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&lt;/GridPoints&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPixelsPerRow<sp/>=<sp/>pCLUT-&gt;<ref refid="d8/d02/a01149_1a9a0c0cde105baab7884f1c8f7dd55cdf" kindref="member">GridPoint</ref>(0);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>CLUT<sp/>has<sp/>no<sp/>GridPoints,<sp/>profile<sp/>is<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPixelsPerRow<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nError!<sp/>-<sp/>CLUT<sp/>Table<sp/>not<sp/>found.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><ref refid="d3/d1e/a02093" kindref="compound">CIccDumpXmlCLUT</ref><sp/>dumper(&amp;xml,<sp/>nType,<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>pCLUT-&gt;<ref refid="d8/d02/a01149_1a11c1f0a6f3f878840eaed3e00d1ce74e" kindref="member">GetOutputChannels</ref>(),<sp/>nPixelsPerRow);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;TableData&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nStartType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8acf7f3d311a96b6529fb7b3ac82fd372b" kindref="member">icConvertVariable</ref><sp/>&amp;&amp;<sp/>nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" kindref="member">icConvert8Bit</ref>)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Precision=\&quot;1\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>pCLUT-&gt;<ref refid="d8/d02/a01149_1a6daf6407801422f20ec2a70b60651ce4" kindref="member">Iterate</ref>(&amp;dumper);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>dumper.<ref refid="d3/d1e/a02093_1ae27b0f4072c985798a2bee0e6276386e" kindref="member">Finish</ref>();</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/TableData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537" refid="d9/d39/a00257_1a8e60807f7d16227a24f22ad32623bf98" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d35/a00266_1aefcd0fb51a51cdf98e9e0b142a7e1ba5" kindref="member">icCLUTToXml</ref>(std::string<sp/>&amp;xml,<sp/><ref refid="d8/d02/a01149" kindref="compound">CIccCLUT</ref><sp/>*pCLUT,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref><sp/>nType,<sp/>std::string<sp/>blanks,<sp/></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSaveGridPoints</highlight><highlight class="comment">/*=false*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szExtraAttrs</highlight><highlight class="comment">/*=&quot;&quot;*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szName</highlight><highlight class="comment">/*=&quot;CLUT&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[128];</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>szName;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bSaveGridPoints)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>GridGranularity=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>pCLUT-&gt;<ref refid="d8/d02/a01149_1a9a0c0cde105baab7884f1c8f7dd55cdf" kindref="member">GridPoint</ref>(0));</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(szExtraAttrs<sp/>&amp;&amp;<sp/>*szExtraAttrs)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>szExtraAttrs;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><ref refid="d5/d35/a00266_1aae207bac51345186d04fe645169a5f5c" kindref="member">icCLUTDataToXml</ref>(xml,<sp/>pCLUT,<sp/>nType,<sp/>blanks,<sp/>bSaveGridPoints);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>szName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="d9/d39/a00257_1adcdfdaf459a03f1af0222d62af59ed3b" refkind="member"><highlight class="normal"><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/><ref refid="d5/d35/a00266_1adcdfdaf459a03f1af0222d62af59ed3b" kindref="member">icXmlStrToFloat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*szStr)</highlight></codeline>
<codeline lineno="560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f=0.0;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>sscanf((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)szStr,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>&amp;f);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)f;</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567" refid="d9/d39/a00257_1aeb7c91622f164201b2a5a0afe9cd3848" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1a67fa1b773fad35303680761ee5ef9313" kindref="member">icSignature</ref><sp/><ref refid="d5/d35/a00266_1aeb7c91622f164201b2a5a0afe9cd3848" kindref="member">icXmlStrToSig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szStr)</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>(szStr);</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572" refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="d5/d35/a00266_1acd7c60d9436e5019c7bc25db7fd0a77a" kindref="member">icXmlAttrValue</ref>(xmlAttr<sp/>*attr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szDefault)</highlight></codeline>
<codeline lineno="573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>&amp;&amp;<sp/>attr-&gt;children<sp/>&amp;&amp;<sp/>attr-&gt;children-&gt;type<sp/>==<sp/>XML_TEXT_NODE<sp/>&amp;&amp;<sp/>attr-&gt;children-&gt;content)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)attr-&gt;children-&gt;content;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>szDefault;</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="d9/d39/a00257_1a459e22a536debe98c547657efa20b5ca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="d5/d35/a00266_1acd7c60d9436e5019c7bc25db7fd0a77a" kindref="member">icXmlAttrValue</ref>(xmlNode<sp/>*pNode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szDefault)</highlight></codeline>
<codeline lineno="581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>xmlAttr<sp/>*attr<sp/>=<sp/><ref refid="d5/d35/a00266_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/>szName);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/d35/a00266_1acd7c60d9436e5019c7bc25db7fd0a77a" kindref="member">icXmlAttrValue</ref>(attr,<sp/>szDefault);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>szDefault;</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589" refid="d9/d39/a00257_1a87a808865a486a3d8e332d0a73806817" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/><ref refid="d5/d35/a00266_1a87a808865a486a3d8e332d0a73806817" kindref="member">icXmlGetChildSigVal</ref>(xmlNode<sp/>*pNode)</highlight></codeline>
<codeline lineno="590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pNode<sp/>||<sp/>!pNode-&gt;children<sp/>||<sp/>!pNode-&gt;children-&gt;content)</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597" refid="d5/d35/a00266_1ac9541b1c483019737e7f4c23bc5c1b09" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d5/d35/a00266_1ac9541b1c483019737e7f4c23bc5c1b09" kindref="member">hexValue</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c&gt;=</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c&lt;=</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c-</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c&gt;=</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c&lt;=</highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c-</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">+10;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c&gt;=</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c&lt;=</highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c-</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">+10;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609" refid="d9/d39/a00257_1a7e2e6f47df3c6baacbda01035dfbbbee" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/><ref refid="d5/d35/a00266_1a7e2e6f47df3c6baacbda01035dfbbbee" kindref="member">icXmlGetHexData</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pBuf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szText,<sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>nBufSize)</highlight></codeline>
<codeline lineno="610"><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pDest<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pBuf;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>rv<sp/>=0;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*szText<sp/>&amp;&amp;<sp/>rv&lt;nBufSize)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c1=<ref refid="d5/d35/a00266_1ac9541b1c483019737e7f4c23bc5c1b09" kindref="member">hexValue</ref>(szText[0]);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c2=<ref refid="d5/d35/a00266_1ac9541b1c483019737e7f4c23bc5c1b09" kindref="member">hexValue</ref>(szText[1]);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1&gt;=0<sp/>&amp;&amp;<sp/>c2&gt;=0)<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pDest<sp/>=<sp/>c1*16+<sp/>c2;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pDest++;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>szText<sp/>+=2;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rv++;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>szText++;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630" refid="d9/d39/a00257_1a4798bcdc271228ef7083a57412803e06" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/><ref refid="d5/d35/a00266_1a4798bcdc271228ef7083a57412803e06" kindref="member">icXmlGetHexDataSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szText)</highlight></codeline>
<codeline lineno="631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>rv<sp/>=0;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*szText)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c1=<ref refid="d5/d35/a00266_1ac9541b1c483019737e7f4c23bc5c1b09" kindref="member">hexValue</ref>(szText[0]);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c2=<ref refid="d5/d35/a00266_1ac9541b1c483019737e7f4c23bc5c1b09" kindref="member">hexValue</ref>(szText[1]);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1&gt;=0<sp/>&amp;&amp;<sp/>c2&gt;=0)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>szText<sp/>+=2;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rv++;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>szText++;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648" refid="d9/d39/a00257_1aac906ed45d63b044aa871d3366c05c6f" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/><ref refid="d5/d35/a00266_1aac906ed45d63b044aa871d3366c05c6f" kindref="member">icXmlDumpHexData</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pBuf,<sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>nBufSize)</highlight></codeline>
<codeline lineno="649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*m_ptr<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*)pBuf;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[15];</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nBufSize;<sp/>i++,<sp/>m_ptr++)<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(i%32))<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i)</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;%02x&quot;</highlight><highlight class="normal">,<sp/>*m_ptr);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;<sp/></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669" refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" refkind="member"><highlight class="normal">xmlAttr<sp/>*<ref refid="d5/d35/a00266_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(xmlNode<sp/>*pNode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szAttrName)</highlight></codeline>
<codeline lineno="670"><highlight class="normal">{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pNode)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>xmlAttr<sp/>*attr;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(attr<sp/>=<sp/>pNode-&gt;properties;<sp/>attr;<sp/>attr<sp/>=<sp/>attr-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr-&gt;type<sp/>!=<sp/>XML_ATTRIBUTE_NODE)</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(attr-&gt;name,<sp/>szAttrName))<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>attr;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687" refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" refkind="member"><highlight class="normal">xmlNode<sp/>*<ref refid="d5/d35/a00266_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(xmlNode<sp/>*pNode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szNodeName)</highlight></codeline>
<codeline lineno="688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pNode)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>pNode;<sp/>pNode<sp/>=<sp/>pNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>!=<sp/>XML_ELEMENT_NODE)</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/>szNodeName))<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pNode;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703" refid="d9/d39/a00257_1a4020a24172a2a573879d8cb257522a72" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/><ref refid="d5/d35/a00266_1a4020a24172a2a573879d8cb257522a72" kindref="member">icXmlNodeCount</ref>(xmlNode<sp/>*pNode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szNodeName)</highlight></codeline>
<codeline lineno="704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>rv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>pNode;<sp/>pNode<sp/>=<sp/>pNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/>szNodeName))<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rv++;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715" refid="d9/d39/a00257_1a68636108399b3bff85169df00e99c9a1" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/><ref refid="d5/d35/a00266_1a68636108399b3bff85169df00e99c9a1" kindref="member">icXmlNodeCount2</ref>(xmlNode<sp/>*pNode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szNodeName1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szNodeName2)</highlight></codeline>
<codeline lineno="716"><highlight class="normal">{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>rv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>pNode;<sp/>pNode<sp/>=<sp/>pNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/>szNodeName1)<sp/>||<sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/>szNodeName2)))<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rv++;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727" refid="d9/d39/a00257_1a2a556605d5fd8e4ff5ab461f13e64c55" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/><ref refid="d5/d35/a00266_1a2a556605d5fd8e4ff5ab461f13e64c55" kindref="member">icXmlNodeCount3</ref>(xmlNode<sp/>*pNode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szNodeName1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szNodeName2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szNodeName3)</highlight></codeline>
<codeline lineno="728"><highlight class="normal">{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>rv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>pNode;<sp/>pNode<sp/>=<sp/>pNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/>szNodeName1)<sp/>||<sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/>szNodeName2)<sp/>||<sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/>szNodeName3)))<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rv++;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="740" refid="de/dd3/a01873_1a415933abd8198590cae414c78b3f037d" refkind="member"><highlight class="normal"><ref refid="de/dd3/a01873_1a415933abd8198590cae414c78b3f037d" kindref="member">CIccXmlArrayType&lt;T, Tsig&gt;::CIccXmlArrayType</ref>()</highlight></codeline>
<codeline lineno="741"><highlight class="normal">{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>m_pBuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>m_nSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="747" refid="de/dd3/a01873_1a0c9701c7c861d3e3e3c495f72353f7b5" refkind="member"><highlight class="normal"><ref refid="de/dd3/a01873_1a0c9701c7c861d3e3e3c495f72353f7b5" kindref="member">CIccXmlArrayType&lt;T, Tsig&gt;::~CIccXmlArrayType</ref>()</highlight></codeline>
<codeline lineno="748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pBuf)<sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>free(m_pBuf);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="755" refid="de/dd3/a01873_1a07d799736e57c092e6b375e4b197c75c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">CIccXmlArrayType&lt;T, Tsig&gt;::ParseArray</ref>(xmlNode<sp/>*pNode)</highlight></codeline>
<codeline lineno="756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>scanType[2]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>scanType[0]<sp/>=<sp/>(Tsig<sp/>==<sp/><ref refid="d9/d39/a00257_1a6a023f19af8fedb91081ad3989c428e8" kindref="member">icSigFloatArrayType</ref><sp/>?<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>scanType[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>n<sp/>=<sp/><ref refid="d5/d35/a00266_1a4020a24172a2a573879d8cb257522a72" kindref="member">icXmlNodeCount</ref>(pNode,<sp/>scanType);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetSize(n))</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseArray(m_pBuf,<sp/>m_nSize,<sp/>pNode);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;pNode<sp/>&amp;&amp;<sp/>pNode-&gt;type!=<sp/>XML_TEXT_NODE;<sp/>pNode=pNode-&gt;next);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pNode<sp/>||<sp/>!pNode-&gt;content)</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>ParseTextCount((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;content);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n<sp/>||<sp/>!SetSize(n))</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseArray(m_pBuf,<sp/>m_nSize,<sp/>pNode);</highlight></codeline>
<codeline lineno="780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="783" refid="de/dd3/a01873_1a08565a80ff28d6a32a14a2dd33e7325c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/dd3/a01873_1a08565a80ff28d6a32a14a2dd33e7325c" kindref="member">CIccXmlArrayType&lt;T, Tsig&gt;::ParseTextArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szText)</highlight></codeline>
<codeline lineno="784"><highlight class="normal">{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>n<sp/>=<sp/>ParseTextCount(szText);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetSize(n))</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseText(m_pBuf,<sp/>m_nSize,<sp/>szText)==m_nSize;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="798" refid="de/dd3/a01873_1a4ebe564dc038871b08e49771443df652" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/dd3/a01873_1a08565a80ff28d6a32a14a2dd33e7325c" kindref="member">CIccXmlArrayType&lt;T, Tsig&gt;::ParseTextArray</ref>(xmlNode<sp/>*pNode)</highlight></codeline>
<codeline lineno="799"><highlight class="normal">{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;children<sp/>&amp;&amp;<sp/>pNode-&gt;children-&gt;type==XML_TEXT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseTextArray((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="807" refid="de/dd3/a01873_1a23e7980af4e5c740a54d8c23ec68acbb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/dd3/a01873_1a23e7980af4e5c740a54d8c23ec68acbb" kindref="member">CIccXmlArrayType&lt;T, Tsig&gt;::ParseTextArrayNum</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szText,<sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="808"><highlight class="normal">{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>n<sp/>=<sp/>ParseTextCountNum(szText,<sp/>num,<sp/>parseStr);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetSize(n))</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseText(m_pBuf,<sp/>m_nSize,<sp/>szText)==m_nSize;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="820" refid="de/dd3/a01873_1a96583e68ac3216ec93072a15f30e8029" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/dd3/a01873_1a96583e68ac3216ec93072a15f30e8029" kindref="member">CIccXmlArrayType&lt;T, Tsig&gt;::DumpArray</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks,<sp/>T<sp/>*buf,<sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>nBufSize,<sp/></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref><sp/>nType,<sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>nColumns)</highlight></codeline>
<codeline lineno="822"><highlight class="normal">{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[200];</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nColumns)<sp/>nColumns<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nBufSize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(i%nColumns))<sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(Tsig)<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417ddea1308dbd189e810ca0f0f804e74c8a49c" kindref="member">icSigUInt8ArrayType</ref>:</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(nType)<sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" kindref="member">icConvert8Bit</ref>:</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(str,<sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref>)buf[i]);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref>:</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(str,<sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)buf[i]<sp/>*<sp/>65535.0<sp/>/<sp/>255.0<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>:</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(str,<sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)buf[i]<sp/>/<sp/>255.0);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417ddea2368c79224b0f401f4dc19ee5353e4a9" kindref="member">icSigUInt16ArrayType</ref>:</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(nType)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" kindref="member">icConvert8Bit</ref>:</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(str,<sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)buf[i]<sp/>*<sp/>255.0<sp/>/<sp/>65535.0<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref>:</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(str,<sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)buf[i]);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>:</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(str,<sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)buf[i]<sp/>/<sp/>65535.0);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417ddeafe8c40bc78370d5212050e2dd129d317" kindref="member">icSigUInt32ArrayType</ref>:</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(str,<sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref>)buf[i]);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417ddeaa3c8d9a1c8b9a7fa396a79e493e96084" kindref="member">icSigUInt64ArrayType</ref>:</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d9/d39/a00257_1a6a023f19af8fedb91081ad3989c428e8" kindref="member">icSigFloatArrayType</ref>:</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417ddeae17f065e92dd0ee43aeef1f18c6e0db0" kindref="member">icSigFloat32ArrayType</ref>:</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417ddea9d1705d00ee5bd14f2ac2b0109eb901d" kindref="member">icSigFloat64ArrayType</ref>:</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(nType)<sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" kindref="member">icConvert8Bit</ref>:</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(str,<sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref>)(buf[i]<sp/>*<sp/>255.0<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref>:</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(str,<sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)(buf[i]<sp/>*<sp/>65535.0<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>:</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(str,<sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)buf[i]);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>str;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i%nColumns<sp/>==<sp/>nColumns-1)<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i%nColumns)<sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>multi-platform<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="comment">//<sp/>replaced<sp/>&quot;_inline&quot;<sp/>with<sp/>&quot;inline&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912" refid="d5/d35/a00266_1a8fbbab9d547dd00d638bb85a1d6df35d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d35/a00266_1a8fbbab9d547dd00d638bb85a1d6df35d" kindref="member">icIsNumChar</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="913"><highlight class="normal">{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c&gt;=</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c&lt;=</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>||<sp/>c==</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>||<sp/>c==</highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal"><sp/>||<sp/>c==</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>||<sp/>c==</highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="917"><highlight class="normal">}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function<sp/>used<sp/>when<sp/>checking<sp/>contents<sp/>of<sp/>a<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="comment">//<sp/>count<sp/>the<sp/>number<sp/>of<sp/>entries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="922" refid="de/dd3/a01873_1ab303f6345307dc7ee0f5e2f2aac3b2d4" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/><ref refid="de/dd3/a01873_1ab303f6345307dc7ee0f5e2f2aac3b2d4" kindref="member">CIccXmlArrayType&lt;T, Tsig&gt;::ParseTextCountNum</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szText,<sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="923"><highlight class="normal">{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bInNum<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//icUInt32Number<sp/>count<sp/>=<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//while<sp/>(*szText)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i=0;<sp/>i&lt;num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/d35/a00266_1a8fbbab9d547dd00d638bb85a1d6df35d" kindref="member">icIsNumChar</ref>(*szText))<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bInNum)<sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bInNum<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bInNum<sp/>&amp;&amp;<sp/>!strncmp(szText,<sp/></highlight><highlight class="stringliteral">&quot;#QNAN&quot;</highlight><highlight class="normal">,<sp/>5))<sp/>{<sp/></highlight><highlight class="comment">//Handle<sp/>1.#QNAN000<sp/>(non<sp/>a<sp/>number)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i+=4;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>szText+=4;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>invalid<sp/>character<sp/>is<sp/>encountered<sp/>(not<sp/>digit<sp/>and<sp/>not<sp/>space)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isspace(*szText)<sp/>&amp;&amp;<sp/>i<sp/>&lt;=<sp/>num<sp/>){</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[100];</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>&apos;%c&apos;<sp/>in<sp/>position<sp/>%d<sp/>is<sp/>not<sp/>a<sp/>number.<sp/>&quot;</highlight><highlight class="normal">,<sp/>*szText,<sp/>i);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bInNum)<sp/>{<sp/></highlight><highlight class="comment">//char<sp/>is<sp/>a<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bInNum<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>szText++;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//count++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bInNum)<sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="961" refid="de/dd3/a01873_1abc41cc59bb211a642158d024731afb76" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/><ref refid="de/dd3/a01873_1abc41cc59bb211a642158d024731afb76" kindref="member">CIccXmlArrayType&lt;T, Tsig&gt;::ParseTextCount</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szText)</highlight></codeline>
<codeline lineno="962"><highlight class="normal">{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bInNum<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*szText)<sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/d35/a00266_1a8fbbab9d547dd00d638bb85a1d6df35d" kindref="member">icIsNumChar</ref>(*szText))<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bInNum)<sp/>{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bInNum<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bInNum<sp/>&amp;&amp;<sp/>!strncmp(szText,<sp/></highlight><highlight class="stringliteral">&quot;#QNAN&quot;</highlight><highlight class="normal">,<sp/>5))<sp/>{<sp/></highlight><highlight class="comment">//Handle<sp/>1.#QNAN000<sp/>(non<sp/>a<sp/>number)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>szText+=4;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bInNum)<sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bInNum<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>szText++;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bInNum)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="989" refid="de/dd3/a01873_1a61e2c5ba24052fe6ef06555158cdefd6" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/><ref refid="de/dd3/a01873_1a61e2c5ba24052fe6ef06555158cdefd6" kindref="member">CIccXmlArrayType&lt;T, Tsig&gt;::ParseText</ref>(T*<sp/>pBuf,<sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>nSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szText)</highlight></codeline>
<codeline lineno="990"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>n<sp/>=<sp/>0,<sp/>b<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bInNum<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>num[256]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*szText<sp/>&amp;&amp;<sp/>n&lt;nSize)<sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/d35/a00266_1a8fbbab9d547dd00d638bb85a1d6df35d" kindref="member">icIsNumChar</ref>(*szText))<sp/>{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bInNum)<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bInNum<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b=0;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num[b]<sp/>=<sp/>*szText;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b+2&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(num))</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b++;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bInNum)<sp/>{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num[b]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(num,<sp/></highlight><highlight class="stringliteral">&quot;nan&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>||<sp/>!strncmp(num,<sp/></highlight><highlight class="stringliteral">&quot;-nan&quot;</highlight><highlight class="normal">,<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBuf[n]<sp/>=<sp/>(T)nanf(num);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBuf[n]<sp/>=<sp/>(T)atof(num);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bInNum<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>szText++;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bInNum)<sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>num[b]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(num,<sp/></highlight><highlight class="stringliteral">&quot;nan&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>||<sp/>!strncmp(num,<sp/></highlight><highlight class="stringliteral">&quot;-nan&quot;</highlight><highlight class="normal">,<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pBuf[n]<sp/>=<sp/>(T)nanf(num);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pBuf[n]<sp/>=<sp/>(T)atof(num);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="1034" refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">CIccXmlArrayType&lt;T, Tsig&gt;::ParseArray</ref>(T*<sp/>pBuf,<sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>nSize,<sp/>xmlNode<sp/>*pNode)</highlight></codeline>
<codeline lineno="1035"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>n;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Tsig==<ref refid="d9/d39/a00257_1a6a023f19af8fedb91081ad3989c428e8" kindref="member">icSigFloatArrayType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="d5/d35/a00266_1a4020a24172a2a573879d8cb257522a72" kindref="member">icXmlNodeCount</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n)<sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type!=XML_TEXT_NODE<sp/>||<sp/>!pNode-&gt;content)</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>ParseTextCount((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;content);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n<sp/>||<sp/>n&gt;nSize)</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ParseText(pBuf,<sp/>n,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;content);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n&gt;nSize)</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nSize<sp/>&amp;&amp;<sp/>pNode;<sp/>pNode<sp/>=<sp/>pNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNode-&gt;children<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNode-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(pNode-&gt;children-&gt;content),<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>&amp;f);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBuf[i]<sp/>=<sp/>(T)f;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="d5/d35/a00266_1a4020a24172a2a573879d8cb257522a72" kindref="member">icXmlNodeCount</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n)<sp/>{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type!=XML_TEXT_NODE<sp/>||<sp/>!pNode-&gt;content)</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>ParseTextCount((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)pNode-&gt;content);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n<sp/>||<sp/>n&gt;nSize)</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>ParseText(pBuf,<sp/>n,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)pNode-&gt;content);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n&gt;nSize)</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nSize<sp/>&amp;&amp;<sp/>pNode;<sp/>pNode<sp/>=<sp/>pNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;n&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNode-&gt;children<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNode-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBuf[i]<sp/>=<sp/>(T)atol((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(pNode-&gt;children-&gt;content));</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nSize==n;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="1102" refid="de/dd3/a01873_1a151862e8f9e6e5d7e3164fe2fe68ca97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/dd3/a01873_1a151862e8f9e6e5d7e3164fe2fe68ca97" kindref="member">CIccXmlArrayType&lt;T, Tsig&gt;::SetSize</ref>(<ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>nSize)</highlight></codeline>
<codeline lineno="1103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pBuf)<sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>free(m_pBuf);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/>m_pBuf<sp/>=<sp/>(T*)malloc(nSize<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pBuf)<sp/>{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/>m_nSize<sp/>=<sp/>nSize;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight><highlight class="comment">//Make<sp/>sure<sp/>typedef<sp/>classes<sp/>get<sp/>built</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/dd3/a01873" kindref="compound">CIccXmlArrayType&lt;icUInt8Number, icSigUInt8ArrayType&gt;</ref>;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/dd3/a01873" kindref="compound">CIccXmlArrayType&lt;icUInt16Number, icSigUInt16ArrayType&gt;</ref>;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/dd3/a01873" kindref="compound">CIccXmlArrayType&lt;icUInt32Number, icSigUInt32ArrayType&gt;</ref>;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/dd3/a01873" kindref="compound">CIccXmlArrayType&lt;icUInt64Number, icSigUInt64ArrayType&gt;</ref>;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/dd3/a01873" kindref="compound">CIccXmlArrayType&lt;icFloatNumber, icSigFloatArrayType&gt;</ref>;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/dd3/a01873" kindref="compound">CIccXmlArrayType&lt;icFloat32Number, icSigFloat32ArrayType&gt;</ref>;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/dd3/a01873" kindref="compound">CIccXmlArrayType&lt;icFloat64Number, icSigFloat64ArrayType&gt;</ref>;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127" refid="d9/d39/a00257_1ad09756c3f2357a3e840c0ba731738379" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1ad596b62f264ef4846d435b494c8d2a77" kindref="member">icRenderingIntent</ref><sp/><ref refid="d5/d35/a00266_1ad09756c3f2357a3e840c0ba731738379" kindref="member">icGetRenderingIntentValue</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*szRenderingIntent)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szRenderingIntent,<sp/></highlight><highlight class="stringliteral">&quot;Perceptual&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ad596b62f264ef4846d435b494c8d2a77a300c7e86384819a2318614c61c20a112" kindref="member">icPerceptual</ref>;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szRenderingIntent,<sp/></highlight><highlight class="stringliteral">&quot;Media-relative<sp/>colorimetric&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ad596b62f264ef4846d435b494c8d2a77a64d6354071e8f3d7b461202675e755cb" kindref="member">icRelativeColorimetric</ref>;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szRenderingIntent,<sp/></highlight><highlight class="stringliteral">&quot;Saturation&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ad596b62f264ef4846d435b494c8d2a77ae73fda5aaf64986600eb12f2f41e85f3" kindref="member">icSaturation</ref>;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szRenderingIntent,<sp/></highlight><highlight class="stringliteral">&quot;ICC-absolute<sp/>colorimetric&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ad596b62f264ef4846d435b494c8d2a77ae6136c556a175effd2e35cb1db5ff944" kindref="member">icAbsoluteColorimetric</ref>;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ad596b62f264ef4846d435b494c8d2a77a300c7e86384819a2318614c61c20a112" kindref="member">icPerceptual</ref>;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141" refid="d9/d39/a00257_1a9df441a57e3659e7ae404779feaea9a3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*<sp/><ref refid="d5/d35/a00266_1a9df441a57e3659e7ae404779feaea9a3" kindref="member">icGetTagSigTypeName</ref>(<ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref><sp/>tagTypeSig)</highlight></codeline>
<codeline lineno="1142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*rv<sp/>=<sp/><ref refid="da/dd8/a01265_1aa6aef9f6c963c17afc3f4d40b5d71f3a" kindref="member">CIccTagCreator::GetTagTypeSigName</ref>(tagTypeSig);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/><sp/>the<sp/>tag<sp/>signature<sp/>is<sp/>not<sp/>found,<sp/>it<sp/>is<sp/>a<sp/>custom<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rv)</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;PrivateType&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152" refid="d9/d39/a00257_1a7e4a8379f29fbaded2a4dd75b6222e55" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref><sp/><ref refid="d5/d35/a00266_1a7e4a8379f29fbaded2a4dd75b6222e55" kindref="member">icGetTypeNameTagSig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*<sp/>szTagType)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1a659ff2074de1288b9654ce36e252a493" kindref="member">CIccTagCreator::GetTagTypeNameSig</ref>(szTagType);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158" refid="d9/d39/a00257_1a73fbe64b89eaab9f4c1e20e1d0424761" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*<sp/><ref refid="d5/d35/a00266_1aad9c9a8b3a0e06f659b0ce5b1631810a" kindref="member">icGetTagSigName</ref>(<ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref><sp/>tagTypeSig)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*rv<sp/>=<sp/><ref refid="da/dd8/a01265_1a7c59cb6e6fcce1dae966cbad6d95b9fe" kindref="member">CIccTagCreator::GetTagSigName</ref>(tagTypeSig);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/><sp/>the<sp/>tag<sp/>signature<sp/>is<sp/>not<sp/>found,<sp/>it<sp/>is<sp/>a<sp/>custom<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rv)</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;PrivateTag&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169" refid="d9/d39/a00257_1adc2f3af8fcb19d532371a3776c95dcdd" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref><sp/><ref refid="d5/d35/a00266_1aafe4a2ab443888507597a7b0bb31290e" kindref="member">icGetTagNameSig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*szName)</highlight></codeline>
<codeline lineno="1170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1a95e4fcd099488e0b460153b9c2237c6d" kindref="member">CIccTagCreator::GetTagNameSig</ref>(szName);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175" refid="d9/d39/a00257_1ac10624d354a483abc82f31013e78a4cd" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1af513aa5d6844f10ca9aa78ad5fa7859b" kindref="member">icStandardObserver</ref><sp/><ref refid="d5/d35/a00266_1ac10624d354a483abc82f31013e78a4cd" kindref="member">icGetNamedStandardObserverValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*<sp/>str)</highlight></codeline>
<codeline lineno="1176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>observer&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1af513aa5d6844f10ca9aa78ad5fa7859ba363218b26c81ee65a62869b50aae371e" kindref="member">icStdObsUnknown</ref>;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;CIE<sp/>1931<sp/>(two<sp/>degree)<sp/>standard<sp/>observer&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1af513aa5d6844f10ca9aa78ad5fa7859ba75bc24faaa2326e527a38382dc626ab8" kindref="member">icStdObs1931TwoDegrees</ref>;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;CIE<sp/>1964<sp/>(ten<sp/>degree)<sp/>standard<sp/>observer&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1af513aa5d6844f10ca9aa78ad5fa7859ba56d2f4a07f7b0624a6aab2a9b9d62b43" kindref="member">icStdObs1964TenDegrees</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2d017e608a3baa5837827ccefb14771c" kindref="member">icStdObsCustom</ref>;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190" refid="d9/d39/a00257_1a15a2a61f96267fe65a6e79e413f6e88a" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1a913fdffb4ed34f95d70833d696a65d99" kindref="member">icMeasurementGeometry</ref><sp/><ref refid="d5/d35/a00266_1a15a2a61f96267fe65a6e79e413f6e88a" kindref="member">icGeNamedtMeasurementGeometryValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*<sp/>str)</highlight></codeline>
<codeline lineno="1191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Geometry<sp/>Unknown&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a913fdffb4ed34f95d70833d696a65d99ad5402ac19929041f150fd24596fadcae" kindref="member">icGeometryUnknown</ref>;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Geometry<sp/>0-45<sp/>or<sp/>45-0&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a913fdffb4ed34f95d70833d696a65d99a6f2f98eb0066eaa49b79632eb2beef2f" kindref="member">icGeometry045or450</ref>;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Geometry<sp/>0-d<sp/>or<sp/>d-0&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a913fdffb4ed34f95d70833d696a65d99a72e0cb6f5045b9053a1e59623e6562c2" kindref="member">icGeometry0dord0</ref>;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Max<sp/>Geometry&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ab99357bfba043bf04f1bb86bd1e57a47" kindref="member">icMaxEnumGeometry</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a913fdffb4ed34f95d70833d696a65d99ad5402ac19929041f150fd24596fadcae" kindref="member">icGeometryUnknown</ref>;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207" refid="d9/d39/a00257_1a9a9b1edaba3b35fb7beecc1ff5ec5ac1" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1a242c6f629b1f7891df0b57de836c85eb" kindref="member">icMeasurementFlare</ref><sp/><ref refid="d5/d35/a00266_1a9a9b1edaba3b35fb7beecc1ff5ec5ac1" kindref="member">icGetNamedMeasurementFlareValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*<sp/>str)</highlight></codeline>
<codeline lineno="1208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Flare<sp/>0&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a242c6f629b1f7891df0b57de836c85ebafe8f84f868bdc90cd64f96d4e742350e" kindref="member">icFlare0</ref>;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Flare<sp/>100&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a242c6f629b1f7891df0b57de836c85ebad510342b8cfc2c8b819e0eb474e4abef" kindref="member">icFlare100</ref>;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Max<sp/>Flare&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a8c4bb6cee30c24cc10642031703a16db" kindref="member">icMaxEnumFlare</ref>;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a242c6f629b1f7891df0b57de836c85ebafe8f84f868bdc90cd64f96d4e742350e" kindref="member">icFlare0</ref>;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221" refid="d9/d39/a00257_1abfaa8c68f9f1ae46bf1f4578eb06d0f1" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17" kindref="member">icIlluminant</ref><sp/><ref refid="d5/d35/a00266_1abfaa8c68f9f1ae46bf1f4578eb06d0f1" kindref="member">icGetIlluminantValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*<sp/>str)</highlight></codeline>
<codeline lineno="1222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>Unknown&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17ab1c241e8a8bf7f4843c929227113ac84" kindref="member">icIlluminantUnknown</ref>;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>D50&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;D50&quot;</highlight><highlight class="normal">))<sp/><sp/></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17ac5371c55bd4c3d83624ba6cf705207fd" kindref="member">icIlluminantD50</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>D65&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;D65&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17ab5abfa1ed5e6ceb001b00f4b13444426" kindref="member">icIlluminantD65</ref>;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>D93&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;D93&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17abff07031c0b07488498839610152d9e2" kindref="member">icIlluminantD93</ref>;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>F2&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;F2&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a44378a4d6c29b2c5ffa5e8713b7bcdfd" kindref="member">icIlluminantF2</ref>;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>D55&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;D55&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a4a7cbc826a131c94c39dd5d5b1aa27b5" kindref="member">icIlluminantD55</ref>;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>A&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a8a45d870e58637e69dba6880adcfd8a7" kindref="member">icIlluminantA</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>EquiPowerE&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>E&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a376fbad42501a31786f44ae26ef711e7" kindref="member">icIlluminantEquiPowerE</ref>;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>F8&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;F8&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a0c6a226ae923661e4a7b094543f2bc12" kindref="member">icIlluminantF8</ref>;<sp/></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>Black<sp/>Body&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Black<sp/>Body&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17aa2ae921dec6ee8f3fede2f53bd7f3d60" kindref="member">icIlluminantBlackBody</ref>;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>Daylight&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Daylight&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a4f741f748f7d67a4c26eaf716f4acfeb" kindref="member">icIlluminantDaylight</ref>;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>B&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a7496498516f74e19ad2de229c2fe641a" kindref="member">icIlluminantB</ref>;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>C&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17acdbda48c6c0d6bb633cdeb77a8203094" kindref="member">icIlluminantC</ref>;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>F1&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;F1&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a26a20c59010c38ddeeee0ce630acc23f" kindref="member">icIlluminantF1</ref>;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>F3&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;F3&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a48fa50f619ae962be0cd59fc7d40c67b" kindref="member">icIlluminantF3</ref>;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>F4&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;F4&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a44dc6c1dcbc50da22c3a0b7fccebbd3a" kindref="member">icIlluminantF4</ref>;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>F5&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;F5&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17acfae429d27688d4d2c58af1a2e7b3e72" kindref="member">icIlluminantF5</ref>;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>F6&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;F6&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a03b4215125807903e09d07c1e695501e" kindref="member">icIlluminantF6</ref>;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>F7&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;F7&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a3c89b422ea021e634a7a70cce1d97674" kindref="member">icIlluminantF7</ref>;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>F9&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;F9&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a9369446635e00e09a8179c9631dc31d0" kindref="member">icIlluminantF9</ref>;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>F10&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;F10&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17ab8bfaccb1ee450e329ecfefa4c0d7156" kindref="member">icIlluminantF10</ref>;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>F11&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;F11&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17a3a70dcf570e00d636c1c75689488c120" kindref="member">icIlluminantF11</ref>;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Illuminant<sp/>F12&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;F12&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17ae7af34e1cafa130d2f275db3565face4" kindref="member">icIlluminantF12</ref>;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ae5c70420dbaf3c07c2412285b6aab813" kindref="member">icIlluminantCustom</ref>;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295" refid="d9/d39/a00257_1a9c8f67b712d7d370a26c759e8afbce2d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*<sp/><ref refid="d5/d35/a00266_1a9c8f67b712d7d370a26c759e8afbce2d" kindref="member">icGetStandardObserverName</ref>(<ref refid="d7/d46/a00002_1af513aa5d6844f10ca9aa78ad5fa7859b" kindref="member">icStandardObserver</ref><sp/>str)</highlight></codeline>
<codeline lineno="1296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(str)<sp/>{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1af513aa5d6844f10ca9aa78ad5fa7859ba363218b26c81ee65a62869b50aae371e" kindref="member">icStdObsUnknown</ref>:</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>Observer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1af513aa5d6844f10ca9aa78ad5fa7859ba75bc24faaa2326e527a38382dc626ab8" kindref="member">icStdObs1931TwoDegrees</ref>:</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;CIE<sp/>1931<sp/>standard<sp/>colorimetric<sp/>observer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1af513aa5d6844f10ca9aa78ad5fa7859ba56d2f4a07f7b0624a6aab2a9b9d62b43" kindref="member">icStdObs1964TenDegrees</ref>:</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;CIE<sp/>1964<sp/>standard<sp/>colorimetric<sp/>observer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>Observer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312" refid="d9/d39/a00257_1a522c038996d47b04a3b404b85133e78c" refkind="member"><highlight class="normal"><ref refid="da/def/a00513" kindref="compound">icDateTimeNumber</ref><sp/><ref refid="d5/d35/a00266_1a522c038996d47b04a3b404b85133e78c" kindref="member">icGetDateTimeValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*<sp/>str)</highlight></codeline>
<codeline lineno="1313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>day=0,<sp/>month=0,<sp/>year=0,<sp/>hours=0,<sp/>minutes=0,<sp/>seconds=0;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/def/a00513" kindref="compound">icDateTimeNumber</ref><sp/>dateTime<sp/>=<sp/>{};<sp/></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d5/d16/a00029_1a4e0be90a3757e352f42612d09a7d1aa5" kindref="member">stricmp</ref>(str,<sp/></highlight><highlight class="stringliteral">&quot;now&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>rawtime;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>*<sp/>timeinfo;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>time<sp/>(<sp/>&amp;rawtime<sp/>);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/>timeinfo<sp/>=<sp/>localtime<sp/>(<sp/>&amp;rawtime<sp/>);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/>year<sp/>=<sp/>timeinfo-&gt;tm_year+1900;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>month<sp/>=<sp/>timeinfo-&gt;tm_mon+1;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>day<sp/>=<sp/>timeinfo-&gt;tm_mday;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/>hours<sp/>=<sp/>timeinfo-&gt;tm_hour;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>minutes<sp/>=<sp/>timeinfo-&gt;tm_min;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>seconds<sp/>=<sp/>timeinfo-&gt;tm_sec;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(str,<sp/></highlight><highlight class="stringliteral">&quot;%d-%02d-%02dT%02d:%02d:%02d&quot;</highlight><highlight class="normal">,<sp/>&amp;year,<sp/>&amp;month,<sp/>&amp;day,<sp/>&amp;hours,<sp/>&amp;minutes,<sp/>&amp;seconds);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>dateTime.<ref refid="da/def/a00513_1a1c28dcfa33b3bba180c5abebd74a29ef" kindref="member">year</ref><sp/>=<sp/>year;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>dateTime.<ref refid="da/def/a00513_1a208ea2fce0a9c7e72c3c06d5cbb43274" kindref="member">month</ref><sp/>=<sp/>month;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/>dateTime.<ref refid="da/def/a00513_1aa853a4d45cda9f9542d12edf872d1b95" kindref="member">day</ref><sp/>=<sp/>day;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>dateTime.<ref refid="da/def/a00513_1a750a7db1ac713dfeea3c807a2f3a5a08" kindref="member">hours</ref><sp/>=<sp/>hours;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/>dateTime.<ref refid="da/def/a00513_1a263e022871eed8cc62e3d35140d1a0bc" kindref="member">minutes</ref><sp/>=<sp/>minutes;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>dateTime.<ref refid="da/def/a00513_1a455c54212545ed44d29e800c62596c1c" kindref="member">seconds</ref><sp/>=<sp/>seconds;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dateTime;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344" refid="d9/d39/a00257_1ab515209dc98599451e8def16c2cdee32" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1a7d5ef7f224b316dacc02ba0bce6d3110" kindref="member">icUInt64Number</ref><sp/><ref refid="d5/d35/a00266_1ab515209dc98599451e8def16c2cdee32" kindref="member">icGetDeviceAttrValue</ref>(xmlNode<sp/>*pNode)</highlight></codeline>
<codeline lineno="1345"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a7d5ef7f224b316dacc02ba0bce6d3110" kindref="member">icUInt64Number</ref><sp/>devAttr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlAttr<sp/>*attr<sp/>=<sp/><ref refid="d5/d35/a00266_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;ReflectiveOrTransparency&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>&amp;&amp;<sp/>!strcmp(<ref refid="d5/d35/a00266_1acd7c60d9436e5019c7bc25db7fd0a77a" kindref="member">icXmlAttrValue</ref>(attr),<sp/></highlight><highlight class="stringliteral">&quot;transparency&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>devAttr<sp/>|=<sp/><ref refid="d7/d46/a00002_1a23782fd6bbffe07bd5973f14361bb734" kindref="member">icTransparency</ref>;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d5/d35/a00266_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;GlossyOrMatte&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>&amp;&amp;<sp/>!strcmp(<ref refid="d5/d35/a00266_1acd7c60d9436e5019c7bc25db7fd0a77a" kindref="member">icXmlAttrValue</ref>(attr),<sp/></highlight><highlight class="stringliteral">&quot;matte&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>devAttr<sp/>|=<sp/><ref refid="d7/d46/a00002_1a5c7602687a50252ff6f49406477a5bea" kindref="member">icMatte</ref>;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d5/d35/a00266_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;MediaPolarity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>&amp;&amp;<sp/>!strcmp(<ref refid="d5/d35/a00266_1acd7c60d9436e5019c7bc25db7fd0a77a" kindref="member">icXmlAttrValue</ref>(attr),<sp/></highlight><highlight class="stringliteral">&quot;negative&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>devAttr<sp/>|=<sp/><ref refid="d7/d46/a00002_1a649569fdbc20b4f4a81af7edb37bef8f" kindref="member">icMediaNegative</ref>;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d5/d35/a00266_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;MediaColour&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>&amp;&amp;<sp/>!strcmp(<ref refid="d5/d35/a00266_1acd7c60d9436e5019c7bc25db7fd0a77a" kindref="member">icXmlAttrValue</ref>(attr),<sp/></highlight><highlight class="stringliteral">&quot;blackAndWhite&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>devAttr<sp/>|=<sp/><ref refid="d7/d46/a00002_1a1ed9be94358254a1f46b45eb52f4a541" kindref="member">icMediaBlackAndWhite</ref>;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/>attr<sp/>=<sp/><ref refid="d5/d35/a00266_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;VendorSpecific&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a7d5ef7f224b316dacc02ba0bce6d3110" kindref="member">icUInt64Number</ref><sp/>vendor;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(<ref refid="d5/d35/a00266_1acd7c60d9436e5019c7bc25db7fd0a77a" kindref="member">icXmlAttrValue</ref>(attr),<sp/></highlight><highlight class="stringliteral">&quot;%llx&quot;</highlight><highlight class="normal">,<sp/>&amp;vendor);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/>devAttr<sp/>|=<sp/>vendor;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>devAttr;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377" refid="d9/d39/a00257_1a2e2198cd437d3c36ae2040acba4a07e7" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1a2b2782f9ad3719ac6197c1f3d9816132" kindref="member">icColorantEncoding</ref><sp/><ref refid="d5/d35/a00266_1a2e2198cd437d3c36ae2040acba4a07e7" kindref="member">icGetColorantValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*<sp/>str)</highlight></codeline>
<codeline lineno="1378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;ITU-R<sp/>BT.709&quot;</highlight><highlight class="normal">))<sp/><sp/></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2b2782f9ad3719ac6197c1f3d9816132a97eaf81a9b66f3bd4f1f1758af636c0d" kindref="member">icColorantITU</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;SMPTE<sp/>RP145-1994&quot;</highlight><highlight class="normal">))<sp/><sp/></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2b2782f9ad3719ac6197c1f3d9816132ae593a74f211a7ed7cb4da81609763cf7" kindref="member">icColorantSMPTE</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;EBU<sp/>Tech.3213-E&quot;</highlight><highlight class="normal">))<sp/><sp/></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2b2782f9ad3719ac6197c1f3d9816132a6a1cf103b2c513f645512f5032db8d9d" kindref="member">icColorantEBU</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;P22&quot;</highlight><highlight class="normal">))<sp/><sp/></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2b2782f9ad3719ac6197c1f3d9816132af04ffc8fb91da99c8757aafcea30892c" kindref="member">icColorantP22</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a2b2782f9ad3719ac6197c1f3d9816132a8153d8240843a9825a1122fbb698f964" kindref="member">icColorantUnknown</ref>;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394" refid="d9/d39/a00257_1abfd91744aadc29c59db098931ce63ffa" refkind="member"><highlight class="normal"><ref refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78" kindref="member">icMeasurementUnitSig</ref><sp/><ref refid="d5/d35/a00266_1abfd91744aadc29c59db098931ce63ffa" kindref="member">icGetMeasurementValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*<sp/>str)</highlight></codeline>
<codeline lineno="1395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Status<sp/>A&quot;</highlight><highlight class="normal">))<sp/><sp/></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78a7a34807a4459a7fcedbfdacdc0fb4f78" kindref="member">icSigStatusA</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Status<sp/>E&quot;</highlight><highlight class="normal">))<sp/><sp/></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78a29cdd67a1f54a822c763942a4d9971a2" kindref="member">icSigStatusE</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Status<sp/>I&quot;</highlight><highlight class="normal">))<sp/><sp/></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78a28246c0327d46c333395de46ee37edab" kindref="member">icSigStatusI</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Status<sp/>T&quot;</highlight><highlight class="normal">))<sp/><sp/></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78aa110dfae73978c9afab842b1d74320df" kindref="member">icSigStatusT</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Status<sp/>M&quot;</highlight><highlight class="normal">))<sp/><sp/></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78afb573c4a707be32fd465bae2e063aaab" kindref="member">icSigStatusM</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;DIN<sp/>with<sp/>no<sp/>polarizing<sp/>filter&quot;</highlight><highlight class="normal">))<sp/><sp/></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78a8cfe99677b174541f071898ac1ae227f" kindref="member">icSigDN</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;DIN<sp/>with<sp/>polarizing<sp/>filter&quot;</highlight><highlight class="normal">))<sp/><sp/></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78ad2ba89e0bbbe0e28f25f12bbceb22829" kindref="member">icSigDNP</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Narrow<sp/>band<sp/>DIN<sp/>with<sp/>no<sp/>polarizing<sp/>filter&quot;</highlight><highlight class="normal">))<sp/><sp/></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78ae7f4fe5da63530727a71394766d77ad1" kindref="member">icSigDNN</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;Narrow<sp/>band<sp/>DIN<sp/>with<sp/>polarizing<sp/>filter&quot;</highlight><highlight class="normal">))<sp/><sp/></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78a3914cfba84254bdb2dd6dfc0cf46dcff" kindref="member">icSigDNNP</ref>;<sp/></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a70823a6060e4fe159171b2b3c0e3bf78a7a34807a4459a7fcedbfdacdc0fb4f78" kindref="member">icSigStatusA</ref>;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426" refid="d9/d39/a00257_1a29395cadeb827a6be39833c934c84074" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d5/d35/a00266_1a29395cadeb827a6be39833c934c84074" kindref="member">icGetDeviceAttrName</ref>(<ref refid="d7/d46/a00002_1a7d5ef7f224b316dacc02ba0bce6d3110" kindref="member">icUInt64Number</ref><sp/>devAttr)</highlight></codeline>
<codeline lineno="1427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>xml;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(devAttr<sp/>&amp;<sp/><ref refid="d7/d46/a00002_1a23782fd6bbffe07bd5973f14361bb734" kindref="member">icTransparency</ref>)</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;DeviceAttributes<sp/>ReflectiveOrTransparency=\&quot;transparency\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;DeviceAttributes<sp/>ReflectiveOrTransparency=\&quot;reflective\&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(devAttr<sp/>&amp;<sp/><ref refid="d7/d46/a00002_1a5c7602687a50252ff6f49406477a5bea" kindref="member">icMatte</ref>)</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>GlossyOrMatte=\&quot;matte\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>GlossyOrMatte=\&quot;glossy\&quot;&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(devAttr<sp/>&amp;<sp/><ref refid="d7/d46/a00002_1a649569fdbc20b4f4a81af7edb37bef8f" kindref="member">icMediaNegative</ref>)</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MediaPolarity=\&quot;negative\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MediaPolarity=\&quot;positive\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(devAttr<sp/>&amp;<sp/><ref refid="d7/d46/a00002_1a1ed9be94358254a1f46b45eb52f4a541" kindref="member">icMediaBlackAndWhite</ref>)</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MediaColour=\&quot;blackAndwhite\&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MediaColour=\&quot;colour\&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a7d5ef7f224b316dacc02ba0bce6d3110" kindref="member">icUInt64Number</ref><sp/>otherAttr<sp/>=<sp/>~((<ref refid="d7/d46/a00002_1a7d5ef7f224b316dacc02ba0bce6d3110" kindref="member">icUInt64Number</ref>)<ref refid="d7/d46/a00002_1a23782fd6bbffe07bd5973f14361bb734" kindref="member">icTransparency</ref>|<ref refid="d7/d46/a00002_1a5c7602687a50252ff6f49406477a5bea" kindref="member">icMatte</ref>|<ref refid="d7/d46/a00002_1a649569fdbc20b4f4a81af7edb37bef8f" kindref="member">icMediaNegative</ref>|<ref refid="d7/d46/a00002_1a1ed9be94358254a1f46b45eb52f4a541" kindref="member">icMediaBlackAndWhite</ref>);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(devAttr<sp/>&amp;<sp/>otherAttr)<sp/>{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>VendorSpecific=\&quot;%016llx\&quot;&quot;</highlight><highlight class="normal">,<sp/>devAttr<sp/>&amp;<sp/>otherAttr);</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xml;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469" refid="d9/d39/a00257_1ac72d9ecf26774be9858d24b2f98435b9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d5/d35/a00266_1ab519fe18a17449734971d4c628b6e8b2" kindref="member">icGetHeaderFlagsName</ref>(<ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>flags,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bUsesMCS)</highlight></codeline>
<codeline lineno="1470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>xml;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/><ref refid="d7/d46/a00002_1a6b9d49de8dfb75ab2e520ef9215e84f4" kindref="member">icEmbeddedProfileTrue</ref>)</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;ProfileFlags<sp/>EmbeddedInFile=\&quot;true\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;ProfileFlags<sp/>EmbeddedInFile=\&quot;false\&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/><ref refid="d7/d46/a00002_1a8c631cc38423dcdb5f9a1fa7f6323819" kindref="member">icUseWithEmbeddedDataOnly</ref>)</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>UseWithEmbeddedDataOnly=\&quot;true\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>UseWithEmbeddedDataOnly=\&quot;false\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/><ref refid="d7/d46/a00002_1acec04d771a806ba93f4ab275fe1f9e49" kindref="member">icExtendedRangePCS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ExtendedRangePCS=\&quot;true\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>otherFlags<sp/>=<sp/>~(<ref refid="d7/d46/a00002_1a6b9d49de8dfb75ab2e520ef9215e84f4" kindref="member">icEmbeddedProfileTrue</ref><sp/>|<sp/><ref refid="d7/d46/a00002_1a8c631cc38423dcdb5f9a1fa7f6323819" kindref="member">icUseWithEmbeddedDataOnly</ref><sp/>|<sp/><ref refid="d7/d46/a00002_1acec04d771a806ba93f4ab275fe1f9e49" kindref="member">icExtendedRangePCS</ref>);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bUsesMCS)<sp/>{</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/><ref refid="d7/d46/a00002_1ada4a40a4c4b6cd075f42e5364e90dcf7" kindref="member">icMCSNeedsSubsetTrue</ref>)</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MCSNeedsSubset=\&quot;true\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MCSNeedsSubset=\&quot;false\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/>otherFlags<sp/>&amp;=<sp/>~icMCSNeedsSubsetTrue;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>otherFlags)<sp/>{</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>VendorFlags=\&quot;%08x\&quot;&quot;</highlight><highlight class="normal">,<sp/>flags<sp/>&amp;<sp/>otherFlags);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xml;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513" refid="d9/d39/a00257_1ab56d6af38aa473fa839b66890512fbec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d5/d35/a00266_1ab56d6af38aa473fa839b66890512fbec" kindref="member">icGetPadSpace</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="1514"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/>std::string<sp/>space<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>value<sp/>&gt;=0<sp/>&amp;&amp;<sp/>value<sp/>&lt;<sp/>10)</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/>space<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>value<sp/>&gt;=10<sp/>&amp;&amp;<sp/>value<sp/>&lt;<sp/>100)</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/>space<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>value<sp/>&gt;=100<sp/>&amp;&amp;<sp/>value<sp/>&lt;<sp/>1000<sp/>)</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>space<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>space;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="IccXML/IccLibXML/IccUtilXml.cpp"/>
  </compounddef>
</doxygen>
