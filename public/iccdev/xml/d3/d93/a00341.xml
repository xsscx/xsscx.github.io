<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="d3/d93/a00341" kind="file" language="C++">
    <compoundname>iccApplyNamedCmm.cpp</compoundname>
    <includes refid="d6/d5b/a00026" local="yes">IccCmm.h</includes>
    <includes refid="d7/dce/a00143" local="yes">IccUtil.h</includes>
    <includes refid="d4/d81/a00110" local="yes">IccDefs.h</includes>
    <includes refid="d4/dee/a00008" local="yes">IccApplyBPC.h</includes>
    <includes refid="dc/dee/a00053" local="yes">IccEnvVar.h</includes>
    <includes refid="d5/de0/a00050" local="yes">IccMpeCalc.h</includes>
    <includes refid="dd/dad/a00005" local="yes">IccProfLibVer.h</includes>
    <includes refid="dc/d50/a00332" local="yes">../IccCommon/IccCmmConfig.h</includes>
    <incdepgraph>
      <node id="29">
        <label>IccApplyBPC.h</label>
        <link refid="d4/dee/a00008"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>IccCmm.h</label>
        <link refid="d6/d5b/a00026"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>IccDefs.h</label>
        <link refid="d4/d81/a00110"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>IccEnvVar.h</label>
        <link refid="dc/dee/a00053"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>IccIO.h</label>
        <link refid="df/d6a/a00119"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>IccMatrixMath.h</label>
        <link refid="dc/dfe/a00125"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>IccMpeCalc.h</label>
        <link refid="d5/de0/a00050"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>IccPcc.h</label>
        <link refid="d4/d3a/a00101"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>IccProfLibConf.h</label>
        <link refid="d5/d16/a00029"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>IccProfLibVer.h</label>
        <link refid="dd/dad/a00005"/>
      </node>
      <node id="3">
        <label>IccProfile.h</label>
        <link refid="d4/d51/a00017"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>IccSolve.h</label>
        <link refid="d3/d52/a00023"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>IccTag.h</label>
        <link refid="d2/df5/a00137"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>IccTagBasic.h</label>
        <link refid="da/dec/a00080"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>IccTagComposite.h</label>
        <link refid="d1/da8/a00230"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>IccTagDict.h</label>
        <link refid="df/d03/a00062"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>IccTagEmbedIcc.h</label>
        <link refid="dc/d9a/a00218"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>IccTagFactory.h</label>
        <link refid="d8/d41/a00038"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>IccTagLut.h</label>
        <link refid="da/d24/a00068"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>IccTagMPE.h</label>
        <link refid="d7/d25/a00182"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>IccTagProfSeqId.h</label>
        <link refid="d5/df1/a00206"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>IccUtil.h</label>
        <link refid="d7/dce/a00143"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>icProfileHeader.h</label>
        <link refid="d7/d46/a00002"/>
      </node>
      <node id="1">
        <label>Tools/CmdLine/IccApplyNamedCmm/iccApplyNamedCmm.cpp</label>
        <link refid="d3/d93/a00341"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>../IccCommon/IccCmmConfig.h</label>
        <link refid="dc/d50/a00332"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>IccJsonUtil.h</label>
        <link refid="dd/d4e/a00329"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>cstdlib</label>
      </node>
      <node id="27">
        <label>cstring</label>
      </node>
      <node id="25">
        <label>limits</label>
      </node>
      <node id="10">
        <label>list</label>
      </node>
      <node id="31">
        <label>map</label>
      </node>
      <node id="19">
        <label>memory</label>
      </node>
      <node id="38">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>stdio.h</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="34">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="d4/dbb/a02097" prot="public">CIccLogDebugger</innerclass>
    <innernamespace refid="dd/db5/a00365">nlohmann</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="d3/d93/a00341_1af2bf8c7d947cb795089de5f391f91d4d" prot="public" static="no">
        <name>IsSpacePCS</name>
        <param><defname>x</defname></param>
        <initializer>((x)==<ref refid="d7/d46/a00002_1a61e8bac86860cdefe93533feac126917a7030370eb0ee02671895978dc61858d8" kindref="member">icSigXYZData</ref> || (x)==<ref refid="d7/d46/a00002_1a61e8bac86860cdefe93533feac126917a0925d8599ecad36e7cc572c5ba1cd07f" kindref="member">icSigLabData</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Tools/CmdLine/IccApplyNamedCmm/iccApplyNamedCmm.cpp" line="89" column="9" bodyfile="Tools/CmdLine/IccApplyNamedCmm/iccApplyNamedCmm.cpp" bodystart="89" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="d3/d93/a00341_1a25bbeb1ec8b9677576fe260b035a453d" prot="public" static="no">
        <type>std::list&lt; <ref refid="d4/d3a/a00101_1a14e10b61df6e9ec7c90c5d3bc38c78d9" kindref="member">CIccProfile</ref> * &gt;</type>
        <definition>typedef std::list&lt;CIccProfile*&gt; IccProfilePtrList</definition>
        <argsstring></argsstring>
        <name>IccProfilePtrList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Tools/CmdLine/IccApplyNamedCmm/iccApplyNamedCmm.cpp" line="183" column="19" bodyfile="Tools/CmdLine/IccApplyNamedCmm/iccApplyNamedCmm.cpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d93/a00341_1ae4e6ade93fc00fa4bea876439d7f15fb" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="d4/dbb/a02097" kindref="compound">CIccLogDebugger</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;CIccLogDebugger&gt; LogDebuggerPtr</definition>
        <argsstring></argsstring>
        <name>LogDebuggerPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Tools/CmdLine/IccApplyNamedCmm/iccApplyNamedCmm.cpp" line="176" column="25" bodyfile="Tools/CmdLine/IccApplyNamedCmm/iccApplyNamedCmm.cpp" bodystart="176" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="d3/d93/a00341_1ac0f2228420376f4db7e1274f2b41667c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, const char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Tools/CmdLine/IccApplyNamedCmm/iccApplyNamedCmm.cpp" line="234" column="5" bodyfile="Tools/CmdLine/IccApplyNamedCmm/iccApplyNamedCmm.cpp" bodystart="234" bodyend="610"/>
        <references refid="d6/d3b/a02121_1aa5d9e4211e52bc04c3e48b71f35082e3" compoundref="d8/d23/a00326" startline="1780" endline="1783">CIccCfgDataEntry::CIccCfgDataEntry</references>
        <references refid="d1/d31/a01245_1aa48394d74fb9386047b7bb5bfc37aadc" compoundref="de/d79/a00203" startline="43" endline="47">CIccCmmEnvVarHint::CIccCmmEnvVarHint</references>
        <references refid="d3/d7b/a01249_1aab8ca3a3f035961aeda9b75911c16425" compoundref="de/d79/a00203" startline="54" endline="58">CIccCmmPccEnvVarHint::CIccCmmPccEnvVarHint</references>
        <references refid="d4/d53/a00429_1a913e7eb5f85235f9df5fcc1c0835d09a" compoundref="d5/db1/a00140" startline="2596" endline="2604">CIccPixelBuf::CIccPixelBuf</references>
        <references refid="d4/d3a/a00101_1a14e10b61df6e9ec7c90c5d3bc38c78d9" compoundref="d4/d3a/a00101" startline="80">CIccProfile</references>
        <references refid="d4/dd7/a00793_1a14e131b497989c1876e397c5ff0c5ad6" compoundref="d7/d46/a00002" startline="2048">icHeader::colorSpace</references>
        <references refid="d4/dd7/a00793_1a1f3bfb3d969d1976ee9913792496c6c5" compoundref="d7/d46/a00002" startline="2047">icHeader::deviceClass</references>
        <references refid="da/d71/a02101_1a6fceef656dd5730345754f660cf347f3" compoundref="d8/d23/a00326" startline="224" endline="254">CIccCfgDataApply::fromArgs</references>
        <references refid="d0/d79/a02117_1a57c1fdc042874feac7f3106eaf905780" compoundref="d8/d23/a00326" startline="715" endline="793">CIccCfgProfileSequence::fromArgs</references>
        <references refid="da/d71/a02101_1a24ef831394cf5804f368aacca344afbe" compoundref="d8/d23/a00326" startline="256" endline="279">CIccCfgDataApply::fromJson</references>
        <references refid="d0/d79/a02117_1a58b05fa37369a89adf812c45dfac004a" compoundref="d8/d23/a00326" startline="795" endline="816">CIccCfgProfileSequence::fromJson</references>
        <references refid="d8/db2/a02125_1a514514ebda19e651ac6ba4ba2b333419" compoundref="d8/d23/a00326" startline="1364" endline="1399">CIccCfgColorData::fromJson</references>
        <references refid="d8/db2/a02125_1a16c5c855a20c0ed7793ad0492891b95b" compoundref="d8/d23/a00326" startline="979" endline="1061">CIccCfgColorData::fromLegacy</references>
        <references refid="dc/d50/a00332_1ad4cc877d09a9c84181620557d478bac6a950fc014bf874b816451869f384b1d49" compoundref="dc/d50/a00332" startline="13">icCfgColorData</references>
        <references refid="dc/d50/a00332_1ad4cc877d09a9c84181620557d478bac6a9a51ab8e7caba99f51a8dff188e77606" compoundref="dc/d50/a00332" startline="15">icCfgIt8</references>
        <references refid="dc/d50/a00332_1ad4cc877d09a9c84181620557d478bac6a44ad4cadc6666e4dcc3b2bde49f2de45" compoundref="dc/d50/a00332" startline="14">icCfgLegacy</references>
        <references refid="d7/dce/a00143_1a719dc0d47f230294e78ac9c8cbc91a89" compoundref="d5/db1/a00140" startline="1303" endline="1365">icGetSpaceSamples</references>
        <references refid="d7/dce/a00143_1a8889bba08c143da6590f47879f24ccbe" compoundref="d5/db1/a00140" startline="913" endline="916">icIntMax</references>
        <references refid="d7/d46/a00002_1a1cc0ddb4770d5695c83543b62afaa1a0a200e4fc8dcec29c6d411cae0c9a0483c" compoundref="d7/d46/a00002" startline="956">icSigAbstractClass</references>
        <references refid="d7/d46/a00002_1a61e8bac86860cdefe93533feac126917aa23b5cd6907746734b71b3a5eb2034f3" compoundref="d7/d46/a00002" startline="873">icSigNamedData</references>
        <references refid="dd/d4e/a00329_1a1a7e979d2174bbe4adf411c6807d202b" compoundref="de/d55/a00323" startline="420" endline="448">loadJsonFrom</references>
        <references refid="d8/dc6/a02113_1af469abd69c80585d472360aa1bfd9357" compoundref="dc/d50/a00332" startline="121">CIccCfgProfile::m_adjustPcsLuminance</references>
        <references refid="d8/db2/a02125_1abd09ace530d4be2eb202fc5eb0599b56" compoundref="dc/d50/a00332" startline="188">CIccCfgColorData::m_data</references>
        <references refid="da/d71/a02101_1a4d3ba472bd60dca277a967ea4e1d01ce" compoundref="dc/d50/a00332" startline="29">CIccCfgDataApply::m_debugCalc</references>
        <references refid="d6/d3b/a02121_1ab657ff0fe94f16e9edcb2aafd57a6996" compoundref="dc/d50/a00332" startline="161">CIccCfgDataEntry::m_debugInfo</references>
        <references refid="da/d71/a02101_1a9078edfcb9b89f5b4e6880a8780dedd6" compoundref="dc/d50/a00332" startline="40">CIccCfgDataApply::m_dstDigits</references>
        <references refid="da/d71/a02101_1aefe09cd585ec7306ccb59726e2c802d0" compoundref="dc/d50/a00332" startline="39">CIccCfgDataApply::m_dstEncoding</references>
        <references refid="da/d71/a02101_1adec2eb2ef7749340a341b33ad0442665" compoundref="dc/d50/a00332" startline="37">CIccCfgDataApply::m_dstFile</references>
        <references refid="da/d71/a02101_1a3cadb7b098b19b728d39d2029f529034" compoundref="dc/d50/a00332" startline="41">CIccCfgDataApply::m_dstPrecision</references>
        <references refid="da/d71/a02101_1a6051a722ac307139626d32c4bf54a5d7" compoundref="dc/d50/a00332" startline="35">CIccCfgDataApply::m_dstType</references>
        <references refid="d8/db2/a02125_1a9e3a4746dfdc5a73ad356b73613351af" compoundref="dc/d50/a00332" startline="183">CIccCfgColorData::m_encoding</references>
        <references refid="d8/dc6/a02113_1adf8289e5b2a7c8c9618ac98958204343" compoundref="dc/d50/a00332" startline="117">CIccCfgProfile::m_iccEnvVars</references>
        <references refid="d8/dc6/a02113_1a7b4b29dfcfd259dd40eba88c1d547148" compoundref="dc/d50/a00332" startline="114">CIccCfgProfile::m_iccFile</references>
        <references refid="d8/dc6/a02113_1a3bf1af277547b7d2a0e8008767c674ea" compoundref="dc/d50/a00332" startline="115">CIccCfgProfile::m_intent</references>
        <references refid="d8/dc6/a02113_1a2e4654771c968eb87520edea8824ebe2" compoundref="dc/d50/a00332" startline="125">CIccCfgProfile::m_interpolation</references>
        <references refid="d4/dbb/a02097_1a083db25efebfea3915a7eb1c9c52fc4b" compoundref="d3/d93/a00341" startline="104">CIccLogDebugger::m_log</references>
        <references refid="d6/d3b/a02121_1adeab0cf5611dc106ab63cc63b6f264ae" compoundref="dc/d50/a00332" startline="155">CIccCfgDataEntry::m_name</references>
        <references refid="d8/dc6/a02113_1a269f3014e28c7300fc1bf89abfb346e4" compoundref="dc/d50/a00332" startline="119">CIccCfgProfile::m_pccEnvVars</references>
        <references refid="d8/dc6/a02113_1abb21518a641c6abfc122c565f1792e40" compoundref="dc/d50/a00332" startline="118">CIccCfgProfile::m_pccFile</references>
        <references refid="d0/d79/a02117_1a4381b69cc0b5f0f9e9739ef41a97745e" compoundref="dc/d50/a00332" startline="142">CIccCfgProfileSequence::m_profiles</references>
        <references refid="d8/db2/a02125_1ad517b049063d5dde8a2b6aac56c8f895" compoundref="dc/d50/a00332" startline="182">CIccCfgColorData::m_space</references>
        <references refid="d8/db2/a02125_1a1b8e5ed1f700cf1183adaf40565e9187" compoundref="dc/d50/a00332" startline="186">CIccCfgColorData::m_srcEncoding</references>
        <references refid="da/d71/a02101_1afbdea053093b24d83e20e28166d96a89" compoundref="dc/d50/a00332" startline="33">CIccCfgDataApply::m_srcFile</references>
        <references refid="d6/d3b/a02121_1a38c5058d881a54b3827c6be24db8db37" compoundref="dc/d50/a00332" startline="157">CIccCfgDataEntry::m_srcName</references>
        <references refid="d8/db2/a02125_1a391dd8a479c66dbf76cb06e494260d8d" compoundref="dc/d50/a00332" startline="185">CIccCfgColorData::m_srcSpace</references>
        <references refid="da/d71/a02101_1a28cecb4ea7c9c10927509bea131ebf6a" compoundref="dc/d50/a00332" startline="30">CIccCfgDataApply::m_srcType</references>
        <references refid="d6/d3b/a02121_1a1b2a2f8b1bcd3232c3a72add5dcc70e6" compoundref="dc/d50/a00332" startline="158">CIccCfgDataEntry::m_srcValues</references>
        <references refid="d8/dc6/a02113_1ac19bae9915e3f69eb3510988a1c6c483" compoundref="dc/d50/a00332" startline="116">CIccCfgProfile::m_transform</references>
        <references refid="d8/dc6/a02113_1a6db60e1daccda0ac9101ac1c69374988" compoundref="dc/d50/a00332" startline="122">CIccCfgProfile::m_useBPC</references>
        <references refid="d8/dc6/a02113_1abccae699e2de7a13c8632e54eb2f9265" compoundref="dc/d50/a00332" startline="120">CIccCfgProfile::m_useD2BxB2Dx</references>
        <references refid="d8/dc6/a02113_1a5f75f7279a82ffd744957ae08a33b8ae" compoundref="dc/d50/a00332" startline="124">CIccCfgProfile::m_useV5SubProfile</references>
        <references refid="d6/d3b/a02121_1a8d0fe6407e88840d0fed9a219594e81c" compoundref="dc/d50/a00332" startline="156">CIccCfgDataEntry::m_values</references>
        <references refid="d0/dc2/a00104_1a97134bdd4b4bf5e8a43ef018bba0917e" compoundref="d0/dc2/a00104" startline="3397" endline="3415">OpenIccProfile</references>
        <references refid="d4/d53/a00429_1a01be9601e6d7b3f86d9e58be12af03cc" compoundref="d7/dce/a00143" startline="379" endline="379">CIccPixelBuf::operator[]</references>
        <references refid="d4/dbb/a02097_1ab344183b6d33217507fc6443fe595ec2" compoundref="d3/d93/a00341" startline="99" endline="102">CIccLogDebugger::reset</references>
        <references refid="dd/d4e/a00329_1a9533077714414745c078b20e5ffe414e" compoundref="de/d55/a00323" startline="393" endline="418">saveJsonAs</references>
        <references refid="dd/d5d/a01325_1a703f6f8acef15bb34a6c19dbc8b3aa2a" compoundref="d9/d77/a00095" startline="157" endline="163">IIccCalcDebugger::SetDebugger</references>
        <references refid="d8/db2/a02125_1a26b6f4e3187f15b43d6ca42f88cbcdf5" compoundref="d8/d23/a00326" startline="1594" endline="1754">CIccCfgColorData::toIt8</references>
        <references refid="d0/d79/a02117_1ad9a4a297edb1220bb25bb5f9af5c4d07" compoundref="d8/d23/a00326" startline="818" endline="828">CIccCfgProfileSequence::toJson</references>
        <references refid="d8/db2/a02125_1a80a3b1b4d42b4963d93973e3dd63e105" compoundref="d8/d23/a00326" startline="1756" endline="1778">CIccCfgColorData::toJson</references>
        <references refid="d8/db2/a02125_1adb55e5301ce7976543f09c36889edcfa" compoundref="d8/d23/a00326" startline="1401" endline="1496">CIccCfgColorData::toLegacy</references>
        <references refid="d3/d93/a00341_1a5ae07f63d6b390e42068d941038dadf2" compoundref="d3/d93/a00341" startline="185" endline="229">Usage</references>
      </memberdef>
      <memberdef kind="function" id="d3/d93/a00341_1a5ae07f63d6b390e42068d941038dadf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Usage</definition>
        <argsstring>()</argsstring>
        <name>Usage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Displays usage information for the iccPngDump tool.</para>
<para>This function provides details on the correct command-line syntax. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Tools/CmdLine/IccApplyNamedCmm/iccApplyNamedCmm.cpp" line="185" column="6" bodyfile="Tools/CmdLine/IccApplyNamedCmm/iccApplyNamedCmm.cpp" bodystart="185" bodyend="229"/>
        <referencedby refid="de/dd7/a00362_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="de/dd7/a00362" startline="357" endline="409">main</referencedby>
        <referencedby refid="d6/de1/a00356_1a217dbf8b442f20279ea00b898af96f52" compoundref="d6/de1/a00356" startline="150" endline="622">main</referencedby>
        <referencedby refid="d3/d93/a00341_1ac0f2228420376f4db7e1274f2b41667c" compoundref="d3/d93/a00341" startline="234" endline="610">main</referencedby>
        <referencedby refid="d1/dc6/a00347_1a28200b999bf1d10f61edb3763ec741e3" compoundref="d1/dc6/a00347" startline="639" endline="866">main</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>IccApplyNamedCmm.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>Contains:<sp/><sp/><sp/>Console<sp/>app<sp/>that<sp/>applies<sp/>profiles<sp/>to<sp/>text<sp/>data<sp/>geting<sp/>test<sp/>results</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>Version:<sp/><sp/><sp/><sp/>V1</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright:<sp/><sp/>(c)<sp/>see<sp/>below</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>ICC<sp/>Software<sp/>License,<sp/>Version<sp/>0.2</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2003-2023<sp/>The<sp/>International<sp/>Color<sp/>Consortium.<sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>3.<sp/>In<sp/>the<sp/>absence<sp/>of<sp/>prior<sp/>written<sp/>permission,<sp/>the<sp/>names<sp/>&quot;ICC&quot;<sp/>and<sp/>&quot;The</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>International<sp/>Color<sp/>Consortium&quot;<sp/>must<sp/>not<sp/>be<sp/>used<sp/>to<sp/>imply<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>ICC<sp/>organization<sp/>endorses<sp/>or<sp/>promotes<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>INTERNATIONAL<sp/>COLOR<sp/>CONSORTIUM<sp/>OR</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>ITS<sp/>CONTRIBUTING<sp/>MEMBERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>consists<sp/>of<sp/>voluntary<sp/>contributions<sp/>made<sp/>by<sp/>many</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>individuals<sp/>on<sp/>behalf<sp/>of<sp/>the<sp/>The<sp/>International<sp/>Color<sp/>Consortium.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>Membership<sp/>in<sp/>the<sp/>ICC<sp/>is<sp/>encouraged<sp/>when<sp/>this<sp/>software<sp/>is<sp/>used<sp/>for</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>commercial<sp/>purposes.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>For<sp/>more<sp/>information<sp/>on<sp/>The<sp/>International<sp/>Color<sp/>Consortium,<sp/>please</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>see<sp/>&lt;http://www.color.org/&gt;.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>HISTORY:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>-Initial<sp/>implementation<sp/>by<sp/>Max<sp/>Derhak<sp/>5-15-2003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>-Modification<sp/>to<sp/>support<sp/>iccMAX<sp/>by<sp/>Max<sp/>Derhak<sp/>in<sp/>2014</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>-Addition<sp/>of<sp/>JSON<sp/>configuraiton<sp/>by<sp/>Max<sp/>Derhak<sp/>in<sp/>2024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/d5b/a00026" kindref="compound">IccCmm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/dce/a00143" kindref="compound">IccUtil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/d81/a00110" kindref="compound">IccDefs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/dee/a00008" kindref="compound">IccApplyBPC.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dc/dee/a00053" kindref="compound">IccEnvVar.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d5/de0/a00050" kindref="compound">IccMpeCalc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dd/dad/a00005" kindref="compound">IccProfLibVer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../IccCommon/IccCmmConfig.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">nlohmann;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>Declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="d3/d93/a00341_1af2bf8c7d947cb795089de5f391f91d4d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IsSpacePCS(x)<sp/>((x)==icSigXYZData<sp/>||<sp/>(x)==icSigLabData)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="d4/dbb/a02097" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d4/dbb/a02097" kindref="compound">CIccLogDebugger</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="dd/d5d/a01325" kindref="compound">IIccCalcDebugger</ref></highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="d4/dbb/a02097_1a05f9cf0c0184e480690cf8d6d0fc7ce7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d4/dbb/a02097_1a05f9cf0c0184e480690cf8d6d0fc7ce7" kindref="member">~CIccLogDebugger</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="d4/dbb/a02097_1ab344183b6d33217507fc6443fe595ec2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/dbb/a02097_1ab344183b6d33217507fc6443fe595ec2" kindref="member">reset</ref>()</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dbb/a02097_1a083db25efebfea3915a7eb1c9c52fc4b" kindref="member">m_log</ref>.clear();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="d4/dbb/a02097_1a083db25efebfea3915a7eb1c9c52fc4b" refkind="member"><highlight class="normal"><sp/><sp/>std::list&lt;std::string&gt;<sp/><ref refid="d4/dbb/a02097_1a083db25efebfea3915a7eb1c9c52fc4b" kindref="member">m_log</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="d4/dbb/a02097_1a1d10e8ddaf85390127ccb530693006ec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/dbb/a02097_1a1d10e8ddaf85390127ccb530693006ec" kindref="member">BeginApply</ref>()</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dbb/a02097_1a083db25efebfea3915a7eb1c9c52fc4b" kindref="member">m_log</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Begin<sp/>Calc<sp/>Apply&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="d4/dbb/a02097_1ac577f9fd78ef2d0a5827539d9c8087d9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/dbb/a02097_1ac577f9fd78ef2d0a5827539d9c8087d9" kindref="member">EndApply</ref>()</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dbb/a02097_1a083db25efebfea3915a7eb1c9c52fc4b" kindref="member">m_log</ref>.push_back(</highlight><highlight class="stringliteral">&quot;End<sp/>Calculator<sp/>Apply&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dbb/a02097_1a083db25efebfea3915a7eb1c9c52fc4b" kindref="member">m_log</ref>.push_back(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="d4/dbb/a02097_1a5e3a58aae40e429f3ec103e0b420ee6c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/dbb/a02097_1a5e3a58aae40e429f3ec103e0b420ee6c" kindref="member">BeforeOp</ref>(<ref refid="d1/d1a/a01285" kindref="compound">SIccCalcOp</ref>*<sp/>op,<sp/><ref refid="dc/d8c/a01297" kindref="compound">SIccOpState</ref>&amp;<sp/>os,<sp/><ref refid="d1/d1a/a01285" kindref="compound">SIccCalcOp</ref>*<sp/>ops)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op-&gt;<ref refid="d1/d1a/a01285_1a5497e30428937cf4a1492380f4a2b432" kindref="member">sig</ref><sp/>==<sp/><ref refid="d5/de0/a00050_1a0432d830667e697d6768204b6e5ed4a5ab2c90cdb6f17b378a27a04c8e9fc5ac1" kindref="member">icSigIfOp</ref><sp/>||<sp/>op-&gt;<ref refid="d1/d1a/a01285_1a5497e30428937cf4a1492380f4a2b432" kindref="member">sig</ref><sp/>==<sp/><ref refid="d5/de0/a00050_1a0432d830667e697d6768204b6e5ed4a5a7fdb95d1e9dc4550392c82d5358d776e" kindref="member">icSigSelectOp</ref>)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Start:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>opDesc;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>op-&gt;<ref refid="d1/d1a/a01285_1a785a21521fdc744ccc6f5578bd7039af" kindref="member">Describe</ref>(opDesc,<sp/>100);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[200];</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;%7s<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>opDesc.c_str());</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>(int)os.<ref refid="dc/d8c/a01297_1ab3754fddf22c18661914dc452cc1cfbd" kindref="member">pStack</ref>-&gt;size();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%.4f&quot;</highlight><highlight class="normal">,<sp/>(*os.<ref refid="dc/d8c/a01297_1ab3754fddf22c18661914dc452cc1cfbd" kindref="member">pStack</ref>)[j]);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dbb/a02097_1a083db25efebfea3915a7eb1c9c52fc4b" kindref="member">m_log</ref>.push_back(str);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="d4/dbb/a02097_1a8ad65ef259354e591341ae4320c39820" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/dbb/a02097_1a8ad65ef259354e591341ae4320c39820" kindref="member">AfterOp</ref>(<ref refid="d1/d1a/a01285" kindref="compound">SIccCalcOp</ref>*<sp/>op,<sp/><ref refid="dc/d8c/a01297" kindref="compound">SIccOpState</ref>&amp;<sp/>os,<sp/><ref refid="d1/d1a/a01285" kindref="compound">SIccCalcOp</ref>*<sp/>ops)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[200];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op-&gt;<ref refid="d1/d1a/a01285_1a5497e30428937cf4a1492380f4a2b432" kindref="member">sig</ref><sp/>==<sp/><ref refid="d5/de0/a00050_1a0432d830667e697d6768204b6e5ed4a5a799fa857823055001ccb0c044c069a2d" kindref="member">icSigDataOp</ref>)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;%13s<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bEnd<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op-&gt;<ref refid="d1/d1a/a01285_1a5497e30428937cf4a1492380f4a2b432" kindref="member">sig</ref><sp/>==<sp/><ref refid="d5/de0/a00050_1a0432d830667e697d6768204b6e5ed4a5ab2c90cdb6f17b378a27a04c8e9fc5ac1" kindref="member">icSigIfOp</ref><sp/>||<sp/>op-&gt;<ref refid="d1/d1a/a01285_1a5497e30428937cf4a1492380f4a2b432" kindref="member">sig</ref><sp/>==<sp/><ref refid="d5/de0/a00050_1a0432d830667e697d6768204b6e5ed4a5a7fdb95d1e9dc4550392c82d5358d776e" kindref="member">icSigSelectOp</ref>)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;End:<sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bEnd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>opDesc;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>op-&gt;<ref refid="d1/d1a/a01285_1a785a21521fdc744ccc6f5578bd7039af" kindref="member">Describe</ref>(opDesc,<sp/>100);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bEnd)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;%7s<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>opDesc.c_str());</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;%13s<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>opDesc.c_str());</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>(int)os.<ref refid="dc/d8c/a01297_1ab3754fddf22c18661914dc452cc1cfbd" kindref="member">pStack</ref>-&gt;size();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%.4f&quot;</highlight><highlight class="normal">,<sp/>(*os.<ref refid="dc/d8c/a01297_1ab3754fddf22c18661914dc452cc1cfbd" kindref="member">pStack</ref>)[j]);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dbb/a02097_1a083db25efebfea3915a7eb1c9c52fc4b" kindref="member">m_log</ref>.push_back(str);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op-&gt;<ref refid="d1/d1a/a01285_1a5497e30428937cf4a1492380f4a2b432" kindref="member">sig</ref><sp/>==<sp/><ref refid="d5/de0/a00050_1a0432d830667e697d6768204b6e5ed4a5ab2c90cdb6f17b378a27a04c8e9fc5ac1" kindref="member">icSigIfOp</ref><sp/>||<sp/>op-&gt;<ref refid="d1/d1a/a01285_1a5497e30428937cf4a1492380f4a2b432" kindref="member">sig</ref><sp/>==<sp/><ref refid="d5/de0/a00050_1a0432d830667e697d6768204b6e5ed4a5a7fdb95d1e9dc4550392c82d5358d776e" kindref="member">icSigSelectOp</ref>)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dbb/a02097_1a083db25efebfea3915a7eb1c9c52fc4b" kindref="member">m_log</ref>.push_back(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170" refid="d4/dbb/a02097_1a473356c8d500a8e76eacfc4ef7bd8d4c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/dbb/a02097_1a473356c8d500a8e76eacfc4ef7bd8d4c" kindref="member">Error</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>szMsg)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dbb/a02097_1a083db25efebfea3915a7eb1c9c52fc4b" kindref="member">m_log</ref>.push_back(szMsg);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal">};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="d3/d93/a00341_1ae4e6ade93fc00fa4bea876439d7f15fb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;CIccLogDebugger&gt;<sp/><ref refid="d3/d93/a00341_1ae4e6ade93fc00fa4bea876439d7f15fb" kindref="member">LogDebuggerPtr</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>Definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="d3/d93/a00341_1a25bbeb1ec8b9677576fe260b035a453d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::list&lt;CIccProfile*&gt;<sp/><ref refid="d3/d93/a00341_1a25bbeb1ec8b9677576fe260b035a453d" kindref="member">IccProfilePtrList</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="d3/d93/a00341_1a5ae07f63d6b390e42068d941038dadf2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d3/d93/a00341_1a5ae07f63d6b390e42068d941038dadf2" kindref="member">Usage</ref>()</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;iccApplyNamedCmm<sp/>built<sp/>with<sp/>IccProfLib<sp/>version<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="dd/dad/a00005_1add1e4665c853f45a0eae98494be22e62" kindref="member">ICCPROFLIBVER</ref><sp/></highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Usage<sp/>1:<sp/>iccApplyNamedCmm<sp/>-cfg<sp/>config_file_path\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>Where<sp/>config_file_path<sp/>is<sp/>a<sp/>json<sp/>formatted<sp/>ICC<sp/>profile<sp/>application<sp/>configuration<sp/>file\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Usage<sp/>2:<sp/>iccApplyNamedCmm<sp/>{-debugcalc}<sp/>data_file_path<sp/>final_data_encoding{:FmtPrecision{:FmtDigits}}<sp/>interpolation<sp/>{{-ENV:Name<sp/>value}<sp/>profile_file_path<sp/>Rendering_intent<sp/>{-PCC<sp/>connection_conditions_path}}\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Built<sp/>with<sp/>IccProfLib<sp/>version<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="dd/dad/a00005_1add1e4665c853f45a0eae98494be22e62" kindref="member">ICCPROFLIBVER</ref><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>For<sp/>final_data_encoding:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>0<sp/>-<sp/>icEncodeValue<sp/>(converts<sp/>to/from<sp/>lab<sp/>encoding<sp/>when<sp/>samples=3)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>1<sp/>-<sp/>icEncodePercent\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>2<sp/>-<sp/>icEncodeUnitFloat<sp/>(may<sp/>clip<sp/>to<sp/>0.0<sp/>to<sp/>1.0)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>3<sp/>-<sp/>icEncodeFloat\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>4<sp/>-<sp/>icEncode8Bit\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>5<sp/>-<sp/>icEncode16Bit\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>6<sp/>-<sp/>icEncode16BitV2\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>FmtPrecision<sp/>-<sp/>formatting<sp/>for<sp/>#<sp/>of<sp/>digits<sp/>after<sp/>decimal<sp/>(default=4)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>FmtDigits<sp/>-<sp/>formatting<sp/>for<sp/>total<sp/>#<sp/>of<sp/>digits<sp/>(default=5+FmtPrecision)\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>For<sp/>interpolation:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>0<sp/>-<sp/>Linear\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>1<sp/>-<sp/>Tetrahedral\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>For<sp/>Rendering_intent:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>0<sp/>-<sp/>Perceptual\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>1<sp/>-<sp/>Relative\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>2<sp/>-<sp/>Saturation\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>3<sp/>-<sp/>Absolute\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>10<sp/>+<sp/>Intent<sp/>-<sp/>without<sp/>D2Bx/B2Dx\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>20<sp/>+<sp/>Intent<sp/>-<sp/>Preview\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>30<sp/>-<sp/>Gamut\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>33<sp/>-<sp/>Gamut<sp/>Absolute\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>40<sp/>+<sp/>Intent<sp/>-<sp/>with<sp/>BPC\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>50<sp/>-<sp/>BDRF<sp/>Model\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>60<sp/>-<sp/>BDRF<sp/>Light\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>70<sp/>-<sp/>BDRF<sp/>Output\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>80<sp/>-<sp/>MCS<sp/>connection\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>90<sp/>+<sp/>Intent<sp/>-<sp/>Colorimetric<sp/>Only\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>100<sp/>+<sp/>Intent<sp/>-<sp/>Spectral<sp/>Only\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>+1000<sp/>-<sp/>Use<sp/>Luminance<sp/>based<sp/>PCS<sp/>adjustment\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>+10000<sp/>-<sp/>Use<sp/>V5<sp/>sub-profile<sp/>if<sp/>present\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;+100000<sp/>-<sp/>Use<sp/>HToS<sp/>tag<sp/>if<sp/>present\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//===================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="d3/d93/a00341_1ac0f2228420376f4db7e1274f2b41667c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d3/d93/a00341_1ac0f2228420376f4db7e1274f2b41667c" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minargs<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&lt;<sp/>minargs)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d93/a00341_1a5ae07f63d6b390e42068d941038dadf2" kindref="member">Usage</ref>();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><ref refid="da/d71/a02101" kindref="compound">CIccCfgDataApply</ref><sp/>cfgApply;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><ref refid="d0/d79/a02117" kindref="compound">CIccCfgProfileSequence</ref><sp/>cfgProfiles;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><ref refid="d8/db2/a02125" kindref="compound">CIccCfgColorData</ref><sp/>cfgData;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&gt;<sp/>2<sp/>&amp;&amp;<sp/>!<ref refid="d5/d16/a00029_1a4e0be90a3757e352f42612d09a7d1aa5" kindref="member">stricmp</ref>(argv[1],<sp/></highlight><highlight class="stringliteral">&quot;-cfg&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d4e/a00329_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>cfg;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="dd/d4e/a00329_1a1a7e979d2174bbe4adf411c6807d202b" kindref="member">loadJsonFrom</ref>(cfg,<sp/>argv[2])<sp/>||<sp/>!cfg.is_object())<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>read<sp/>configuration<sp/>from<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>argv[2]);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfg.find(</highlight><highlight class="stringliteral">&quot;dataFiles&quot;</highlight><highlight class="normal">)<sp/>==<sp/>cfg.end()<sp/>||<sp/>!cfgApply.<ref refid="da/d71/a02101_1a24ef831394cf5804f368aacca344afbe" kindref="member">fromJson</ref>(cfg[</highlight><highlight class="stringliteral">&quot;dataFiles&quot;</highlight><highlight class="normal">]))<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>dataFile<sp/>configuration<sp/>from<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>argv[2]);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfg.find(</highlight><highlight class="stringliteral">&quot;profileSequence&quot;</highlight><highlight class="normal">)<sp/>==<sp/>cfg.end()<sp/>||<sp/>!cfgProfiles.<ref refid="d0/d79/a02117_1a58b05fa37369a89adf812c45dfac004a" kindref="member">fromJson</ref>(cfg[</highlight><highlight class="stringliteral">&quot;profileSequence&quot;</highlight><highlight class="normal">]))<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>profileSequence<sp/>configuration<sp/>from<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>argv[2]);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfgApply.<ref refid="da/d71/a02101_1a28cecb4ea7c9c10927509bea131ebf6a" kindref="member">m_srcType</ref><sp/>==<sp/><ref refid="dc/d50/a00332_1ad4cc877d09a9c84181620557d478bac6a950fc014bf874b816451869f384b1d49" kindref="member">icCfgColorData</ref>)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfgApply.<ref refid="da/d71/a02101_1afbdea053093b24d83e20e28166d96a89" kindref="member">m_srcFile</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cfgData.<ref refid="d8/db2/a02125_1a514514ebda19e651ac6ba4ba2b333419" kindref="member">fromJson</ref>(cfg[</highlight><highlight class="stringliteral">&quot;colorData&quot;</highlight><highlight class="normal">]))<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>colorData<sp/>configuration<sp/>from<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>argv[2]);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d4e/a00329_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>data;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="dd/d4e/a00329_1a1a7e979d2174bbe4adf411c6807d202b" kindref="member">loadJsonFrom</ref>(data,<sp/>cfgApply.<ref refid="da/d71/a02101_1afbdea053093b24d83e20e28166d96a89" kindref="member">m_srcFile</ref>.c_str())<sp/>||<sp/>!cfgData.<ref refid="d8/db2/a02125_1a514514ebda19e651ac6ba4ba2b333419" kindref="member">fromJson</ref>(data))<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>load<sp/>color<sp/>data<sp/>from<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>cfgApply.<ref refid="da/d71/a02101_1afbdea053093b24d83e20e28166d96a89" kindref="member">m_srcFile</ref>.c_str());</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>argv++;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>argc--;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>!<ref refid="d5/d16/a00029_1a4e0be90a3757e352f42612d09a7d1aa5" kindref="member">stricmp</ref>(argv[0],<sp/></highlight><highlight class="stringliteral">&quot;-debugcalc&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cfgApply.<ref refid="da/d71/a02101_1a4d3ba472bd60dca277a967ea4e1d01ce" kindref="member">m_debugCalc</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>argv++;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>argc--;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nArg<sp/>=<sp/>cfgApply.<ref refid="da/d71/a02101_1a6fceef656dd5730345754f660cf347f3" kindref="member">fromArgs</ref>(&amp;argv[0],<sp/>argc);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nArg)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>configuration<sp/>arguments\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>argv<sp/>+=<sp/>nArg;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>argc<sp/>-=<sp/>nArg;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>nArg<sp/>=<sp/>cfgProfiles.<ref refid="d0/d79/a02117_1a57c1fdc042874feac7f3106eaf905780" kindref="member">fromArgs</ref>(&amp;argv[0],<sp/>argc);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nArg)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>profile<sp/>sequence<sp/>arguments\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfgApply.<ref refid="da/d71/a02101_1a28cecb4ea7c9c10927509bea131ebf6a" kindref="member">m_srcType</ref><sp/>!=<sp/><ref refid="dc/d50/a00332_1ad4cc877d09a9c84181620557d478bac6a44ad4cadc6666e4dcc3b2bde49f2de45" kindref="member">icCfgLegacy</ref><sp/>||<sp/>!cfgData.<ref refid="d8/db2/a02125_1a16c5c855a20c0ed7793ad0492891b95b" kindref="member">fromLegacy</ref>(cfgApply.<ref refid="da/d71/a02101_1afbdea053093b24d83e20e28166d96a89" kindref="member">m_srcFile</ref>.c_str()))<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>legacy<sp/>data<sp/>file<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>cfgApply.<ref refid="da/d71/a02101_1afbdea053093b24d83e20e28166d96a89" kindref="member">m_srcFile</ref>.c_str());</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><ref refid="d3/d93/a00341_1ae4e6ade93fc00fa4bea876439d7f15fb" kindref="member">LogDebuggerPtr</ref><sp/>pDebugger;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfgApply.<ref refid="da/d71/a02101_1a4d3ba472bd60dca277a967ea4e1d01ce" kindref="member">m_debugCalc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>pDebugger<sp/>=<sp/><ref refid="d3/d93/a00341_1ae4e6ade93fc00fa4bea876439d7f15fb" kindref="member">LogDebuggerPtr</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d4/dbb/a02097" kindref="compound">CIccLogDebugger</ref>());</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d5d/a01325_1a703f6f8acef15bb34a6c19dbc8b3aa2a" kindref="member">IIccCalcDebugger::SetDebugger</ref>(pDebugger.get());</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>precisionStr[30];</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>sprintf(precisionStr,<sp/></highlight><highlight class="stringliteral">&quot;%%%d.%dlf<sp/>&quot;</highlight><highlight class="normal">,<sp/>cfgApply.<ref refid="da/d71/a02101_1a9078edfcb9b89f5b4e6880a8780dedd6" kindref="member">m_dstDigits</ref>,<sp/>cfgApply.<ref refid="da/d71/a02101_1a3cadb7b098b19b728d39d2029f529034" kindref="member">m_dstPrecision</ref>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>icFloatColorEncoding<sp/>srcEncoding,<sp/>destEncoding;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Setup<sp/>source<sp/>encoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>srcEncoding<sp/>=<sp/>cfgData.<ref refid="d8/db2/a02125_1a9e3a4746dfdc5a73ad356b73613351af" kindref="member">m_encoding</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a61e8bac86860cdefe93533feac126917" kindref="member">icColorSpaceSignature</ref><sp/>SrcspaceSig<sp/>=<sp/>cfgData.<ref refid="d8/db2/a02125_1a391dd8a479c66dbf76cb06e494260d8d" kindref="member">m_srcSpace</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//If<sp/>first<sp/>profile<sp/>colorspace<sp/>is<sp/>PCS<sp/>and<sp/>it<sp/>matches<sp/>the<sp/>source<sp/>data<sp/>space<sp/>then<sp/>treat<sp/>as<sp/>input<sp/>profile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bInputProfile<sp/>=<sp/>!<ref refid="d3/d93/a00341_1af2bf8c7d947cb795089de5f391f91d4d" kindref="member">IsSpacePCS</ref>(SrcspaceSig);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bInputProfile)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d3a/a00101_1a14e10b61df6e9ec7c90c5d3bc38c78d9" kindref="member">CIccProfile</ref><sp/>*pProf<sp/>=<sp/><ref refid="d0/dc2/a00104_1a97134bdd4b4bf5e8a43ef018bba0917e" kindref="member">OpenIccProfile</ref>(cfgProfiles.<ref refid="d0/d79/a02117_1a4381b69cc0b5f0f9e9739ef41a97745e" kindref="member">m_profiles</ref>[0]-&gt;m_iccFile.c_str());</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pProf)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pProf-&gt;m_Header.deviceClass!=<ref refid="d7/d46/a00002_1a1cc0ddb4770d5695c83543b62afaa1a0a200e4fc8dcec29c6d411cae0c9a0483c" kindref="member">icSigAbstractClass</ref><sp/>&amp;&amp;<sp/><ref refid="d3/d93/a00341_1af2bf8c7d947cb795089de5f391f91d4d" kindref="member">IsSpacePCS</ref>(pProf-&gt;m_Header.colorSpace))</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bInputProfile<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pProf;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Allocate<sp/>a<sp/>CIccCmm<sp/>to<sp/>use<sp/>to<sp/>apply<sp/>profiles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>CIccNamedColorCmm<sp/>namedCmm(SrcspaceSig,<sp/><ref refid="d7/d46/a00002_1a80236e8e78fa1f2a6351cb0af0fed8da" kindref="member">icSigUnknownData</ref>,<sp/>bInputProfile);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><ref refid="d3/d93/a00341_1a25bbeb1ec8b9677576fe260b035a453d" kindref="member">IccProfilePtrList</ref><sp/>pccList;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><ref refid="dc/dee/a00053_1a1b8215b8024cf7a33adfb10b319bb842" kindref="member">icCmmEnvSigMap</ref><sp/>sigMap;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bUseSubProfile<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pProfIter<sp/>=<sp/>cfgProfiles.<ref refid="d0/d79/a02117_1a4381b69cc0b5f0f9e9739ef41a97745e" kindref="member">m_profiles</ref>.begin();<sp/>pProfIter<sp/>!=<sp/>cfgProfiles.<ref refid="d0/d79/a02117_1a4381b69cc0b5f0f9e9739ef41a97745e" kindref="member">m_profiles</ref>.end();<sp/>pProfIter++)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/dc6/a02113" kindref="compound">CIccCfgProfile</ref>*<sp/>pProfCfg<sp/>=<sp/>pProfIter-&gt;get();</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pProfCfg)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d3a/a00101_1a14e10b61df6e9ec7c90c5d3bc38c78d9" kindref="member">CIccProfile</ref><sp/>*pPccProfile<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Adjust<sp/>type<sp/>and<sp/>hint<sp/>information<sp/>based<sp/>on<sp/>rendering<sp/>intent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>CIccCreateXformHintManager<sp/>Hint;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pProfCfg-&gt;<ref refid="d8/dc6/a02113_1a6db60e1daccda0ac9101ac1c69374988" kindref="member">m_useBPC</ref>)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Hint.AddHint(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="df/dee/a00369" kindref="compound">CIccApplyBPCHint</ref>());</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pProfCfg-&gt;<ref refid="d8/dc6/a02113_1af469abd69c80585d472360aa1bfd9357" kindref="member">m_adjustPcsLuminance</ref>)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Hint.AddHint(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CIccLuminanceMatchingHint());</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pProfCfg-&gt;<ref refid="d8/dc6/a02113_1abb21518a641c6abfc122c565f1792e40" kindref="member">m_pccFile</ref>.size())<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pPccProfile<sp/>=<sp/><ref refid="d0/dc2/a00104_1a97134bdd4b4bf5e8a43ef018bba0917e" kindref="member">OpenIccProfile</ref>(pProfCfg-&gt;<ref refid="d8/dc6/a02113_1abb21518a641c6abfc122c565f1792e40" kindref="member">m_pccFile</ref>.c_str());</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pPccProfile)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>open<sp/>Profile<sp/>Connections<sp/>Conditions<sp/>from<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>pProfCfg-&gt;<ref refid="d8/dc6/a02113_1abb21518a641c6abfc122c565f1792e40" kindref="member">m_pccFile</ref>.c_str());</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Keep<sp/>track<sp/>of<sp/>pPccProfile<sp/>for<sp/>until<sp/>after<sp/>cmm.Begin<sp/>is<sp/>called</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pccList.push_back(pPccProfile);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CMM<sp/>Environment<sp/>variables<sp/>are<sp/>passed<sp/>in<sp/>as<sp/>a<sp/>Hint<sp/>to<sp/>the<sp/>Xform<sp/>associated<sp/>with<sp/>the<sp/>profile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pProfCfg-&gt;<ref refid="d8/dc6/a02113_1adf8289e5b2a7c8c9618ac98958204343" kindref="member">m_iccEnvVars</ref>.size()&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Hint.AddHint(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d1/d31/a01245" kindref="compound">CIccCmmEnvVarHint</ref>(pProfCfg-&gt;<ref refid="d8/dc6/a02113_1adf8289e5b2a7c8c9618ac98958204343" kindref="member">m_iccEnvVars</ref>));</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pProfCfg-&gt;<ref refid="d8/dc6/a02113_1a269f3014e28c7300fc1bf89abfb346e4" kindref="member">m_pccEnvVars</ref>.size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Hint.AddHint(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d3/d7b/a01249" kindref="compound">CIccCmmPccEnvVarHint</ref>(pProfCfg-&gt;<ref refid="d8/dc6/a02113_1a269f3014e28c7300fc1bf89abfb346e4" kindref="member">m_pccEnvVars</ref>));</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Read<sp/>profile<sp/>from<sp/>path<sp/>and<sp/>add<sp/>it<sp/>to<sp/>namedCmm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(namedCmm.AddXform(pProfCfg-&gt;<ref refid="d8/dc6/a02113_1a7b4b29dfcfd259dd40eba88c1d547148" kindref="member">m_iccFile</ref>.c_str(),</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProfCfg-&gt;<ref refid="d8/dc6/a02113_1a3bf1af277547b7d2a0e8008767c674ea" kindref="member">m_intent</ref>&lt;0<sp/>?<sp/><ref refid="d7/d46/a00002_1a0fbdbf76357f4ad739b1df71bd87ef8a" kindref="member">icUnknownIntent</ref><sp/>:<sp/>(<ref refid="d7/d46/a00002_1ad596b62f264ef4846d435b494c8d2a77" kindref="member">icRenderingIntent</ref>)pProfCfg-&gt;<ref refid="d8/dc6/a02113_1a3bf1af277547b7d2a0e8008767c674ea" kindref="member">m_intent</ref>,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProfCfg-&gt;<ref refid="d8/dc6/a02113_1a2e4654771c968eb87520edea8824ebe2" kindref="member">m_interpolation</ref>,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPccProfile,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProfCfg-&gt;<ref refid="d8/dc6/a02113_1ac19bae9915e3f69eb3510988a1c6c483" kindref="member">m_transform</ref>,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProfCfg-&gt;<ref refid="d8/dc6/a02113_1abccae699e2de7a13c8632e54eb2f9265" kindref="member">m_useD2BxB2Dx</ref>,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;Hint,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProfCfg-&gt;<ref refid="d8/dc6/a02113_1a5f75f7279a82ffd744957ae08a33b8ae" kindref="member">m_useV5SubProfile</ref>))<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>Profile:<sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>pProfCfg-&gt;<ref refid="d8/dc6/a02113_1a7b4b29dfcfd259dd40eba88c1d547148" kindref="member">m_iccFile</ref>.c_str());</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><ref refid="d6/d5b/a00026_1aa6d3f671e7ece0df89814eabf3fae3f6" kindref="member">icStatusCMM</ref><sp/>stat;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//All<sp/>profiles<sp/>have<sp/>been<sp/>added<sp/>to<sp/>CMM.<sp/><sp/>Tell<sp/>CMM<sp/>that<sp/>we<sp/>are<sp/>ready<sp/>to<sp/>begin<sp/>applying<sp/>colors/pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((stat=namedCmm.Begin()))<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>%d<sp/>-<sp/>Unable<sp/>to<sp/>begin<sp/>profile<sp/>application<sp/>-<sp/>Possibly<sp/>invalid<sp/>or<sp/>incompatible<sp/>profiles\n&quot;</highlight><highlight class="normal">,<sp/>stat);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>CIccCmm<sp/>*pMruCmm<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>CIccMruCmm::Attach(&amp;namedCmm,<sp/>6,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Now<sp/>we<sp/>can<sp/>release<sp/>the<sp/>pccProfile<sp/>nodes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>IccProfilePtrList::iterator<sp/>pcc;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pcc=pccList.begin();<sp/>pcc!=pccList.end();<sp/>pcc++)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d3a/a00101_1a14e10b61df6e9ec7c90c5d3bc38c78d9" kindref="member">CIccProfile</ref><sp/>*pPccProfile<sp/>=<sp/>*pcc;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pPccProfile;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>pccList.clear();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Get<sp/>and<sp/>validate<sp/>the<sp/>source<sp/>color<sp/>space<sp/>from<sp/>namedCmm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>SrcspaceSig<sp/>=<sp/>namedCmm.GetSourceSpace();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSrcSamples<sp/>=<sp/><ref refid="d7/dce/a00143_1a719dc0d47f230294e78ac9c8cbc91a89" kindref="member">icGetSpaceSamples</ref>(SrcspaceSig);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bClip<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//We<sp/>don&apos;t<sp/>want<sp/>to<sp/>interpret<sp/>device<sp/>data<sp/>as<sp/>pcs<sp/>encoded<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bInputProfile<sp/>&amp;&amp;<sp/><ref refid="d3/d93/a00341_1af2bf8c7d947cb795089de5f391f91d4d" kindref="member">IsSpacePCS</ref>(SrcspaceSig))<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SrcspaceSig<sp/>==<sp/><ref refid="d7/d46/a00002_1a3cc88012894a42474b7609adbe314918" kindref="member">icSigXYZPcsData</ref>)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SrcspaceSig<sp/>=<sp/><ref refid="d4/d81/a00110_1a550e980dd884839e33548afbd55b4277" kindref="member">icSigDevXYZData</ref>;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SrcspaceSig<sp/>==<sp/><ref refid="d7/d46/a00002_1a043048bd0c63d3bd54d35e8b5743d226" kindref="member">icSigLabPcsData</ref>)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SrcspaceSig<sp/>=<sp/><ref refid="d4/d81/a00110_1a92d563abc2c24efa8ccad672a9dfd14f" kindref="member">icSigDevLabData</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcEncoding<sp/>==<sp/>icEncodeFloat)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bClip<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Get<sp/>and<sp/>validate<sp/>the<sp/>destination<sp/>color<sp/>space<sp/>from<sp/>namedCmm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a61e8bac86860cdefe93533feac126917" kindref="member">icColorSpaceSignature</ref><sp/>DestspaceSig<sp/>=<sp/>namedCmm.GetDestSpace();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDestSamples<sp/>=<sp/><ref refid="d7/dce/a00143_1a719dc0d47f230294e78ac9c8cbc91a89" kindref="member">icGetSpaceSamples</ref>(DestspaceSig);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Allocate<sp/>pixel<sp/>buffers<sp/>for<sp/>performing<sp/>encoding<sp/>transformations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>SrcNameBuf[256],<sp/>DestNameBuf[256];</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><ref refid="d4/d53/a00429" kindref="compound">CIccPixelBuf</ref><sp/>SrcPixel(nSrcSamples+16),<sp/>DestPixel(nDestSamples+16),<sp/>Pixel(<ref refid="d7/dce/a00143_1a8889bba08c143da6590f47879f24ccbe" kindref="member">icIntMax</ref>(nSrcSamples,<sp/>nDestSamples)+16);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><ref refid="d8/db2/a02125" kindref="compound">CIccCfgColorData</ref><sp/>outData;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>outData.<ref refid="d8/db2/a02125_1ad517b049063d5dde8a2b6aac56c8f895" kindref="member">m_space</ref><sp/>=<sp/>DestspaceSig;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>destEncoding<sp/>=<sp/>cfgApply.<ref refid="da/d71/a02101_1aefe09cd585ec7306ccb59726e2c802d0" kindref="member">m_dstEncoding</ref>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(DestspaceSig==<ref refid="d7/d46/a00002_1a61e8bac86860cdefe93533feac126917aa23b5cd6907746734b71b3a5eb2034f3" kindref="member">icSigNamedData</ref>)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>destEncoding<sp/>=<sp/>icEncodeValue;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>outData.<ref refid="d8/db2/a02125_1a9e3a4746dfdc5a73ad356b73613351af" kindref="member">m_encoding</ref><sp/>=<sp/>destEncoding;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>outData.<ref refid="d8/db2/a02125_1a391dd8a479c66dbf76cb06e494260d8d" kindref="member">m_srcSpace</ref><sp/>=<sp/>SrcspaceSig;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SrcspaceSig==<ref refid="d7/d46/a00002_1a61e8bac86860cdefe93533feac126917aa23b5cd6907746734b71b3a5eb2034f3" kindref="member">icSigNamedData</ref>)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>srcEncoding<sp/>=<sp/>icEncodeValue;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>outData.<ref refid="d8/db2/a02125_1a1b8e5ed1f700cf1183adaf40565e9187" kindref="member">m_srcEncoding</ref><sp/>=<sp/>srcEncoding;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Apply<sp/>profiles<sp/>to<sp/>each<sp/>input<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataIter<sp/>=<sp/>cfgData.<ref refid="d8/db2/a02125_1abd09ace530d4be2eb202fc5eb0599b56" kindref="member">m_data</ref>.begin();<sp/>dataIter<sp/>!=<sp/>cfgData.<ref refid="d8/db2/a02125_1abd09ace530d4be2eb202fc5eb0599b56" kindref="member">m_data</ref>.end();<sp/>dataIter++)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d3b/a02121" kindref="compound">CIccCfgDataEntry</ref>*<sp/>pData<sp/>=<sp/>dataIter-&gt;get();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pData)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDebugger)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pDebugger-&gt;<ref refid="d6/d3b/a02121_1a03cdb77d42647d480fc30a7bf80cf07e" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d50/a00332_1a78a72b835af536846058897386f29993" kindref="member">CIccCfgDataEntryPtr</ref><sp/>out(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d6/d3b/a02121" kindref="compound">CIccCfgDataEntry</ref>());</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>out-&gt;m_srcName<sp/>=<sp/>pData-&gt;<ref refid="d6/d3b/a02121_1adeab0cf5611dc106ab63cc63b6f264ae" kindref="member">m_name</ref>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>out-&gt;m_srcValues<sp/>=<sp/>pData-&gt;<ref refid="d6/d3b/a02121_1a1b2a2f8b1bcd3232c3a72add5dcc70e6" kindref="member">m_srcValues</ref>;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Are<sp/>names<sp/>coming<sp/>is<sp/>as<sp/>an<sp/>input?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SrcspaceSig<sp/>==<ref refid="d7/d46/a00002_1a61e8bac86860cdefe93533feac126917aa23b5cd6907746734b71b3a5eb2034f3" kindref="member">icSigNamedData</ref>)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>szName<sp/>=<sp/>pData-&gt;<ref refid="d6/d3b/a02121_1adeab0cf5611dc106ab63cc63b6f264ae" kindref="member">m_name</ref>.c_str();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>tint;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pData-&gt;<ref refid="d6/d3b/a02121_1a8d0fe6407e88840d0fed9a219594e81c" kindref="member">m_values</ref>.size())</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tint<sp/>=<sp/>pData-&gt;<ref refid="d6/d3b/a02121_1a8d0fe6407e88840d0fed9a219594e81c" kindref="member">m_values</ref>[0];</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tint<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(namedCmm.GetInterface())<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>icApplyNamed2Pixel:</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(namedCmm.Apply(DestPixel,<sp/>szName,<sp/>tint))<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Profile<sp/>application<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CIccCmm::FromInternalEncoding(DestspaceSig,<sp/>destEncoding,<sp/>DestPixel,<sp/>DestPixel,<sp/>destEncoding!=icEncodeFloat))<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>final<sp/>data<sp/>encoding\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i&lt;nDestSamples;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;m_values.push_back(DestPixel[i]);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>icApplyNamed2Named:</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(namedCmm.Apply(DestNameBuf,<sp/>SrcNameBuf,<sp/>tint))<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Profile<sp/>application<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;m_name<sp/>=<sp/>DestNameBuf;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>icApplyPixel2Pixel:</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>icApplyPixel2Named:</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Incorrect<sp/>interface.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nSrcSamples<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>pData-&gt;<ref refid="d6/d3b/a02121_1a8d0fe6407e88840d0fed9a219594e81c" kindref="member">m_values</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pixel[i]<sp/>=<sp/>pData-&gt;<ref refid="d6/d3b/a02121_1a8d0fe6407e88840d0fed9a219594e81c" kindref="member">m_values</ref>[i];</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;m_srcValues<sp/>=<sp/>pData-&gt;<ref refid="d6/d3b/a02121_1a8d0fe6407e88840d0fed9a219594e81c" kindref="member">m_values</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CIccCmm::ToInternalEncoding(SrcspaceSig,<sp/>srcEncoding,<sp/>SrcPixel,<sp/>Pixel,<sp/>bClip))<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>source<sp/>data<sp/>encoding\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(namedCmm.GetInterface())<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>icApplyPixel2Pixel:</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMruCmm)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMruCmm-&gt;Apply(DestPixel,<sp/>SrcPixel))<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Profile<sp/>application<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(namedCmm.Apply(DestPixel,<sp/>SrcPixel))<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Profile<sp/>application<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CIccCmm::FromInternalEncoding(DestspaceSig,<sp/>destEncoding,<sp/>DestPixel,<sp/>DestPixel))<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>final<sp/>data<sp/>encoding\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i&lt;nDestSamples;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;m_values.push_back(DestPixel[i]);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>icApplyPixel2Named:</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(namedCmm.Apply(DestNameBuf,<sp/>SrcPixel))<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Profile<sp/>application<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;m_name<sp/>=<sp/>DestNameBuf;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>icApplyNamed2Pixel:</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>icApplyNamed2Named:</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Incorrect<sp/>interface.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDebugger)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;m_debugInfo<sp/>=<sp/>pDebugger-&gt;m_log;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>outData.<ref refid="d8/db2/a02125_1abd09ace530d4be2eb202fc5eb0599b56" kindref="member">m_data</ref>.push_back(out);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Now<sp/>output<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>cfgApply.m_dstType<sp/>=<sp/>icCfgIt8;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>cfgApply.m_dstDigits<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>cfgApply.m_dstPrecision<sp/>=<sp/>2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>cfgApply.m_debugCalc<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfgApply.<ref refid="da/d71/a02101_1a6051a722ac307139626d32c4bf54a5d7" kindref="member">m_dstType</ref><sp/>==<sp/><ref refid="dc/d50/a00332_1ad4cc877d09a9c84181620557d478bac6a44ad4cadc6666e4dcc3b2bde49f2de45" kindref="member">icCfgLegacy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>outData.<ref refid="d8/db2/a02125_1adb55e5301ce7976543f09c36889edcfa" kindref="member">toLegacy</ref>(cfgApply.<ref refid="da/d71/a02101_1adec2eb2ef7749340a341b33ad0442665" kindref="member">m_dstFile</ref>.c_str(),<sp/>&amp;cfgProfiles,<sp/>cfgApply.<ref refid="da/d71/a02101_1a9078edfcb9b89f5b4e6880a8780dedd6" kindref="member">m_dstDigits</ref>,<sp/>cfgApply.<ref refid="da/d71/a02101_1a3cadb7b098b19b728d39d2029f529034" kindref="member">m_dstPrecision</ref>,<sp/>cfgApply.<ref refid="da/d71/a02101_1a4d3ba472bd60dca277a967ea4e1d01ce" kindref="member">m_debugCalc</ref>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfgApply.<ref refid="da/d71/a02101_1a6051a722ac307139626d32c4bf54a5d7" kindref="member">m_dstType</ref><sp/>==<sp/><ref refid="dc/d50/a00332_1ad4cc877d09a9c84181620557d478bac6a950fc014bf874b816451869f384b1d49" kindref="member">icCfgColorData</ref>)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d4e/a00329_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>out;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d4e/a00329_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>seq;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>cfgProfiles.<ref refid="d0/d79/a02117_1ad9a4a297edb1220bb25bb5f9af5c4d07" kindref="member">toJson</ref>(seq);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seq.is_object())</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[</highlight><highlight class="stringliteral">&quot;appliedProfileSequence&quot;</highlight><highlight class="normal">]<sp/>=<sp/>seq;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d4e/a00329_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>data;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>outData.<ref refid="d8/db2/a02125_1a80a3b1b4d42b4963d93973e3dd63e105" kindref="member">toJson</ref>(data);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.is_object())</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[</highlight><highlight class="stringliteral">&quot;colorData&quot;</highlight><highlight class="normal">]<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out.is_object())</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d4e/a00329_1a9533077714414745c078b20e5ffe414e" kindref="member">saveJsonAs</ref>(out,<sp/>cfgApply.<ref refid="da/d71/a02101_1adec2eb2ef7749340a341b33ad0442665" kindref="member">m_dstFile</ref>.c_str());</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfgApply.<ref refid="da/d71/a02101_1a6051a722ac307139626d32c4bf54a5d7" kindref="member">m_dstType</ref>==<ref refid="dc/d50/a00332_1ad4cc877d09a9c84181620557d478bac6a9a51ab8e7caba99f51a8dff188e77606" kindref="member">icCfgIt8</ref>)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>outData.<ref refid="d8/db2/a02125_1a26b6f4e3187f15b43d6ca42f88cbcdf5" kindref="member">toIt8</ref>(cfgApply.<ref refid="da/d71/a02101_1adec2eb2ef7749340a341b33ad0442665" kindref="member">m_dstFile</ref>.c_str(),<sp/>cfgApply.<ref refid="da/d71/a02101_1a9078edfcb9b89f5b4e6880a8780dedd6" kindref="member">m_dstDigits</ref>,<sp/>cfgApply.<ref refid="da/d71/a02101_1a3cadb7b098b19b728d39d2029f529034" kindref="member">m_dstPrecision</ref>);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Unsupported<sp/>output<sp/>format\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pMruCmm;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMruCmm)</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pMruCmm;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Tools/CmdLine/IccApplyNamedCmm/iccApplyNamedCmm.cpp"/>
  </compounddef>
</doxygen>
