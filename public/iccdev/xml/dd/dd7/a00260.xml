<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="dd/dd7/a00260" kind="file" language="C++">
    <compoundname>IccMpeXml.cpp</compoundname>
    <includes refid="d6/de1/a00233" local="yes">IccTagXml.h</includes>
    <includes refid="d7/d40/a00236" local="yes">IccMpeXml.h</includes>
    <includes refid="d9/d39/a00257" local="yes">IccUtilXml.h</includes>
    <includes refid="d2/dc8/a00242" local="yes">IccIoXml.h</includes>
    <includes refid="db/ddf/a00164" local="yes">IccCAM.h</includes>
    <includes local="no">cstring</includes>
    <incdepgraph>
      <node id="39">
        <label>IccCAM.h</label>
        <link refid="db/ddf/a00164"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>IccDefs.h</label>
        <link refid="d4/d81/a00110"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>IccIO.h</label>
        <link refid="df/d6a/a00119"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>IccMpeACS.h</label>
        <link refid="d6/d7d/a00161"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>IccMpeBasic.h</label>
        <link refid="d2/de7/a00014"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>IccMpeCalc.h</label>
        <link refid="d5/de0/a00050"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>IccMpeSpectral.h</label>
        <link refid="d3/de5/a00209"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>IccPcc.h</label>
        <link refid="d4/d3a/a00101"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>IccProfLibConf.h</label>
        <link refid="d5/d16/a00029"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>IccProfile.h</label>
        <link refid="d4/d51/a00017"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>IccSolve.h</label>
        <link refid="d3/d52/a00023"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>IccTag.h</label>
        <link refid="d2/df5/a00137"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>IccTagBasic.h</label>
        <link refid="da/dec/a00080"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>IccTagComposite.h</label>
        <link refid="d1/da8/a00230"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>IccTagDict.h</label>
        <link refid="df/d03/a00062"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>IccTagEmbedIcc.h</label>
        <link refid="dc/d9a/a00218"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>IccTagFactory.h</label>
        <link refid="d8/d41/a00038"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>IccTagLut.h</label>
        <link refid="da/d24/a00068"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>IccTagMPE.h</label>
        <link refid="d7/d25/a00182"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>IccTagProfSeqId.h</label>
        <link refid="d5/df1/a00206"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>IccUtil.h</label>
        <link refid="d7/dce/a00143"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>icProfileHeader.h</label>
        <link refid="d7/d46/a00002"/>
      </node>
      <node id="38">
        <label>IccIoXml.h</label>
        <link refid="d2/dc8/a00242"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>IccXML/IccLibXML/IccMpeXml.cpp</label>
        <link refid="dd/dd7/a00260"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>IccMpeXml.h</label>
        <link refid="d7/d40/a00236"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>IccTagXml.h</label>
        <link refid="d6/de1/a00233"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>IccUtilXml.h</label>
        <link refid="d9/d39/a00257"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>IccXmlConfig.h</label>
        <link refid="d7/d03/a00254"/>
      </node>
      <node id="40">
        <label>cstring</label>
      </node>
      <node id="25">
        <label>libxml/parser.h</label>
      </node>
      <node id="26">
        <label>libxml/tree.h</label>
      </node>
      <node id="37">
        <label>limits</label>
      </node>
      <node id="12">
        <label>list</label>
      </node>
      <node id="34">
        <label>map</label>
      </node>
      <node id="17">
        <label>memory</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
      <node id="10">
        <label>stdio.h</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="32">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="d4/dc6/a01793" prot="public">CIccFormulaCurveSegmentXml</innerclass>
    <innerclass refid="d2/d42/a01801" prot="public">CIccSampledCalculatorCurveXml</innerclass>
    <innerclass refid="d4/dd1/a01797" prot="public">CIccSampledCurveSegmentXml</innerclass>
    <innerclass refid="d7/d62/a01805" prot="public">CIccSinglSampledeCurveXml</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="dd/dd7/a00260_1a7c5a7e91d27be931c8067c38c7f17ea6" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d02/a01149" kindref="compound">CIccCLUT</ref> *</type>
        <definition>CIccCLUT * icCLutFromXml</definition>
        <argsstring>(xmlNode *pNode, int nIn, int nOut, icConvertType nType, std::string &amp;parseStr)</argsstring>
        <name>icCLutFromXml</name>
        <param>
          <type>xmlNode *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nOut</declname>
        </param>
        <param>
          <type><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref></type>
          <declname>nType</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>parseStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccMpeXml.cpp" line="1871" column="17" bodyfile="IccXML/IccLibXML/IccTagXml.cpp" bodystart="3327" bodyend="3791" declfile="IccXML/IccLibXML/IccMpeXml.cpp" declline="1871" declcolumn="17"/>
        <references refid="d8/d02/a01149_1a5ca68cccc55f99adcf011186a6ed2615" compoundref="d4/d3e/a00116" startline="1688" endline="1698">CIccCLUT::CIccCLUT</references>
        <references refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" compoundref="d9/d39/a00257" startline="165" endline="165">CIccXmlArrayType&lt; T, Tsig &gt;::GetBuf</references>
        <references refid="d8/d02/a01149_1aa42861bdf83a889cb2bb7dc8940ba325" compoundref="da/d24/a00068" startline="347" endline="347">CIccCLUT::GetData</references>
        <references refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" compoundref="df/d6a/a00119" startline="130" endline="130">CIccIO::GetLength</references>
        <references refid="d8/d02/a01149_1a11c1f0a6f3f878840eaed3e00d1ce74e" compoundref="da/d24/a00068" startline="357" endline="357">CIccCLUT::GetOutputChannels</references>
        <references refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" compoundref="d9/d39/a00257" startline="166" endline="166">CIccXmlArrayType&lt; T, Tsig &gt;::GetSize</references>
        <references refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" compoundref="d7/d03/a00254" startline="69">icConvert16Bit</references>
        <references refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" compoundref="d7/d03/a00254" startline="68">icConvert8Bit</references>
        <references refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" compoundref="d7/d03/a00254" startline="70">icConvertFloat</references>
        <references refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8acf7f3d311a96b6529fb7b3ac82fd372b" compoundref="d7/d03/a00254" startline="71">icConvertVariable</references>
        <references refid="d9/dd6/a00272_1a1787be4d01fe1c357f48a2e8531622a6" compoundref="d9/dd6/a00272" startline="100" endline="107">IccOpenFileIO</references>
        <references refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" compoundref="d5/d35/a00266" startline="572" endline="578">icXmlAttrValue</references>
        <references refid="d9/d39/a00257_1a459e22a536debe98c547657efa20b5ca" compoundref="d5/d35/a00266" startline="580" endline="587">icXmlAttrValue</references>
        <references refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" compoundref="d5/d35/a00266" startline="669" endline="685">icXmlFindAttr</references>
        <references refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" compoundref="d5/d35/a00266" startline="687" endline="701">icXmlFindNode</references>
        <references refid="d8/d02/a01149_1a98ecac13b9537465c0b69aa7bf477437" compoundref="d4/d3e/a00116" startline="1826" endline="1877">CIccCLUT::Init</references>
        <references refid="d8/d02/a01149_1afaacdd60037b3ebf7682d55a45009a31" compoundref="d4/d3e/a00116" startline="1806" endline="1814">CIccCLUT::Init</references>
        <references refid="d8/d02/a01149_1a815d091583440220135b3e99fed15f08" compoundref="da/d24/a00068" startline="348" endline="348">CIccCLUT::NumPoints</references>
        <references refid="de/dd3/a01873_1a07d799736e57c092e6b375e4b197c75c" compoundref="d5/d35/a00266" startline="755" endline="780">CIccXmlArrayType&lt; T, Tsig &gt;::ParseArray</references>
        <references refid="de/dd3/a01873_1a23e7980af4e5c740a54d8c23ec68acbb" compoundref="d5/d35/a00266" startline="807" endline="817">CIccXmlArrayType&lt; T, Tsig &gt;::ParseTextArrayNum</references>
        <references refid="dc/d2c/a00893_1a460f7d82e1daf63f867d7cbca8db2ac4" compoundref="d9/d2e/a00056" startline="114" endline="120">CIccIO::Read16</references>
        <references refid="dc/d2c/a00893_1a3a42fb785255dda8609fc46c83fe4f2c" compoundref="df/d6a/a00119" startline="104" endline="104">CIccIO::Read8</references>
        <references refid="dc/d2c/a00893_1a1399dc6dcf7aefe36b78ad96fc117d17" compoundref="d9/d2e/a00056" startline="302" endline="319">CIccIO::ReadFloat32Float</references>
        <references refid="d8/d02/a01149_1aa33a2b8078f4408eb02918676992f686" compoundref="da/d24/a00068" startline="382" endline="382">CIccCLUT::SetPrecision</references>
        <referencedby refid="d0/d27/a00239_1abb2a2c1c6eec43dfdc6cea84fe88a77f" compoundref="d0/d27/a00239" startline="3793" endline="3858">icMBBFromXml</referencedby>
        <referencedby refid="da/d3e/a02025_1a12bdfaf73489d4043eaef10a429cff0a" compoundref="dd/dd7/a00260" startline="1887" endline="1905">CIccMpeXmlCLUT::ParseXml</referencedby>
        <referencedby refid="d6/d19/a02029_1ad58a9eae57a40bbebbc8cfefe6f1e24f" compoundref="dd/dd7/a00260" startline="1927" endline="1948">CIccMpeXmlExtCLUT::ParseXml</referencedby>
        <referencedby refid="de/df8/a02073_1aa5d45fb5b70d1e4895c876400c2ea344" compoundref="dd/dd7/a00260" startline="3221" endline="3291">CIccMpeXmlEmissionCLUT::ParseXml</referencedby>
        <referencedby refid="db/dac/a02077_1a96cc9696018abfed330d18170568536b" compoundref="dd/dd7/a00260" startline="3334" endline="3404">CIccMpeXmlReflectanceCLUT::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/dd7/a00260_1af57ced646c8016d5b135bd0fb2e47dd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref></type>
        <definition>icFloatNumber icGetSegPos</definition>
        <argsstring>(const char *str)</argsstring>
        <name>icGetSegPos</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccMpeXml.cpp" line="148" column="15" bodyfile="IccXML/IccLibXML/IccMpeXml.cpp" bodystart="148" bodyend="158"/>
        <referencedby refid="d8/d24/a02001_1a2bc340753a906c5ac56b9c546359f436" compoundref="dd/dd7/a00260" startline="986" endline="1021">CIccSegmentedCurveXml::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/dd7/a00260_1a5310a26812e3c42de26b08618e669a53" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char * icSegPos</definition>
        <argsstring>(char *buf, icFloatNumber pos)</argsstring>
        <name>icSegPos</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccMpeXml.cpp" line="136" column="13" bodyfile="IccXML/IccLibXML/IccMpeXml.cpp" bodystart="136" bodyend="146"/>
        <referencedby refid="d4/dc6/a01793_1a1ead55b5ddccf6630233f38794724636" compoundref="dd/dd7/a00260" startline="161" endline="190">CIccFormulaCurveSegmentXml::ToXml</referencedby>
        <referencedby refid="d4/dd1/a01797_1a80f565238b55483b220cc3bfb5528250" compoundref="dd/dd7/a00260" startline="267" endline="283">CIccSampledCurveSegmentXml::ToXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/dd7/a00260_1a63ffdf99759eade4bc099f3a4ad3b5f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool icXmlDumpColorAppearanceParams</definition>
        <argsstring>(std::string &amp;xml, std::string blanks, CIccCamConverter *pCam)</argsstring>
        <name>icXmlDumpColorAppearanceParams</name>
        <param>
          <type>std::string &amp;</type>
          <declname>xml</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>blanks</declname>
        </param>
        <param>
          <type><ref refid="dc/ddf/a00469" kindref="compound">CIccCamConverter</ref> *</type>
          <declname>pCam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccMpeXml.cpp" line="2059" column="13" bodyfile="IccXML/IccLibXML/IccMpeXml.cpp" bodystart="2059" bodyend="2091"/>
        <references refid="dc/ddf/a00469_1a7f63aaa837c2b0d9797ca5ed3d38edef" compoundref="dd/d32/a00041" startline="446" endline="449">CIccCamConverter::GetParameter_C</references>
        <references refid="dc/ddf/a00469_1ad639a0beba06250868a353c56b08e855" compoundref="dd/d32/a00041" startline="462" endline="465">CIccCamConverter::GetParameter_F</references>
        <references refid="dc/ddf/a00469_1af1e943d42638a9fe083b816eb5f9314d" compoundref="dd/d32/a00041" startline="430" endline="433">CIccCamConverter::GetParameter_La</references>
        <references refid="dc/ddf/a00469_1aab58bdc1e9c0440d2e80849ceb015bd8" compoundref="dd/d32/a00041" startline="454" endline="457">CIccCamConverter::GetParameter_Nc</references>
        <references refid="dc/ddf/a00469_1a658d892ed7a73a6702b4aa2af033a248" compoundref="dd/d32/a00041" startline="420" endline="425">CIccCamConverter::GetParameter_WhitePoint</references>
        <references refid="dc/ddf/a00469_1abedc6e406658b3a3563ac22431ee7ce7" compoundref="dd/d32/a00041" startline="438" endline="441">CIccCamConverter::GetParameter_Yb</references>
        <referencedby refid="d3/dea/a02041_1a34cf7cacb789aa994bea835172cb4967" compoundref="dd/dd7/a00260" startline="2162" endline="2181">CIccMpeXmlJabToXYZ::ToXml</referencedby>
        <referencedby refid="d7/d13/a02045_1a54bb536e886c4f512c76956c51e2307f" compoundref="dd/dd7/a00260" startline="2213" endline="2232">CIccMpeXmlXYZToJab::ToXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/dd7/a00260_1a539f9b308a780ec7fadf73e076292ff9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool icXmlParseColorAppearanceParams</definition>
        <argsstring>(xmlNode *pNode, std::string &amp;parseStr, CIccCamConverter *pCam)</argsstring>
        <name>icXmlParseColorAppearanceParams</name>
        <param>
          <type>xmlNode *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>parseStr</declname>
        </param>
        <param>
          <type><ref refid="dc/ddf/a00469" kindref="compound">CIccCamConverter</ref> *</type>
          <declname>pCam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccMpeXml.cpp" line="2093" column="13" bodyfile="IccXML/IccLibXML/IccMpeXml.cpp" bodystart="2093" bodyend="2160"/>
        <references refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" compoundref="d5/d35/a00266" startline="572" endline="578">icXmlAttrValue</references>
        <references refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" compoundref="d5/d35/a00266" startline="669" endline="685">icXmlFindAttr</references>
        <references refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" compoundref="d5/d35/a00266" startline="687" endline="701">icXmlFindNode</references>
        <references refid="dc/ddf/a00469_1a7e311fec359da8f006d5d355e0b61cb8" compoundref="dd/d32/a00041" startline="393" endline="397">CIccCamConverter::SetParameter_C</references>
        <references refid="dc/ddf/a00469_1a5745336e9bd9def6164a0048316aba47" compoundref="dd/d32/a00041" startline="411" endline="415">CIccCamConverter::SetParameter_F</references>
        <references refid="dc/ddf/a00469_1a516ccb5edb55d757569accf9ebf88de5" compoundref="dd/d32/a00041" startline="375" endline="379">CIccCamConverter::SetParameter_La</references>
        <references refid="dc/ddf/a00469_1a30b79740553c8f7861330b14ca6596e2" compoundref="dd/d32/a00041" startline="402" endline="406">CIccCamConverter::SetParameter_Nc</references>
        <references refid="dc/ddf/a00469_1af57315ea4ba7f29d9b97d4bfdb0e2df1" compoundref="dd/d32/a00041" startline="364" endline="370">CIccCamConverter::SetParameter_WhitePoint</references>
        <references refid="dc/ddf/a00469_1aeeabbc31d25cb8797dedc4dbdbfabb99" compoundref="dd/d32/a00041" startline="384" endline="388">CIccCamConverter::SetParameter_Yb</references>
        <referencedby refid="d3/dea/a02041_1a80da7cd38a9645ba1a22a5b81e92af16" compoundref="dd/dd7/a00260" startline="2184" endline="2211">CIccMpeXmlJabToXYZ::ParseXml</referencedby>
        <referencedby refid="d7/d13/a02045_1a93de44beabef1e61b64a1bed175b28e2" compoundref="dd/dd7/a00260" startline="2235" endline="2262">CIccMpeXmlXYZToJab::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/dd7/a00260_1a24c7425edeae7243fd1281274f7dfd59" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/de7/a00014_1aa6d6644da54f23f068b6b467cc0dedc6" kindref="member">icCurveSetCurvePtr</ref></type>
        <definition>static icCurveSetCurvePtr ParseXmlCurve</definition>
        <argsstring>(xmlNode *pNode, std::string parseStr)</argsstring>
        <name>ParseXmlCurve</name>
        <param>
          <type>xmlNode *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>parseStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccMpeXml.cpp" line="1087" column="27" bodyfile="IccXML/IccLibXML/IccMpeXml.cpp" bodystart="1087" bodyend="1123"/>
        <references refid="d2/d42/a01801_1a65b587352bbec2ed2f900af981659228" compoundref="dd/dd7/a00260" startline="511" endline="511">CIccSampledCalculatorCurveXml::CIccSampledCalculatorCurveXml</references>
        <references refid="d7/d62/a01805_1a8f895c55f4af0d3a745347200226039a" compoundref="dd/dd7/a00260" startline="605" endline="605">CIccSinglSampledeCurveXml::CIccSinglSampledeCurveXml</references>
        <references refid="d2/d42/a01801_1a4b104659e9a0beb8c36c0f165c07b43f" compoundref="dd/dd7/a00260" startline="554" endline="599">CIccSampledCalculatorCurveXml::ParseXml</references>
        <references refid="d7/d62/a01805_1aa6fcb8735d6aa3f1e104778862dfeb6d" compoundref="dd/dd7/a00260" startline="636" endline="961">CIccSinglSampledeCurveXml::ParseXml</references>
        <references refid="d8/d24/a02001_1a2bc340753a906c5ac56b9c546359f436" compoundref="dd/dd7/a00260" startline="986" endline="1021">CIccSegmentedCurveXml::ParseXml</references>
        <referencedby refid="d3/d39/a02005_1ab416b1d359f1a1d001a83ceeb3f579d1" compoundref="dd/dd7/a00260" startline="1126" endline="1180">CIccMpeXmlCurveSet::ParseXml</referencedby>
        <referencedby refid="d0/dfd/a02017_1a37d0e2cd5456b14801f72b2181ccb94a" compoundref="dd/dd7/a00260" startline="1782" endline="1869">CIccMpeXmlToneMap::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/dd7/a00260_1a93b5b044171cd5f4bab2f05b51e63419" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ToXmlCurve</definition>
        <argsstring>(std::string &amp;xml, std::string blanks, icCurveSetCurvePtr pCurve)</argsstring>
        <name>ToXmlCurve</name>
        <param>
          <type>std::string &amp;</type>
          <declname>xml</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>blanks</declname>
        </param>
        <param>
          <type><ref refid="d2/de7/a00014_1aa6d6644da54f23f068b6b467cc0dedc6" kindref="member">icCurveSetCurvePtr</ref></type>
          <declname>pCurve</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccMpeXml.cpp" line="1024" column="13" bodyfile="IccXML/IccLibXML/IccMpeXml.cpp" bodystart="1024" bodyend="1048"/>
        <references refid="dd/d5f/a00825_1abcb92b6265cfc65e110c293be393960d">CIccCurveSetCurve::GetType</references>
        <references refid="d7/d46/a00002_1a008dec63a75b5b59911304f5754e3821ac48b1ac8f84255804cbe32704b1c5af6" compoundref="d7/d46/a00002" startline="1059">icSigSampledCalculatorCurve</references>
        <references refid="d7/d46/a00002_1a008dec63a75b5b59911304f5754e3821a363bbdea01b1917a02c55c4b389050a7" compoundref="d7/d46/a00002" startline="1057">icSigSegmentedCurve</references>
        <references refid="d7/d46/a00002_1a008dec63a75b5b59911304f5754e3821adf1a2fe66e234712b8d6b183ee662453" compoundref="d7/d46/a00002" startline="1058">icSigSingleSampledCurve</references>
        <references refid="d2/d42/a01801_1a06433a26753f78d0b83db16670f50c93" compoundref="dd/dd7/a00260" startline="517" endline="551">CIccSampledCalculatorCurveXml::ToXml</references>
        <references refid="d7/d62/a01805_1adbd6a9a3bd7005e7eb1f4014387c9c08" compoundref="dd/dd7/a00260" startline="611" endline="633">CIccSinglSampledeCurveXml::ToXml</references>
        <references refid="d8/d24/a02001_1ab1fc0f80a377b5eb7875e6ac1682af3f" compoundref="dd/dd7/a00260" startline="964" endline="983">CIccSegmentedCurveXml::ToXml</references>
        <referencedby refid="d3/d39/a02005_1a858989c2f13b9b4047f8b4675efb49fd" compoundref="dd/dd7/a00260" startline="1050" endline="1085">CIccMpeXmlCurveSet::ToXml</referencedby>
        <referencedby refid="d0/dfd/a02017_1a9efba74ea5302530c03ab16fc7737247" compoundref="dd/dd7/a00260" startline="1729" endline="1779">CIccMpeXmlToneMap::ToXml</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>File: <ref refid="dd/dd7/a00260" kindref="compound">IccMpeXml.cpp</ref></para>
<para>Contains: Implementation of MultiProcessElementType Element XML conversion functionality</para>
<para>Version: V1</para>
<para>Copyright: (c) see ICC Software License </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>The<sp/>ICC<sp/>Software<sp/>License,<sp/>Version<sp/>0.2</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2003-2012<sp/>The<sp/>International<sp/>Color<sp/>Consortium.<sp/>All<sp/>rights<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>3.<sp/>In<sp/>the<sp/>absence<sp/>of<sp/>prior<sp/>written<sp/>permission,<sp/>the<sp/>names<sp/>&quot;ICC&quot;<sp/>and<sp/>&quot;The</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>International<sp/>Color<sp/>Consortium&quot;<sp/>must<sp/>not<sp/>be<sp/>used<sp/>to<sp/>imply<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>ICC<sp/>organization<sp/>endorses<sp/>or<sp/>promotes<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>INTERNATIONAL<sp/>COLOR<sp/>CONSORTIUM<sp/>OR</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>ITS<sp/>CONTRIBUTING<sp/>MEMBERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>consists<sp/>of<sp/>voluntary<sp/>contributions<sp/>made<sp/>by<sp/>many</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>individuals<sp/>on<sp/>behalf<sp/>of<sp/>the<sp/>The<sp/>International<sp/>Color<sp/>Consortium.<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>Membership<sp/>in<sp/>the<sp/>ICC<sp/>is<sp/>encouraged<sp/>when<sp/>this<sp/>software<sp/>is<sp/>used<sp/>for</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>commercial<sp/>purposes.<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>For<sp/>more<sp/>information<sp/>on<sp/>The<sp/>International<sp/>Color<sp/>Consortium,<sp/>please</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>see<sp/>&lt;http://www.color.org/&gt;.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/de1/a00233" kindref="compound">IccTagXml.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/d40/a00236" kindref="compound">IccMpeXml.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/d39/a00257" kindref="compound">IccUtilXml.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d2/dc8/a00242" kindref="compound">IccIoXml.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db/ddf/a00164" kindref="compound">IccCAM.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>C<sp/>strings<sp/>strcpy,<sp/>memcpy<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GetClassName</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>GetClassName</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USEREFICCMAXNAMESPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">refIccMAX<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="d0/d2b/a01997_1afc27f607d1f137b32dad65b538714536" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d2b/a01997_1afc27f607d1f137b32dad65b538714536" kindref="member">CIccMpeXmlUnknown::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*m_ptr<sp/>=<sp/>m_pData;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fix[256];</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;UnknownElement<sp/>Type=\&quot;%s\&quot;<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>GetType())),<sp/>NumInputChannels(),<sp/>NumOutputChannels());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="d9/d39/a00257_1aac906ed45d63b044aa871d3366c05c6f" kindref="member">icXmlDumpHexData</ref>(xml,<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>m_pData,<sp/>m_nSize);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/UnknownElement&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="d0/d2b/a01997_1afd0de293c04c43de441a2152e800cf66" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d2b/a01997_1afd0de293c04c43de441a2152e800cf66" kindref="member">CIccMpeXmlUnknown::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>SetType((<ref refid="d7/d46/a00002_1a5dbecf663e56b6445a7f199306ee1b4d" kindref="member">icElemTypeSignature</ref>)<ref refid="d9/d39/a00257_1aeb7c91622f164201b2a5a0afe9cd3848" kindref="member">icXmlStrToSig</ref>(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>SetChannels(atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;InputChannels&quot;</highlight><highlight class="normal">)),<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;OutputChannels&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;children<sp/>&amp;&amp;<sp/>pNode-&gt;children-&gt;type<sp/>==<sp/>XML_TEXT_NODE<sp/>&amp;&amp;<sp/>pNode-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>nSize<sp/>=<sp/><ref refid="d9/d39/a00257_1a4798bcdc271228ef7083a57412803e06" kindref="member">icXmlGetHexDataSize</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)pNode-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetDataSize(nSize,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1a7e2e6f47df3c6baacbda01035dfbbbee" kindref="member">icXmlGetHexData</ref>(m_pData,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)pNode-&gt;children-&gt;content,<sp/>nSize);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>SetDataSize(0);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="d4/dc6/a01793" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d4/dc6/a01793" kindref="compound">CIccFormulaCurveSegmentXml</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="dc/d5e/a00817" kindref="compound">CIccFormulaCurveSegment</ref></highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="130" refid="d4/dc6/a01793_1a036b642f8a5b2a5fd264ddef845337f6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="d4/dc6/a01793_1a036b642f8a5b2a5fd264ddef845337f6" kindref="member">CIccFormulaCurveSegmentXml</ref>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>start,<sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>end)<sp/>:<sp/><ref refid="dc/d5e/a00817" kindref="compound">CIccFormulaCurveSegment</ref>(start,<sp/>end)<sp/>{}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ToXml(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseXml(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="dd/dd7/a00260_1a5310a26812e3c42de26b08618e669a53" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/dd7/a00260_1a5310a26812e3c42de26b08618e669a53" kindref="member">icSegPos</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>pos)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos==<ref refid="d7/d46/a00002_1a73ff771011597116b3347e653a3d6646" kindref="member">icMinFloat32Number</ref>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(buf,<sp/></highlight><highlight class="stringliteral">&quot;-infinity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos==<ref refid="d7/d46/a00002_1afacc65dba38a8926cb3cf00906333812" kindref="member">icMaxFloat32Number</ref>)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(buf,<sp/></highlight><highlight class="stringliteral">&quot;+infinity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;%.8&quot;</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a764ae7a3e7c3b3dd71b420e5b54001c5" kindref="member">ICFLOATSFX</ref>,<sp/>pos);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="dd/dd7/a00260_1af57ced646c8016d5b135bd0fb2e47dd4" refkind="member"><highlight class="normal"><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/><ref refid="dd/dd7/a00260_1af57ced646c8016d5b135bd0fb2e47dd4" kindref="member">icGetSegPos</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(str,<sp/></highlight><highlight class="stringliteral">&quot;-inf&quot;</highlight><highlight class="normal">,<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a73ff771011597116b3347e653a3d6646" kindref="member">icMinFloat32Number</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(str,<sp/></highlight><highlight class="stringliteral">&quot;+inf&quot;</highlight><highlight class="normal">,<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1afacc65dba38a8926cb3cf00906333812" kindref="member">icMaxFloat32Number</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(str);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="d4/dc6/a01793_1a1ead55b5ddccf6630233f38794724636" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/dc6/a01793_1a1ead55b5ddccf6630233f38794724636" kindref="member">CIccFormulaCurveSegmentXml::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;FormulaSegment<sp/>Start=\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="dd/dd7/a00260_1a5310a26812e3c42de26b08618e669a53" kindref="member">icSegPos</ref>(buf,<sp/>m_startPoint));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>End=\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,<ref refid="dd/dd7/a00260_1a5310a26812e3c42de26b08618e669a53" kindref="member">icSegPos</ref>(buf,<sp/>m_endPoint));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>FunctionType=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nFunctionType);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved2)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved2=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved2);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><ref refid="de/dd3/a01873_1a96583e68ac3216ec93072a15f30e8029" kindref="member">CIccFloatArray::DumpArray</ref>(xml,<sp/>blanks+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>m_params,<sp/>m_nParameters,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/FormulaSegment&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="d4/dc6/a01793_1acb3c0c9f73139cd186a0d7fd43c3669e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/dc6/a01793_1acb3c0c9f73139cd186a0d7fd43c3669e" kindref="member">CIccFormulaCurveSegmentXml::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>xmlAttr<sp/>*funcType<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;FunctionType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!funcType)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>FunctionType<sp/>in<sp/>Formula<sp/>Segment\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>m_nReserved2<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Reserved2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>m_nFunctionType<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(funcType));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(m_nFunctionType)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0000:</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nParameters<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0001:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0002:</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0003:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0004:</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nParameters<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0005:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0007:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nParameters<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0006:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nParameters<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>FunctionType<sp/>value<sp/>in<sp/>Formula<sp/>Segment\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccFloatArray</ref><sp/>args;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!args.<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">ParseArray</ref>(pNode-&gt;children))</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()&lt;m_nParameters)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_params)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>free(m_params);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nParameters)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>m_params<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>*)malloc(m_nParameters<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_params)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(m_params,<sp/>args.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>(),<sp/>m_nParameters<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>m_params<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="d4/dd1/a01797" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d4/dd1/a01797" kindref="compound">CIccSampledCurveSegmentXml</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d6/d8b/a00821" kindref="compound">CIccSampledCurveSegment</ref></highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="261" refid="d4/dd1/a01797_1a1f1f0a6f425ac53a9d0adc5615350002" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="d4/dd1/a01797_1a1f1f0a6f425ac53a9d0adc5615350002" kindref="member">CIccSampledCurveSegmentXml</ref>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>start,<sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>end)<sp/>:<sp/><ref refid="d6/d8b/a00821" kindref="compound">CIccSampledCurveSegment</ref>(start,<sp/>end)<sp/>{}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ToXml(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseXml(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr);</highlight></codeline>
<codeline lineno="265"><highlight class="normal">};</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="d4/dd1/a01797_1a80f565238b55483b220cc3bfb5528250" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/dd1/a01797_1a80f565238b55483b220cc3bfb5528250" kindref="member">CIccSampledCurveSegmentXml::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks)</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;SampledSegment<sp/>Start=\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="dd/dd7/a00260_1a5310a26812e3c42de26b08618e669a53" kindref="member">icSegPos</ref>(buf,<sp/>m_startPoint));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>End=\&quot;%s\&quot;&gt;\n&quot;</highlight><highlight class="normal">,<ref refid="dd/dd7/a00260_1a5310a26812e3c42de26b08618e669a53" kindref="member">icSegPos</ref>(buf,<sp/>m_endPoint));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="de/dd3/a01873_1a96583e68ac3216ec93072a15f30e8029" kindref="member">CIccFloatArray::DumpArray</ref>(xml,<sp/>blanks+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>m_pSamples,<sp/>m_nCount,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/SampledSegment&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="d4/dd1/a01797_1a17951bffcfa1b0cc3494411d61ba6fb5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/dd1/a01797_1a17951bffcfa1b0cc3494411d61ba6fb5" kindref="member">CIccSampledCurveSegmentXml::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Filename&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filename[0])<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d2c/a00893" kindref="compound">CIccIO</ref><sp/>*file<sp/>=<sp/><ref refid="d9/dd6/a00272_1a1787be4d01fe1c357f48a2e8531622a6" kindref="member">IccOpenFileIO</ref>(filename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file){</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>File<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=</highlight><highlight class="stringliteral">&quot;&apos;<sp/>not<sp/>found.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Format&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>format<sp/>is<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(format,<sp/></highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[num];</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buf)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Memory<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="dc/d2c/a00893_1a3a42fb785255dda8609fc46c83fe4f2c" kindref="member">Read8</ref>(buf,<sp/>num)<sp/>!=num)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Read-File<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccFloatArray</ref><sp/>data;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(!data.ParseTextArray(buf))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.<ref refid="de/dd3/a01873_1a23e7980af4e5c740a54d8c23ec68acbb" kindref="member">ParseTextArrayNum</ref>(buf,<sp/>num,<sp/>parseStr)){</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(0);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*src<sp/>=<sp/>data.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>m_pSamples;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/>*src;<sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst++;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src++;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>format<sp/>is<sp/>binary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(format,<sp/></highlight><highlight class="stringliteral">&quot;binary&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*order<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Endian&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>little_endian<sp/>=<sp/>!strcmp(order,<sp/></highlight><highlight class="stringliteral">&quot;little&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>storageType<sp/>=<sp/><ref refid="d7/d46/a00002_1ada0e4052f7f789491aa3ce0b5d3ba966afa247c7bcadffbd485fa946299182123" kindref="member">icValueTypeFloat32</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;StorageType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storageType<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(storageType<sp/>==<sp/><ref refid="d7/d46/a00002_1ada0e4052f7f789491aa3ce0b5d3ba966aa4e3209bb199947141c5dae71550efb9" kindref="member">icValueTypeUInt8</ref>){</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>value;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(num);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/><sp/>m_pSamples;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file-&gt;<ref refid="dc/d2c/a00893_1a3a42fb785255dda8609fc46c83fe4f2c" kindref="member">Read8</ref>(&amp;value))<sp/>{<sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Read-File<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>binary<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)value<sp/>/<sp/>255.0f;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(storageType<sp/>==<sp/><ref refid="d7/d46/a00002_1ada0e4052f7f789491aa3ce0b5d3ba966ab2645f254cd35005c1cc4a402e29e347" kindref="member">icValueTypeUInt16</ref>){</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>()<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>value;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*m_ptr<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref>*)&amp;value;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(num);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>m_pSamples;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file-&gt;<ref refid="dc/d2c/a00893_1a460f7d82e1daf63f867d7cbca8db2ac4" kindref="member">Read16</ref>(&amp;value))<sp/>{<sp/><sp/></highlight><highlight class="comment">//assumes<sp/>data<sp/>is<sp/>big<sp/>endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Read-File<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>binary<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ICC_BYTE_ORDER_LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(little_endian)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!little_endian)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>t<sp/>=<sp/>m_ptr[0];</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr[0]<sp/>=<sp/>m_ptr[1];</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr[1]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)value<sp/>/<sp/>65535.0f;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(storageType<sp/>==<sp/><ref refid="d7/d46/a00002_1ada0e4052f7f789491aa3ce0b5d3ba966a29d583618959ea7777d2aba032b34082" kindref="member">icValueTypeFloat16</ref>){</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>()<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a4b80b2685c65dca8044d9dff9e173f93" kindref="member">icFloat16Number</ref>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a4b80b2685c65dca8044d9dff9e173f93" kindref="member">icFloat16Number</ref><sp/>value;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*m_ptr<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref>*)&amp;value;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(num);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>m_pSamples;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file-&gt;<ref refid="dc/d2c/a00893_1a460f7d82e1daf63f867d7cbca8db2ac4" kindref="member">Read16</ref>(&amp;value))<sp/>{<sp/></highlight><highlight class="comment">//assumes<sp/>data<sp/>is<sp/>big<sp/>endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Read-File<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>binary<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ICC_BYTE_ORDER_LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(little_endian)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!little_endian)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>t<sp/>=<sp/>m_ptr[0];</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr[0]<sp/>=<sp/>m_ptr[1];</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr[1]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(value);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(storageType<sp/>==<sp/><ref refid="d7/d46/a00002_1ada0e4052f7f789491aa3ce0b5d3ba966afa247c7bcadffbd485fa946299182123" kindref="member">icValueTypeFloat32</ref>)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>()/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a087042fc82a070c4afebf2e05e708f5b" kindref="member">icFloat32Number</ref>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a087042fc82a070c4afebf2e05e708f5b" kindref="member">icFloat32Number</ref><sp/>value;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*m_ptr<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref>*)&amp;value;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(num);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>m_pSamples;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file-&gt;<ref refid="dc/d2c/a00893_1a1399dc6dcf7aefe36b78ad96fc117d17" kindref="member">ReadFloat32Float</ref>(&amp;value))<sp/>{<sp/><sp/></highlight><highlight class="comment">//assumes<sp/>data<sp/>is<sp/>big<sp/>endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Read-File<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>binary<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ICC_BYTE_ORDER_LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(little_endian)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!little_endian)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>m_ptr[0];<sp/>m_ptr[0]<sp/>=<sp/>m_ptr[3];<sp/>m_ptr[3]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>m_ptr[1];<sp/>m_ptr[1]<sp/>=<sp/>m_ptr[2];<sp/>m_ptr[2]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//not<sp/>8bit/16bit/float<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccFloatArray</ref><sp/>samples;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!samples.<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">ParseArray</ref>(pNode-&gt;children))<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetSize(samples.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(m_pSamples,<sp/>samples.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>(),<sp/>samples.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="d2/d42/a01801" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d2/d42/a01801" kindref="compound">CIccSampledCalculatorCurveXml</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d1/de6/a00837" kindref="compound">CIccSampledCalculatorCurve</ref></highlight></codeline>
<codeline lineno="509"><highlight class="normal">{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="511" refid="d2/d42/a01801_1a65b587352bbec2ed2f900af981659228" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="d2/d42/a01801_1a65b587352bbec2ed2f900af981659228" kindref="member">CIccSampledCalculatorCurveXml</ref>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>first=0,<sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>last=0)<sp/>:<sp/><ref refid="d1/de6/a00837" kindref="compound">CIccSampledCalculatorCurve</ref>(first,<sp/>last)<sp/>{}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ToXml(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseXml(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr);</highlight></codeline>
<codeline lineno="515"><highlight class="normal">};</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="d2/d42/a01801_1a06433a26753f78d0b83db16670f50c93" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d42/a01801_1a06433a26753f78d0b83db16670f50c93" kindref="member">CIccSampledCalculatorCurveXml::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks)</highlight></codeline>
<codeline lineno="518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;SampledCalculatorCurve<sp/>FirstEntry=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_firstEntry);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>LastEntry=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_lastEntry);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ExtensionType=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_extensionType);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>DesiredSize=\&quot;%u\&quot;&gt;\n&quot;</highlight><highlight class="normal">,<sp/>m_nDesiredSize);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved2)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reservered2=\&quot;%u\&quot;&gt;\n&quot;</highlight><highlight class="normal">,<sp/>m_nReserved2);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pCalc<sp/>&amp;&amp;<sp/>!strcmp(m_pCalc-&gt;GetClassName(),<sp/></highlight><highlight class="stringliteral">&quot;CIccMpeXmlCalculator&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/de6/a02061" kindref="compound">CIccMpeXmlCalculator</ref><sp/>*pXmlCalc<sp/>=<sp/>(<ref refid="d8/de6/a02061" kindref="compound">CIccMpeXmlCalculator</ref>*)m_pCalc;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pXmlCalc-&gt;<ref refid="d8/de6/a02061_1ac2201e8656c54d4760a8b1f07e79ff51" kindref="member">ToXml</ref>(xml,<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/SampledCalculatorCurve&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554" refid="d2/d42/a01801_1a4b104659e9a0beb8c36c0f165c07b43f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d42/a01801_1a4b104659e9a0beb8c36c0f165c07b43f" kindref="member">CIccSampledCalculatorCurveXml::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="555"><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>xmlAttr<sp/>*attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;FirstEntry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!attr)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>FirstEntry<sp/>in<sp/>Sampled<sp/>Calculator<sp/>Curve\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>m_firstEntry<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;LastEntry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!attr)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>LastEntry<sp/>in<sp/>Sampled<sp/>Calculator<sp/>Curve\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>m_lastEntry<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;DesiredSize&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!attr)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>DesiredSize<sp/>in<sp/>Sampled<sp/>Calculator<sp/>Curve\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>m_nDesiredSize<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pCalcNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;CalculatorElement&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCalcNode)<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/de6/a02061" kindref="compound">CIccMpeXmlCalculator</ref><sp/>*pCalc<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d8/de6/a02061" kindref="compound">CIccMpeXmlCalculator</ref>();</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pCalc-&gt;<ref refid="d8/de6/a02061_1aa49fb555bcc2fe5e5377f7d608368b94" kindref="member">ParseXml</ref>(pCalcNode,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>calculator<sp/>element<sp/>in<sp/>Sampled<sp/>Calculator<sp/>Curve\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pCalc<sp/>=<sp/>pCalc;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>Calculator<sp/>Element<sp/>in<sp/>Sampled<sp/>Calculator<sp/>Curve\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602" refid="d7/d62/a01805" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d7/d62/a01805" kindref="compound">CIccSinglSampledeCurveXml</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="dc/d6e/a00833" kindref="compound">CIccSingleSampledCurve</ref></highlight></codeline>
<codeline lineno="603"><highlight class="normal">{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="605" refid="d7/d62/a01805_1a8f895c55f4af0d3a745347200226039a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="d7/d62/a01805_1a8f895c55f4af0d3a745347200226039a" kindref="member">CIccSinglSampledeCurveXml</ref>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>first<sp/>=<sp/>0,<sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>last<sp/>=<sp/>0)<sp/>:<sp/><ref refid="dc/d6e/a00833" kindref="compound">CIccSingleSampledCurve</ref>(first,<sp/>last)<sp/>{}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ToXml(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseXml(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr);</highlight></codeline>
<codeline lineno="609"><highlight class="normal">};</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611" refid="d7/d62/a01805_1adbd6a9a3bd7005e7eb1f4014387c9c08" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d7/d62/a01805_1adbd6a9a3bd7005e7eb1f4014387c9c08" kindref="member">CIccSinglSampledeCurveXml::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks)</highlight></codeline>
<codeline lineno="612"><highlight class="normal">{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;SingleSampledCurve<sp/>FirstEntry=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_firstEntry);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>LastEntry=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_lastEntry);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>StorageType=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_storageType);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ExtensionType=\&quot;%u\&quot;&gt;\n&quot;</highlight><highlight class="normal">,<sp/>m_extensionType);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><ref refid="de/dd3/a01873_1a96583e68ac3216ec93072a15f30e8029" kindref="member">CIccFloatArray::DumpArray</ref>(xml,<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>m_pSamples,<sp/>m_nCount,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/SingleSampledCurve&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636" refid="d7/d62/a01805_1aa6fcb8735d6aa3f1e104778862dfeb6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d7/d62/a01805_1aa6fcb8735d6aa3f1e104778862dfeb6d" kindref="member">CIccSinglSampledeCurveXml::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>xmlAttr<sp/>*attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;FirstEntry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!attr)<sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>FirstEntry<sp/>in<sp/>Simple<sp/>Sampled<sp/>Segment\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>m_firstEntry<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;LastEntry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!attr)<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>LastEntry<sp/>in<sp/>Simple<sp/>Sampled<sp/>Segment\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>m_lastEntry<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>m_storageType<sp/>=<sp/><ref refid="d7/d46/a00002_1ada0e4052f7f789491aa3ce0b5d3ba966afa247c7bcadffbd485fa946299182123" kindref="member">icValueTypeFloat32</ref>;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;StorageType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>m_storageType<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>m_extensionType<sp/>=<sp/><ref refid="d7/d46/a00002_1a6bb4739c01627cd3d9a82136eb08107aae4ccca0da40c9e4b5d4a7a506612d3cb" kindref="member">icClipSingleSampledCurve</ref>;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;ExtensionType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>m_extensionType<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Filename&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filename[0])<sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d2c/a00893" kindref="compound">CIccIO</ref><sp/>*file<sp/>=<sp/><ref refid="d9/dd6/a00272_1a1787be4d01fe1c357f48a2e8531622a6" kindref="member">IccOpenFileIO</ref>(filename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file)<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>File<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>not<sp/>found.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Format&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>format<sp/>is<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(format,<sp/></highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>();</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[num];</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buf)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Memory<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="dc/d2c/a00893_1a3a42fb785255dda8609fc46c83fe4f2c" kindref="member">Read8</ref>(buf,<sp/>num)<sp/>!=<sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Read-File<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>buf;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lut8type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_storageType<sp/>==<sp/><ref refid="d7/d46/a00002_1ada0e4052f7f789491aa3ce0b5d3ba966aa4e3209bb199947141c5dae71550efb9" kindref="member">icValueTypeUInt8</ref>)<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccUInt8Array</ref><sp/>data;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(!data.ParseTextArray(buf))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.<ref refid="de/dd3/a01873_1a23e7980af4e5c740a54d8c23ec68acbb" kindref="member">ParseTextArrayNum</ref>(buf,<sp/>num,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(0);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>buf;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*src<sp/>=<sp/>data.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>m_pSamples;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)(*src)<sp/>/<sp/>255.0f;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst++;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src++;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(i!=256)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Error!<sp/>-<sp/>Input/Output<sp/>table<sp/>does<sp/>not<sp/>have<sp/>256<sp/>entries.\n&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//SetSize(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//lut16type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_storageType<sp/>==<sp/><ref refid="d7/d46/a00002_1ada0e4052f7f789491aa3ce0b5d3ba966ab2645f254cd35005c1cc4a402e29e347" kindref="member">icValueTypeUInt16</ref>)<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccUInt16Array</ref><sp/>data;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(!data.ParseTextArray(buf))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.<ref refid="de/dd3/a01873_1a23e7980af4e5c740a54d8c23ec68acbb" kindref="member">ParseTextArrayNum</ref>(buf,<sp/>num,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(0);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>*src<sp/>=<sp/>data.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>m_pSamples;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)(*src)<sp/>/<sp/>65535.0f;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst++;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src++;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//float<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_storageType<sp/>==<sp/><ref refid="d7/d46/a00002_1ada0e4052f7f789491aa3ce0b5d3ba966afa247c7bcadffbd485fa946299182123" kindref="member">icValueTypeFloat32</ref>)<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccFloatArray</ref><sp/>data;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(!data.ParseTextArray(buf))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.<ref refid="de/dd3/a01873_1a23e7980af4e5c740a54d8c23ec68acbb" kindref="member">ParseTextArrayNum</ref>(buf,<sp/>num,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(0);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*src<sp/>=<sp/>data.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>m_pSamples;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/>*src;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst++;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src++;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]buf;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>format<sp/>is<sp/>binary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(format,<sp/></highlight><highlight class="stringliteral">&quot;binary&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*order<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Endian&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>little_endian<sp/>=<sp/>!strcmp(order,<sp/></highlight><highlight class="stringliteral">&quot;little&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_storageType<sp/>==<sp/><ref refid="d7/d46/a00002_1ada0e4052f7f789491aa3ce0b5d3ba966aa4e3209bb199947141c5dae71550efb9" kindref="member">icValueTypeUInt8</ref>)<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>value;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(num);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>m_pSamples;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file-&gt;<ref refid="dc/d2c/a00893_1a3a42fb785255dda8609fc46c83fe4f2c" kindref="member">Read8</ref>(&amp;value))<sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Read-File<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>binary<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)value<sp/>/<sp/>255.0f;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_storageType<sp/>==<sp/><ref refid="d7/d46/a00002_1ada0e4052f7f789491aa3ce0b5d3ba966ab2645f254cd35005c1cc4a402e29e347" kindref="member">icValueTypeUInt16</ref>)<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>()<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>value;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*m_ptr<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref>*)&amp;value;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(num);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>m_pSamples;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file-&gt;<ref refid="dc/d2c/a00893_1a460f7d82e1daf63f867d7cbca8db2ac4" kindref="member">Read16</ref>(&amp;value))<sp/>{<sp/></highlight><highlight class="comment">//assumes<sp/>data<sp/>is<sp/>big<sp/>endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Read-File<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>binary<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ICC_BYTE_ORDER_LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(little_endian)<sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!little_endian)<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>t<sp/>=<sp/>m_ptr[0];</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr[0]<sp/>=<sp/>m_ptr[1];</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr[1]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)value<sp/>/<sp/>65535.0f;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_storageType<sp/>==<sp/><ref refid="d7/d46/a00002_1ada0e4052f7f789491aa3ce0b5d3ba966a29d583618959ea7777d2aba032b34082" kindref="member">icValueTypeFloat16</ref>)<sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>()<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a4b80b2685c65dca8044d9dff9e173f93" kindref="member">icFloat16Number</ref>);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a4b80b2685c65dca8044d9dff9e173f93" kindref="member">icFloat16Number</ref><sp/>value;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*m_ptr<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref>*)&amp;value;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(num);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>m_pSamples;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file-&gt;<ref refid="dc/d2c/a00893_1a460f7d82e1daf63f867d7cbca8db2ac4" kindref="member">Read16</ref>(&amp;value))<sp/>{<sp/><sp/></highlight><highlight class="comment">//assumes<sp/>data<sp/>is<sp/>big<sp/>endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Read-File<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>binary<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ICC_BYTE_ORDER_LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(little_endian)<sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!little_endian)<sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>t<sp/>=<sp/>m_ptr[0];</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr[0]<sp/>=<sp/>m_ptr[1];</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr[1]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(value);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_storageType<sp/>==<sp/><ref refid="d7/d46/a00002_1ada0e4052f7f789491aa3ce0b5d3ba966afa247c7bcadffbd485fa946299182123" kindref="member">icValueTypeFloat32</ref>)<sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>()<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a087042fc82a070c4afebf2e05e708f5b" kindref="member">icFloat32Number</ref>);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a087042fc82a070c4afebf2e05e708f5b" kindref="member">icFloat32Number</ref><sp/>value;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*m_ptr<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref>*)&amp;value;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(num);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>m_pSamples;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file-&gt;<ref refid="dc/d2c/a00893_1a1399dc6dcf7aefe36b78ad96fc117d17" kindref="member">ReadFloat32Float</ref>(&amp;value))<sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Read-File<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>binary<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ICC_BYTE_ORDER_LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(little_endian)<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!little_endian)<sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>m_ptr[0];<sp/>m_ptr[0]<sp/>=<sp/>m_ptr[3];<sp/>m_ptr[3]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>m_ptr[1];<sp/>m_ptr[1]<sp/>=<sp/>m_ptr[2];<sp/>m_ptr[2]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//not<sp/>8bit/16bit/float<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="comment">//not<sp/>text/binary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccFloatArray</ref><sp/>samples;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!samples.<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">ParseArray</ref>(pNode-&gt;children))<sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetSize(samples.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(m_pSamples,<sp/>samples.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>(),<sp/>samples.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>));</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964" refid="d8/d24/a02001_1ab1fc0f80a377b5eb7875e6ac1682af3f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d24/a02001_1ab1fc0f80a377b5eb7875e6ac1682af3f" kindref="member">CIccSegmentedCurveXml::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks)</highlight></codeline>
<codeline lineno="965"><highlight class="normal">{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/>CIccCurveSegmentList::iterator<sp/>seg;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;SegmentedCurve&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(seg<sp/>=<sp/>m_list-&gt;begin();<sp/>seg!=m_list-&gt;end();<sp/>seg++)<sp/>{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d9d/a00813" kindref="compound">CIccCurveSegment</ref>*<sp/>pSeg<sp/>=<sp/>*seg;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSeg<sp/>&amp;&amp;<sp/>pSeg-&gt;<ref refid="de/d9d/a00813_1a00a35aa106a9fcfabf6e4d9831a2142b" kindref="member">GetType</ref>()<sp/>==<sp/><ref refid="d7/d46/a00002_1a440d01b173c2db6e130ad72c45931fddaeb604c0a5ad3535642198255610b4d2c" kindref="member">icSigFormulaCurveSeg</ref>)<sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!((<ref refid="d4/dc6/a01793" kindref="compound">CIccFormulaCurveSegmentXml</ref>*)pSeg)-&gt;ToXml(xml,<sp/>blanks+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSeg<sp/>&amp;&amp;<sp/>pSeg-&gt;<ref refid="de/d9d/a00813_1a00a35aa106a9fcfabf6e4d9831a2142b" kindref="member">GetType</ref>()<sp/>==<sp/><ref refid="d7/d46/a00002_1a440d01b173c2db6e130ad72c45931fddab1b7022de1bc3704039a88d717367c43" kindref="member">icSigSampledCurveSeg</ref>)<sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!((<ref refid="d4/dd1/a01797" kindref="compound">CIccSampledCurveSegmentXml</ref>*)pSeg)-&gt;ToXml(xml,<sp/>blanks+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/SegmentedCurve&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986" refid="d8/d24/a02001_1a2bc340753a906c5ac56b9c546359f436" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d24/a02001_1a2bc340753a906c5ac56b9c546359f436" kindref="member">CIccSegmentedCurveXml::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="987"><highlight class="normal">{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/>m_list-&gt;clear();</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pNode=pNode-&gt;children;<sp/>pNode;<sp/>pNode=pNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>start<sp/>=<sp/><ref refid="dd/dd7/a00260_1af57ced646c8016d5b135bd0fb2e47dd4" kindref="member">icGetSegPos</ref>(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Start&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>end<sp/>=<sp/><ref refid="dd/dd7/a00260_1af57ced646c8016d5b135bd0fb2e47dd4" kindref="member">icGetSegPos</ref>(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;End&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;FormulaSegment&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dc6/a01793" kindref="compound">CIccFormulaCurveSegmentXml</ref><sp/>*pSegXml<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d4/dc6/a01793" kindref="compound">CIccFormulaCurveSegmentXml</ref>(start,<sp/>end);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pSegXml-&gt;<ref refid="d4/dc6/a01793_1acb3c0c9f73139cd186a0d7fd43c3669e" kindref="member">ParseXml</ref>(pNode,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>FormulaSegment\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pSegXml;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_list-&gt;push_back(pSegXml);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;SampledSegment&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dd1/a01797" kindref="compound">CIccSampledCurveSegmentXml</ref><sp/>*pSegXml<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d4/dd1/a01797" kindref="compound">CIccSampledCurveSegmentXml</ref>(start,<sp/>end);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pSegXml-&gt;<ref refid="d4/dd1/a01797_1a17951bffcfa1b0cc3494411d61ba6fb5" kindref="member">ParseXml</ref>(pNode,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>SampledSegment\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pSegXml;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_list-&gt;push_back(pSegXml);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>Segment<sp/>Type\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024" refid="dd/dd7/a00260_1a93b5b044171cd5f4bab2f05b51e63419" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/dd7/a00260_1a93b5b044171cd5f4bab2f05b51e63419" kindref="member">ToXmlCurve</ref>(std::string&amp;<sp/>xml,<sp/>std::string<sp/>blanks,<sp/><ref refid="dd/d5f/a00825" kindref="compound">icCurveSetCurvePtr</ref><sp/>pCurve)</highlight></codeline>
<codeline lineno="1025"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCurve-&gt;<ref refid="dd/d5f/a00825_1abcb92b6265cfc65e110c293be393960d" kindref="member">GetType</ref>()<sp/>==<sp/><ref refid="d7/d46/a00002_1a008dec63a75b5b59911304f5754e3821adf1a2fe66e234712b8d6b183ee662453" kindref="member">icSigSingleSampledCurve</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d62/a01805" kindref="compound">CIccSinglSampledeCurveXml</ref>*<sp/>m_ptr<sp/>=<sp/>(<ref refid="d7/d62/a01805" kindref="compound">CIccSinglSampledeCurveXml</ref>*)pCurve;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(m_ptr-&gt;<ref refid="d7/d62/a01805_1adbd6a9a3bd7005e7eb1f4014387c9c08" kindref="member">ToXml</ref>(xml,<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCurve-&gt;<ref refid="dd/d5f/a00825_1abcb92b6265cfc65e110c293be393960d" kindref="member">GetType</ref>()<sp/>==<sp/><ref refid="d7/d46/a00002_1a008dec63a75b5b59911304f5754e3821a363bbdea01b1917a02c55c4b389050a7" kindref="member">icSigSegmentedCurve</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d24/a02001" kindref="compound">CIccSegmentedCurveXml</ref>*<sp/>m_ptr<sp/>=<sp/>(<ref refid="d8/d24/a02001" kindref="compound">CIccSegmentedCurveXml</ref>*)pCurve;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(m_ptr-&gt;<ref refid="d8/d24/a02001_1ab1fc0f80a377b5eb7875e6ac1682af3f" kindref="member">ToXml</ref>(xml,<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCurve-&gt;<ref refid="dd/d5f/a00825_1abcb92b6265cfc65e110c293be393960d" kindref="member">GetType</ref>()<sp/>==<sp/><ref refid="d7/d46/a00002_1a008dec63a75b5b59911304f5754e3821ac48b1ac8f84255804cbe32704b1c5af6" kindref="member">icSigSampledCalculatorCurve</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d42/a01801" kindref="compound">CIccSampledCalculatorCurveXml</ref>*<sp/>m_ptr<sp/>=<sp/>(<ref refid="d2/d42/a01801" kindref="compound">CIccSampledCalculatorCurveXml</ref>*)pCurve;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(m_ptr-&gt;<ref refid="d2/d42/a01801_1a06433a26753f78d0b83db16670f50c93" kindref="member">ToXml</ref>(xml,<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050" refid="d3/d39/a02005_1a858989c2f13b9b4047f8b4675efb49fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d3/d39/a02005_1a858989c2f13b9b4047f8b4675efb49fd" kindref="member">CIccMpeXmlCurveSet::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1051"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;CurveSetElement<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>NumInputChannels(),<sp/>NumOutputChannels());</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved)<sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;NumInputChannels();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d5f/a00825" kindref="compound">CIccCurveSetCurve</ref>*<sp/>curve<sp/>=<sp/>m_curve[i];</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>for<sp/>duplicate<sp/>curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>i;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_curve[i]<sp/>==<sp/>m_curve[j])</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//handle<sp/>case<sp/>of<sp/>duplicate<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;DuplicateCurve<sp/>Index=\&quot;%d\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,<sp/>j);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="dd/dd7/a00260_1a93b5b044171cd5f4bab2f05b51e63419" kindref="member">ToXmlCurve</ref>(xml,<sp/>blanks,<sp/>m_curve[i]))</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/CurveSetElement&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087" refid="dd/dd7/a00260_1a24c7425edeae7243fd1281274f7dfd59" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d5f/a00825" kindref="compound">icCurveSetCurvePtr</ref><sp/><ref refid="dd/dd7/a00260_1a24c7425edeae7243fd1281274f7dfd59" kindref="member">ParseXmlCurve</ref>(xmlNode*<sp/>pNode,<sp/>std::string<sp/>parseStr)</highlight></codeline>
<codeline lineno="1088"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><ref refid="dd/d5f/a00825" kindref="compound">icCurveSetCurvePtr</ref><sp/>rv<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pNode)</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;SegmentedCurve&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d24/a02001" kindref="compound">CIccSegmentedCurveXml</ref>*<sp/>pCurve<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d8/d24/a02001" kindref="compound">CIccSegmentedCurveXml</ref>();</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCurve-&gt;<ref refid="d8/d24/a02001_1a2bc340753a906c5ac56b9c546359f436" kindref="member">ParseXml</ref>(pNode,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>pCurve;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCurve;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;SingleSampledCurve&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d62/a01805" kindref="compound">CIccSinglSampledeCurveXml</ref>*<sp/>pCurve<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d7/d62/a01805" kindref="compound">CIccSinglSampledeCurveXml</ref>();</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCurve-&gt;<ref refid="d7/d62/a01805_1aa6fcb8735d6aa3f1e104778862dfeb6d" kindref="member">ParseXml</ref>(pNode,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>pCurve;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCurve;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;SampledCalculatorCurve&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d42/a01801" kindref="compound">CIccSampledCalculatorCurveXml</ref>*<sp/>pCurve<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d2/d42/a01801" kindref="compound">CIccSampledCalculatorCurveXml</ref>();</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCurve-&gt;<ref refid="d2/d42/a01801_1a4b104659e9a0beb8c36c0f165c07b43f" kindref="member">ParseXml</ref>(pNode,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>pCurve;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCurve;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126" refid="d3/d39/a02005_1ab416b1d359f1a1d001a83ceeb3f579d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d3/d39/a02005_1ab416b1d359f1a1d001a83ceeb3f579d1" kindref="member">CIccMpeXmlCurveSet::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="1127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nChannels<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;InputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nChannels<sp/>||<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;OutputChannels&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>nChannels)<sp/>{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>InputChannels<sp/>or<sp/>OutputChannels<sp/>In<sp/>CurveSetElement\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/>SetSize(nChannels);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pNode<sp/>=<sp/>pNode-&gt;children,<sp/>nIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNode;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNode=pNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nIndex<sp/>&gt;=<sp/>nChannels)<sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;DuplicateCurve&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Index&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCopyIndex<sp/>=<sp/>atoi(attr);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nCopyIndex<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>nCopyIndex<sp/>&lt;<sp/>nIndex)<sp/>{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_curve[nIndex]<sp/>=<sp/>m_curve[nCopyIndex];</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nIndex++;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>index<sp/>for<sp/>duplicate<sp/>CurveSet<sp/>Curve\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>index<sp/>for<sp/>duplicate<sp/>CurveSet<sp/>Curve\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d5f/a00825" kindref="compound">icCurveSetCurvePtr</ref><sp/>pCurve<sp/>=<sp/><ref refid="dd/dd7/a00260_1a24c7425edeae7243fd1281274f7dfd59" kindref="member">ParseXmlCurve</ref>(pNode,<sp/>parseStr);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pCurve)</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetCurve(nIndex,<sp/>pCurve))</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nIndex++;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pNode<sp/>&amp;&amp;<sp/>nIndex<sp/>==<sp/>nChannels)</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183" refid="d8/d45/a02021_1ae853ea83404517db05911c48a9ba5034" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d45/a02021_1ae853ea83404517db05911c48a9ba5034" kindref="member">CIccMpeXmlMatrix::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[128];</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;MatrixElement<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>NumInputChannels(),<sp/>NumOutputChannels());</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved)<sp/>{</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>n;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pMatrix)<sp/>{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;MatrixData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n=0,<sp/>j=0;<sp/>j&lt;NumOutputChannels();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;NumInputChannels();<sp/>i++,<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>m_pMatrix[n]);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/MatrixData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pConstants)<sp/>{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NumOutputChannels();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d7/dce/a00143_1af798ee3250b2d1add99b57064aaf1961" kindref="member">icNotZero</ref>(m_pConstants[i]))</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>NumOutputChannels())<sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;ConstantData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NumOutputChannels();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>m_pConstants[i]);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/ConstantData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/MatrixElement&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236" refid="d8/d45/a02021_1a1548b3217cbe964eab8e5bfff32af85b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d45/a02021_1a1548b3217cbe964eab8e5bfff32af85b" kindref="member">CIccMpeXmlMatrix::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="1237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nInputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;InputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nOutputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;OutputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nInputChannels<sp/>||<sp/>!nOutputChannels)<sp/>{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>InputChannels<sp/>or<sp/>OutputChannels<sp/>In<sp/>MatrixElement\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pData;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/>pData<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;MatrixData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pData)<sp/>{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>SetSize(nInputChannels,<sp/>nOutputChannels);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">CIccFloatArray::ParseArray</ref>(m_pMatrix,<sp/>m_nInputChannels*m_nOutputChannels,<sp/>pData-&gt;children))</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*invert<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pData,<sp/></highlight><highlight class="stringliteral">&quot;InvertMatrix&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d5/d16/a00029_1a4e0be90a3757e352f42612d09a7d1aa5" kindref="member">stricmp</ref>(invert,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nInputChannels<sp/>!=<sp/>m_nOutputChannels)<sp/>{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Inversion<sp/>of<sp/>MatrixData<sp/>requires<sp/>square<sp/>matrix\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d53/a01645" kindref="compound">IIccMatrixInverter</ref><sp/>*pInverter<sp/>=<sp/><ref refid="d3/d52/a00023_1a6e8eb3c7dae63880c2cfc7ff2907af9f" kindref="member">IccGetDefaultMatrixInverter</ref>();</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pInverter<sp/>||<sp/>!pInverter-&gt;<ref refid="d7/d53/a01645_1a55c8cab2153e17ac692ad9f6dfb11bd0" kindref="member">Invert</ref>(m_pMatrix,<sp/>m_nOutputChannels,<sp/>m_nInputChannels))<sp/>{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>invert<sp/>matrix!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//Having<sp/>no<sp/>MatrixData<sp/>implies<sp/>having<sp/>a<sp/>matrix<sp/>full<sp/>of<sp/>zeros<sp/>which<sp/>is<sp/>represented<sp/>by<sp/>m_pMatrix<sp/>set<sp/>to<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>SetSize(0,<sp/>nOutputChannels);<sp/></highlight><highlight class="comment">//Initialize<sp/>with<sp/>m_pMatrix<sp/>set<sp/>to<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nInputChannels<sp/>=<sp/>nInputChannels;<sp/></highlight><highlight class="comment">//Fix<sp/>m_nInputChannels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/>pData<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;ConstantData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pData)<sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">CIccFloatArray::ParseArray</ref>(m_pConstants,<sp/>m_nOutputChannels,<sp/>pData-&gt;children))</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280" refid="d0/d67/a02065_1afed419ced3da8e3dfe34d76c75fae099" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d67/a02065_1afed419ced3da8e3dfe34d76c75fae099" kindref="member">CIccMpeXmlEmissionMatrix::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[128];</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;EmissionMatrixElement<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>NumInputChannels(),<sp/>NumOutputChannels());</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved)<sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;Wavelengths<sp/>start=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>end=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>steps=\&quot;%d\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_Range.start),<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_Range.end),<sp/>m_Range.steps);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>n;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pWhite)<sp/>{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;WhiteData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_Range.steps;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>m_pWhite[i]);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/WhiteData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pMatrix)<sp/>{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;MatrixData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n=0,<sp/>j=0;<sp/>j&lt;numVectors();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_Range.steps;<sp/>i++,<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>m_pMatrix[n]);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/MatrixData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pOffset)<sp/>{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;OffsetData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_Range.steps;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>m_pOffset[i]);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/OffsetData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/EmissionMatrixElement&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343" refid="d0/d67/a02065_1aec428d59121847f8cee29f5d5530d0bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d67/a02065_1aec428d59121847f8cee29f5d5530d0bd" kindref="member">CIccMpeXmlEmissionMatrix::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="1344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nInputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;InputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nOutputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;OutputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nInputChannels<sp/>||<sp/>!nOutputChannels)<sp/>{</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>InputChannels<sp/>or<sp/>OutputChannels<sp/>In<sp/>MatrixElement\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pData;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/>pData<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;Wavelengths&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pData)<sp/>{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>dStart<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pData,<sp/></highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>dEnd<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pData,<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nSteps<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pData,<sp/></highlight><highlight class="stringliteral">&quot;steps&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nSteps)<sp/>{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Spectral<sp/>Range\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Range.start<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>(dStart);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Range.end<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>(dEnd);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Range.steps<sp/>=<sp/>nSteps;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/>SetSize(nInputChannels,<sp/>nOutputChannels,<sp/>m_Range);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pWhite<sp/>||<sp/>!m_pMatrix<sp/>||<sp/>!m_pOffset)<sp/>{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>SetSize\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/>pData<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;WhiteData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pData)<sp/>{</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">CIccFloatArray::ParseArray</ref>(m_pWhite,<sp/>m_Range.steps,<sp/>pData-&gt;children))</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>MatrixData&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/>pData<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;MatrixData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pData)<sp/>{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">CIccFloatArray::ParseArray</ref>(m_pMatrix,<sp/>numVectors()*(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)m_Range.steps,<sp/>pData-&gt;children))</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>MatrixData&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/>pData<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;OffsetData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pData)<sp/>{</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">CIccFloatArray::ParseArray</ref>(m_pOffset,<sp/>m_Range.steps,<sp/>pData-&gt;children))</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(m_pOffset,<sp/>0,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)m_Range.steps*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>));</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407" refid="d3/d48/a02069_1aa72eae526f9c0b51758548a11be08aa0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d3/d48/a02069_1aa72eae526f9c0b51758548a11be08aa0" kindref="member">CIccMpeXmlInvEmissionMatrix::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[128];</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;InvEmissionMatrixElement<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>NumInputChannels(),<sp/>NumOutputChannels());</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved)<sp/>{</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;Wavelengths<sp/>start=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>end=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>steps=\&quot;%d\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_Range.start),<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_Range.end),<sp/>m_Range.steps);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>n;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pWhite)<sp/>{</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;WhiteData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_Range.steps;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>m_pWhite[i]);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/WhiteData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pMatrix)<sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;MatrixData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n=0,<sp/>j=0;<sp/>j&lt;numVectors();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_Range.steps;<sp/>i++,<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>m_pMatrix[n]);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/MatrixData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pOffset)<sp/>{</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;OffsetData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_Range.steps;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>m_pOffset[i]);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/OffsetData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/InvEmissionMatrixElement&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470" refid="d3/d48/a02069_1a8e2cfe4334c50774e232bd5671b6b683" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d3/d48/a02069_1a8e2cfe4334c50774e232bd5671b6b683" kindref="member">CIccMpeXmlInvEmissionMatrix::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="1471"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nInputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;InputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nOutputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;OutputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nInputChannels<sp/>||<sp/>!nOutputChannels)<sp/>{</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>InputChannels<sp/>or<sp/>OutputChannels<sp/>In<sp/>MatrixElement\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pData;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/>pData<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;Wavelengths&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pData)<sp/>{</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>dStart<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pData,<sp/></highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>dEnd<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pData,<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nSteps<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pData,<sp/></highlight><highlight class="stringliteral">&quot;steps&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nSteps)<sp/>{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Spectral<sp/>Range\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Range.start<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>(dStart);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Range.end<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>(dEnd);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Range.steps<sp/>=<sp/>nSteps;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/>SetSize(nInputChannels,<sp/>nOutputChannels,<sp/>m_Range);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pWhite<sp/>||<sp/>!m_pMatrix<sp/>||<sp/>!m_pOffset)<sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>SetSize\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/>pData<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;WhiteData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pData)<sp/>{</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">CIccFloatArray::ParseArray</ref>(m_pWhite,<sp/>m_Range.steps,<sp/>pData-&gt;children))</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>White<sp/>Data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/>pData<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;MatrixData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pData)<sp/>{</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">CIccFloatArray::ParseArray</ref>(m_pMatrix,<sp/>numVectors()*(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)m_Range.steps,<sp/>pData-&gt;children))</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>Matrix<sp/>Data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/>pData<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;OffsetData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pData)<sp/>{</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">CIccFloatArray::ParseArray</ref>(m_pOffset,<sp/>m_Range.steps,<sp/>pData-&gt;children))</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(m_pOffset,<sp/>0,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)m_Range.steps*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>));</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534" refid="d8/d98/a02009_1afd9f966c3a39c281716e5c06baf8770d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d98/a02009_1afd9f966c3a39c281716e5c06baf8770d" kindref="member">CIccMpeXmlTintArray::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[128],<sp/>line[128];</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;TintArrayElement<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>NumInputChannels(),<sp/>NumOutputChannels());</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved)<sp/>{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><ref refid="d3/dcd/a00965" kindref="compound">IIccExtensionTag</ref><sp/>*pTagEx;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Array<sp/>&amp;&amp;<sp/>(pTagEx=m_Array-&gt;GetExtension())<sp/>&amp;&amp;<sp/>!strcmp(pTagEx-&gt;<ref refid="d3/dcd/a00965_1afc77445123182ddaec413f6353c719be" kindref="member">GetExtClassName</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;CIccTagXml&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref><sp/>*pTagXml<sp/>=<sp/>(<ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref>*)pTagEx;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*<sp/>tagSig<sp/>=<sp/><ref refid="d9/d39/a00257_1a9df441a57e3659e7ae404779feaea9a3" kindref="member">icGetTagSigTypeName</ref>(m_Array-&gt;GetType());</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;%s&gt;\n&quot;</highlight><highlight class="normal">,<sp/><sp/>tagSig);<sp/></highlight><highlight class="comment">//parent<sp/>node<sp/>is<sp/>the<sp/>tag<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//convert<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>tag<sp/>to<sp/>xml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pTagXml-&gt;<ref refid="de/d3c/a01809_1a759cbaed8a0553bb035b9ff749052309" kindref="member">ToXml</ref>(xml,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>output<sp/>tag<sp/>with<sp/>type<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>m_Array-&gt;GetType()));</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/%s&gt;\n&quot;</highlight><highlight class="normal">,<sp/><sp/>tagSig);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/TintArrayElement&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569" refid="d8/d98/a02009_1a19998ce7d4f5678af3c3e2211292e9f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d98/a02009_1a19998ce7d4f5678af3c3e2211292e9f6" kindref="member">CIccMpeXmlTintArray::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="1570"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nInputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;InputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nOutputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;OutputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nInputChannels<sp/>||<sp/>!nOutputChannels)<sp/>{</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>InputChannels<sp/>or<sp/>OutputChannels<sp/>In<sp/>TintArrayElement\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/>m_nInputChannels<sp/>=<sp/>nInputChannels;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/>m_nOutputChannels<sp/>=<sp/>nOutputChannels;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pNode<sp/>=<sp/>pNode-&gt;children;<sp/>pNode<sp/>&amp;&amp;<sp/>pNode-&gt;type<sp/>!=<sp/>XML_ELEMENT_NODE;<sp/>pNode<sp/>=<sp/>pNode-&gt;next);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode)<sp/>{</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/dfd/a00969" kindref="compound">CIccTag</ref><sp/>*pTag<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a67fa1b773fad35303680761ee5ef9313" kindref="member">icSignature</ref><sp/>sigTag<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a67fa1b773fad35303680761ee5ef9313" kindref="member">icSignature</ref>)0;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>tag<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>nodeName<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)<sp/>pNode-&gt;name;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref><sp/>sigType<sp/>=<sp/><ref refid="d9/d39/a00257_1a7e4a8379f29fbaded2a4dd75b6222e55" kindref="member">icGetTypeNameTagSig</ref><sp/>(nodeName.c_str());</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigType==<ref refid="d7/d46/a00002_1a0b3709c84d4d18ff166cf355dc6c576f" kindref="member">icSigUnknownType</ref>){</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sigType<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref>)<ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d2f/a00425" kindref="compound">CIccInfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>tag<sp/>based<sp/>on<sp/>the<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/>pTag<sp/>=<sp/><ref refid="d7/dfd/a00969_1a2a2efdbfae5e8820c0dc4cdd1af691a8" kindref="member">CIccTag::Create</ref>(sigType);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pTag<sp/>||<sp/>!pTag-&gt;<ref refid="d7/dfd/a00969_1aa2a3dd91bfad9cf1297300d70936121a" kindref="member">IsNumArrayType</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>data<sp/>type<sp/>for<sp/>Tint<sp/>Array!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pTag;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/dcd/a00965" kindref="compound">IIccExtensionTag</ref><sp/>*pExt;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTag<sp/>&amp;&amp;<sp/>(pExt<sp/>=<sp/>pTag-&gt;<ref refid="d7/dfd/a00969_1aa4cc7f1dd04e9b537738d1dfa96a9790" kindref="member">GetExtension</ref>())<sp/>&amp;&amp;<sp/>!strcmp(pExt-&gt;<ref refid="d3/dcd/a00965_1afc77445123182ddaec413f6353c719be" kindref="member">GetExtClassName</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;CIccTagXml&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref>*<sp/>pXmlTag<sp/>=<sp/>(<ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref>*)pExt;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*attr;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pXmlTag-&gt;<ref refid="de/d3c/a01809_1ab389ac02038775bf0a198ae68847d8a1" kindref="member">ParseXml</ref>(pNode-&gt;children,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr=<ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;reserved&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr),<sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/>&amp;pTag-&gt;<ref refid="d7/dfd/a00969_1a0dbc39e419057e941c11cacb8c9e3fb0" kindref="member">m_nReserved</ref>);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Array<sp/>=<sp/>(<ref refid="d0/daa/a01029" kindref="compound">CIccTagNumArray</ref>*)pTag;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>Parse<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>info.<ref refid="dc/d2f/a00425_1aa4d31231b22a56dc869b51eaa2b1f933" kindref="member">GetTagTypeSigName</ref>(sigType);</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>nodeName;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>Tint<sp/>Tag\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pTag;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>tag<sp/>extension<sp/>for<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>info.<ref refid="dc/d2f/a00425_1aa4d31231b22a56dc869b51eaa2b1f933" kindref="member">GetTagTypeSigName</ref>(sigType);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>nodeName;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>Tint<sp/>Tag\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTag)</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pTag;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Tint<sp/>Array<sp/>missing<sp/>tint<sp/>values\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646" refid="d1/dc5/a02013_1a07ede53ed5ea8f9e89bebc91ae8e9c3c" refkind="member"><highlight class="normal"><ref refid="de/d37/a00849" kindref="compound">CIccToneMapFunc</ref>*<sp/><ref refid="d1/dc5/a02013_1a07ede53ed5ea8f9e89bebc91ae8e9c3c" kindref="member">CIccXmlToneMapFunc::NewCopy</ref>()</highlight></codeline>
<codeline lineno="1647"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><ref refid="de/d37/a00849" kindref="compound">CIccToneMapFunc</ref>*<sp/>rv<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d1/dc5/a02013" kindref="compound">CIccXmlToneMapFunc</ref>();</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rv)</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/>*rv<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656" refid="d1/dc5/a02013_1ad507a27e2fd2f879f9afbe1c26071798" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/dc5/a02013_1ad507a27e2fd2f879f9afbe1c26071798" kindref="member">CIccXmlToneMapFunc::ToXml</ref>(std::string&amp;<sp/>xml,<sp/>std::string<sp/>blanks<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1657"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;ToneMapFunction<sp/>FunctionType=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nFunctionType);</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved)<sp/>{</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved);</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved2)<sp/>{</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved2=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved2);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><ref refid="de/dd3/a01873_1a96583e68ac3216ec93072a15f30e8029" kindref="member">CIccFloatArray::DumpArray</ref>(xml,<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>m_params,<sp/>m_nParameters,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/ToneMapFunction&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681" refid="d1/dc5/a02013_1a67d52136c7b6a56968bfab8d22dfecb6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/dc5/a02013_1a67d52136c7b6a56968bfab8d22dfecb6" kindref="member">CIccXmlToneMapFunc::ParseXml</ref>(xmlNode*<sp/>pNode,<sp/>std::string&amp;<sp/>parseStr)</highlight></codeline>
<codeline lineno="1682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/>xmlAttr*<sp/>funcType<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;FunctionType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!funcType)<sp/>{</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>FunctionType<sp/>in<sp/>Tone<sp/>Map<sp/>Function\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/>m_nReserved2<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Reserved2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/>m_nFunctionType<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(funcType));</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(m_nFunctionType)<sp/>{</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0000:</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nParameters<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>FunctionType<sp/>value<sp/>in<sp/>Tone<sp/>Map<sp/>Function\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccFloatArray</ref><sp/>args;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!args.<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">ParseArray</ref>(pNode-&gt;children))</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()<sp/>&lt;<sp/>m_nParameters)</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_params)<sp/>{</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/>free(m_params);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nParameters)<sp/>{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/>m_params<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>*)malloc(m_nParameters<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>));</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_params)</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(m_params,<sp/>args.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>(),<sp/>m_nParameters<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>));</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/>m_params<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight></codeline>
<codeline lineno="1729" refid="d0/dfd/a02017_1a9efba74ea5302530c03ab16fc7737247" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/dfd/a02017_1a9efba74ea5302530c03ab16fc7737247" kindref="member">CIccMpeXmlToneMap::ToXml</ref>(std::string&amp;<sp/>xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[128],<sp/>line[128];</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;ToneMapElement<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>NumInputChannels(),<sp/>NumOutputChannels());</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved)<sp/>{</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved);</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pLumCurve)<sp/>{</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;LuminanceCurve&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="dd/dd7/a00260_1a93b5b044171cd5f4bab2f05b51e63419" kindref="member">ToXmlCurve</ref>(xml,<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>m_pLumCurve))</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/LuminanceCurve&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pToneFuncs)<sp/>{</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;ToneMapFunctions&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NumOutputChannels();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pToneFuncs[i]<sp/>&amp;&amp;<sp/>!strcmp(m_pToneFuncs[i]-&gt;GetClassName(),<sp/></highlight><highlight class="stringliteral">&quot;CIccXmlToneMapFunc&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/dc5/a02013" kindref="compound">CIccXmlToneMapFunc</ref>*<sp/>pFunc<sp/>=<sp/>(<ref refid="d1/dc5/a02013" kindref="compound">CIccXmlToneMapFunc</ref>*)m_pToneFuncs[i];</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>for<sp/>duplicate<sp/>curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>i;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pToneFuncs[i]<sp/>==<sp/>m_pToneFuncs[j])</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//handle<sp/>case<sp/>of<sp/>duplicate<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;DuplicateFunction<sp/>Index=\&quot;%d\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,<sp/>j);</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pFunc-&gt;<ref refid="d1/dc5/a02013_1ad507a27e2fd2f879f9afbe1c26071798" kindref="member">ToXml</ref>(xml,<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/ToneMapFunctions&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/ToneMapElement&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight></codeline>
<codeline lineno="1782" refid="d0/dfd/a02017_1a37d0e2cd5456b14801f72b2181ccb94a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/dfd/a02017_1a37d0e2cd5456b14801f72b2181ccb94a" kindref="member">CIccMpeXmlToneMap::ParseXml</ref>(xmlNode*<sp/>pNode,<sp/>std::string&amp;<sp/>parseStr)</highlight></codeline>
<codeline lineno="1783"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nInputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;InputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nOutputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;OutputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nInputChannels<sp/>||<sp/>!nOutputChannels<sp/>||<sp/>nInputChannels!=nOutputChannels+1)<sp/>{</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>InputChannels<sp/>or<sp/>OutputChannels<sp/>In<sp/>ToneMapElement\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/>m_nInputChannels<sp/>=<sp/>nInputChannels;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/>SetNumOutputChannels(nOutputChannels);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pToneFuncs)<sp/>{</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>allocate<sp/>ToneMapFunctions\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/>xmlNode*<sp/>pSubNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;LuminanceCurve&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSubNode)<sp/>{</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlNode*<sp/>pNode;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pNode<sp/>=<sp/>pSubNode-&gt;children;<sp/>pNode<sp/>&amp;&amp;<sp/>pNode-&gt;type<sp/>!=<sp/>XML_ELEMENT_NODE;<sp/>pNode<sp/>=<sp/>pNode-&gt;next);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pLumCurve<sp/>=<sp/><ref refid="dd/dd7/a00260_1a24c7425edeae7243fd1281274f7dfd59" kindref="member">ParseXmlCurve</ref>(pNode,<sp/>parseStr);</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pLumCurve)<sp/>{</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>Luminance<sp/>Curve\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>Luminance<sp/>Curve&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/>pSubNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;ToneMapFunctions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSubNode)<sp/>{</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlNode*<sp/>pNode;</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pNode<sp/>=<sp/>pSubNode-&gt;children,<sp/>nIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pNode;</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pNode<sp/>=<sp/>pNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nIndex<sp/>&gt;=<sp/>nOutputChannels)<sp/>{</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>ToneFunctions&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;DuplicateFunction&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Index&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCopyIndex<sp/>=<sp/>atoi(attr);</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nCopyIndex<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>nCopyIndex<sp/>&lt;<sp/>nIndex)<sp/>{</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pToneFuncs[nIndex]<sp/>=<sp/>m_pToneFuncs[nCopyIndex];</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nIndex++;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>index<sp/>for<sp/>duplicate<sp/>ToneMapFunction\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>index<sp/>for<sp/>duplicate<sp/>ToneMapFunction\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;ToneMapFunction&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/dc5/a02013" kindref="compound">CIccXmlToneMapFunc</ref>*<sp/>pFunc<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d1/dc5/a02013" kindref="compound">CIccXmlToneMapFunc</ref>();</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pFunc-&gt;<ref refid="d1/dc5/a02013_1a67d52136c7b6a56968bfab8d22dfecb6" kindref="member">ParseXml</ref>(pNode,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pFunc;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Insert(pFunc))</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nIndex++;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>Tone<sp/>Map<sp/>Function<sp/>&apos;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nIndex<sp/>&lt;<sp/>m_nOutputChannels)<sp/>{</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>ToneMap<sp/>Functions\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d8/d02/a01149" kindref="compound">CIccCLUT</ref><sp/>*<ref refid="dd/dd7/a00260_1a7c5a7e91d27be931c8067c38c7f17ea6" kindref="member">icCLutFromXml</ref>(xmlNode<sp/>*pNode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nOut,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref><sp/>nType,<sp/>std::string<sp/>&amp;parseStr);</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight></codeline>
<codeline lineno="1873" refid="da/d3e/a02025_1a6be0a6ac589d3e7ef65dea4771847ea3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d3e/a02025_1a6be0a6ac589d3e7ef65dea4771847ea3" kindref="member">CIccMpeXmlCLUT::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1874"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>attrs[256];</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved)<sp/>{</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(attrs,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;<sp/>Reserved=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>NumInputChannels(),<sp/>NumOutputChannels(),<sp/>m_nReserved);</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(attrs,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>NumInputChannels(),<sp/>NumOutputChannels());</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/d39/a00257_1a8e60807f7d16227a24f22ad32623bf98" kindref="member">icCLUTToXml</ref>(xml,<sp/>m_pCLUT,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>,<sp/>blanks,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>attrs,<sp/></highlight><highlight class="stringliteral">&quot;CLutElement&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1887" refid="da/d3e/a02025_1a12bdfaf73489d4043eaef10a429cff0a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d3e/a02025_1a12bdfaf73489d4043eaef10a429cff0a" kindref="member">CIccMpeXmlCLUT::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="1888"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/>m_nInputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;InputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/>m_nOutputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;OutputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_nInputChannels<sp/>||<sp/>!m_nOutputChannels)<sp/>{</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>InputChannels<sp/>or<sp/>OutputChannels<sp/>In<sp/>CLutElement\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><ref refid="d8/d02/a01149" kindref="compound">CIccCLUT</ref><sp/>*pCLut<sp/>=<sp/><ref refid="dd/dd7/a00260_1a7c5a7e91d27be931c8067c38c7f17ea6" kindref="member">icCLutFromXml</ref>(pNode,<sp/>m_nInputChannels,<sp/>m_nOutputChannels,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>,<sp/>parseStr);</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCLut)<sp/>{</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/>SetCLUT(pCLut);</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pCLUT)</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight></codeline>
<codeline lineno="1907" refid="d6/d19/a02029_1a43c55f1b5cee810f8182340c359c61ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d19/a02029_1a43c55f1b5cee810f8182340c359c61ee" kindref="member">CIccMpeXmlExtCLUT::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1908"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>attrs[256];</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/>std::string<sp/>reserved;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved)<sp/>{</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(attrs,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved);</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/>reserved<sp/>=<sp/>attrs;</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved2)<sp/>{</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(attrs,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved2=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved2);</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/>reserved<sp/>+=<sp/>attrs;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/>sprintf(attrs,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;%s<sp/>StorageType=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>NumInputChannels(),<sp/>NumOutputChannels(),<sp/>reserved.c_str(),<sp/>m_storageType);</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/d39/a00257_1a8e60807f7d16227a24f22ad32623bf98" kindref="member">icCLUTToXml</ref>(xml,<sp/>m_pCLUT,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>,<sp/>blanks,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>attrs,<sp/></highlight><highlight class="stringliteral">&quot;ExtCLutElement&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1927" refid="d6/d19/a02029_1ad58a9eae57a40bbebbc8cfefe6f1e24f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d19/a02029_1ad58a9eae57a40bbebbc8cfefe6f1e24f" kindref="member">CIccMpeXmlExtCLUT::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="1928"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/>m_storageType<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;StorageType&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/>m_nReserved2<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Reserved2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/>m_nInputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;InputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/>m_nOutputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;OutputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_nInputChannels<sp/>||<sp/>!m_nOutputChannels)<sp/>{</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>InputChannels<sp/>or<sp/>OutputChannels<sp/>In<sp/>ExtCLutElement\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><ref refid="d8/d02/a01149" kindref="compound">CIccCLUT</ref><sp/>*pCLut<sp/>=<sp/><ref refid="dd/dd7/a00260_1a7c5a7e91d27be931c8067c38c7f17ea6" kindref="member">icCLutFromXml</ref>(pNode,<sp/>m_nInputChannels,<sp/>m_nOutputChannels,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>,<sp/>parseStr);</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCLut)<sp/>{</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/>SetCLUT(pCLut);</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pCLUT)</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight></codeline>
<codeline lineno="1950" refid="d6/d94/a02033_1ab99bd7712342c0d63b6cb2d545f13c9a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d94/a02033_1ab99bd7712342c0d63b6cb2d545f13c9a" kindref="member">CIccMpeXmlBAcs::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1951"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256],<sp/>fix[256];</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;BAcsElement<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;<sp/>Signature=\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,<sp/>NumInputChannels(),<sp/>NumOutputChannels(),</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>m_signature)));</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved)<sp/>{</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved);</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pData<sp/>&amp;&amp;<sp/>m_nDataSize)<sp/>{</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*m_ptr<sp/>=<sp/>m_pData;</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1aac906ed45d63b044aa871d3366c05c6f" kindref="member">icXmlDumpHexData</ref>(xml,<sp/>blanks+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>m_pData,<sp/>m_nDataSize);</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/BAcsElement&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"></highlight></codeline>
<codeline lineno="1981" refid="d6/d94/a02033_1a0accb98f250503e091797235b89e06c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d94/a02033_1a0accb98f250503e091797235b89e06c1" kindref="member">CIccMpeXmlBAcs::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="1982"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/>m_nInputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;InputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/>m_nOutputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;OutputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_nInputChannels<sp/>||<sp/>!m_nOutputChannels)<sp/>{</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>InputChannels<sp/>or<sp/>OutputChannels<sp/>In<sp/>BAcsElement\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/>m_signature<sp/>=<sp/><ref refid="d9/d39/a00257_1aeb7c91622f164201b2a5a0afe9cd3848" kindref="member">icXmlStrToSig</ref>(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Signature&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;children<sp/>&amp;&amp;<sp/>pNode-&gt;children-&gt;type<sp/>==<sp/>XML_TEXT_NODE<sp/>&amp;&amp;<sp/>pNode-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>nSize<sp/>=<sp/><ref refid="d9/d39/a00257_1a4798bcdc271228ef7083a57412803e06" kindref="member">icXmlGetHexDataSize</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSize)<sp/>{</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!AllocData(nSize))</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1a7e2e6f47df3c6baacbda01035dfbbbee" kindref="member">icXmlGetHexData</ref>(m_pData,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)pNode-&gt;children-&gt;content,<sp/>nSize);</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight></codeline>
<codeline lineno="2006" refid="dd/dfc/a02037_1afeb82ef0fbc9b414a1d7131e0f08f037" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/dfc/a02037_1afeb82ef0fbc9b414a1d7131e0f08f037" kindref="member">CIccMpeXmlEAcs::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2007"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256],<sp/>fix[256];</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;EAcsElement<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;<sp/>Signature=\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,<sp/>NumInputChannels(),<sp/>NumOutputChannels(),</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>m_signature)));</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved)<sp/>{</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved);</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pData<sp/>&amp;&amp;<sp/>m_nDataSize)<sp/>{</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*m_ptr<sp/>=<sp/>m_pData;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1aac906ed45d63b044aa871d3366c05c6f" kindref="member">icXmlDumpHexData</ref>(xml,<sp/>blanks+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>m_pData,<sp/>m_nDataSize);</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/EAcsElement&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2032"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"></highlight></codeline>
<codeline lineno="2035" refid="dd/dfc/a02037_1a42deed0c1855bd1cbfa3c9a8ebc160e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/dfc/a02037_1a42deed0c1855bd1cbfa3c9a8ebc160e6" kindref="member">CIccMpeXmlEAcs::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="2036"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/>m_nInputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;InputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/>m_nOutputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;OutputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_nInputChannels<sp/>||<sp/>!m_nOutputChannels)<sp/>{</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>InputChannels<sp/>or<sp/>OutputChannels<sp/>In<sp/>EAcsElement\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/>m_signature<sp/>=<sp/><ref refid="d9/d39/a00257_1aeb7c91622f164201b2a5a0afe9cd3848" kindref="member">icXmlStrToSig</ref>(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Signature&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;children<sp/>&amp;&amp;<sp/>pNode-&gt;children-&gt;type<sp/>==<sp/>XML_TEXT_NODE<sp/>&amp;&amp;<sp/>pNode-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>nSize<sp/>=<sp/><ref refid="d9/d39/a00257_1a4798bcdc271228ef7083a57412803e06" kindref="member">icXmlGetHexDataSize</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSize)<sp/>{</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!AllocData(nSize))</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1a7e2e6f47df3c6baacbda01035dfbbbee" kindref="member">icXmlGetHexData</ref>(m_pData,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)pNode-&gt;children-&gt;content,<sp/>nSize);</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight></codeline>
<codeline lineno="2059" refid="dd/dd7/a00260_1a63ffdf99759eade4bc099f3a4ad3b5f7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/dd7/a00260_1a63ffdf99759eade4bc099f3a4ad3b5f7" kindref="member">icXmlDumpColorAppearanceParams</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks,<sp/><ref refid="dc/ddf/a00469" kindref="compound">CIccCamConverter</ref><sp/>*pCam)</highlight></codeline>
<codeline lineno="2060"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>xyz[3];</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;ColorAppearanceParams&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/>pCam-&gt;<ref refid="dc/ddf/a00469_1a658d892ed7a73a6702b4aa2af033a248" kindref="member">GetParameter_WhitePoint</ref>(&amp;xyz[0]);</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;XYZNumber<sp/>X=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Y=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Z=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;/&gt;&quot;</highlight><highlight class="normal">,<sp/>xyz[0],<sp/>xyz[1],<sp/>xyz[2]);</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;WhitePoint&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;/WhitePoint&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;Luminance&gt;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;&lt;/Luminance&gt;\n&quot;</highlight><highlight class="normal">,<sp/>pCam-&gt;<ref refid="dc/ddf/a00469_1af1e943d42638a9fe083b816eb5f9314d" kindref="member">GetParameter_La</ref>());</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;BackgroundLuminance&gt;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;&lt;/BackgroundLuminance&gt;\n&quot;</highlight><highlight class="normal">,<sp/>pCam-&gt;<ref refid="dc/ddf/a00469_1abedc6e406658b3a3563ac22431ee7ce7" kindref="member">GetParameter_Yb</ref>());</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;ImpactSurround&gt;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;&lt;/ImpactSurround&gt;\n&quot;</highlight><highlight class="normal">,<sp/>pCam-&gt;<ref refid="dc/ddf/a00469_1a7f63aaa837c2b0d9797ca5ed3d38edef" kindref="member">GetParameter_C</ref>());</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;ChromaticInductionFactor&gt;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;&lt;/ChromaticInductionFactor&gt;\n&quot;</highlight><highlight class="normal">,<sp/>pCam-&gt;<ref refid="dc/ddf/a00469_1aab58bdc1e9c0440d2e80849ceb015bd8" kindref="member">GetParameter_Nc</ref>());</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;AdaptationFactor&gt;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;&lt;/AdaptationFactor&gt;\n&quot;</highlight><highlight class="normal">,<sp/>pCam-&gt;<ref refid="dc/ddf/a00469_1ad639a0beba06250868a353c56b08e855" kindref="member">GetParameter_F</ref>());</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&lt;/ColorAppearanceParams&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight></codeline>
<codeline lineno="2093" refid="dd/dd7/a00260_1a539f9b308a780ec7fadf73e076292ff9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/dd7/a00260_1a539f9b308a780ec7fadf73e076292ff9" kindref="member">icXmlParseColorAppearanceParams</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr,<sp/><ref refid="dc/ddf/a00469" kindref="compound">CIccCamConverter</ref><sp/>*pCam)</highlight></codeline>
<codeline lineno="2094"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/>xmlNode<sp/>*pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;WhitePoint&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pChild)<sp/>{</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>find<sp/>CAM<sp/>Whitepoint\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/>xmlNode<sp/>*xyzNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pChild-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;XYZNumber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xyzNode)<sp/>{</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>find<sp/>valid<sp/>CAM<sp/>WhitePoint<sp/>XYZ\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/>xmlAttr<sp/>*x<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(xyzNode,<sp/></highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/>xmlAttr<sp/>*y<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(xyzNode,<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/>xmlAttr<sp/>*z<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(xyzNode,<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>xyz[3];</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&amp;&amp;<sp/>y<sp/>&amp;&amp;<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>xyz[0]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(x));</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>xyz[1]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(y));</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>xyz[2]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(z));</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>CAM<sp/>WhitePoint<sp/>XYZNumber\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/>pCam-&gt;<ref refid="dc/ddf/a00469_1af57315ea4ba7f29d9b97d4bfdb0e2df1" kindref="member">SetParameter_WhitePoint</ref>(&amp;xyz[0]);</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Luminance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pChild<sp/>||<sp/>!pChild-&gt;children<sp/>||<sp/>!pChild-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>CAM<sp/>Luminance\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/>pCam-&gt;<ref refid="dc/ddf/a00469_1a516ccb5edb55d757569accf9ebf88de5" kindref="member">SetParameter_La</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pChild-&gt;children-&gt;content));</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;BackgroundLuminance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pChild<sp/>||<sp/>!pChild-&gt;children<sp/>||<sp/>!pChild-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>CAM<sp/>Luminance\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/>pCam-&gt;<ref refid="dc/ddf/a00469_1aeeabbc31d25cb8797dedc4dbdbfabb99" kindref="member">SetParameter_Yb</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pChild-&gt;children-&gt;content));</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;ImpactSurround&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pChild<sp/>||<sp/>!pChild-&gt;children<sp/>||<sp/>!pChild-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>CAM<sp/>ImpactSurround\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/>pCam-&gt;<ref refid="dc/ddf/a00469_1a7e311fec359da8f006d5d355e0b61cb8" kindref="member">SetParameter_C</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pChild-&gt;children-&gt;content));</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;ChromaticInductionFactor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pChild<sp/>||<sp/>!pChild-&gt;children<sp/>||<sp/>!pChild-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>CAM<sp/>ChromaticInductionFactor\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/>pCam-&gt;<ref refid="dc/ddf/a00469_1a30b79740553c8f7861330b14ca6596e2" kindref="member">SetParameter_Nc</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pChild-&gt;children-&gt;content));</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;AdaptationFactor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pChild<sp/>||<sp/>!pChild-&gt;children<sp/>||<sp/>!pChild-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>CAM<sp/>AdaptationFactor\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/>pCam-&gt;<ref refid="dc/ddf/a00469_1a5745336e9bd9def6164a0048316aba47" kindref="member">SetParameter_F</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pChild-&gt;children-&gt;content));</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight></codeline>
<codeline lineno="2162" refid="d3/dea/a02041_1a34cf7cacb789aa994bea835172cb4967" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d3/dea/a02041_1a34cf7cacb789aa994bea835172cb4967" kindref="member">CIccMpeXmlJabToXYZ::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;JabToXYZElement<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;&quot;</highlight><highlight class="normal"><sp/>,<sp/>NumInputChannels(),<sp/>NumOutputChannels());</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved)<sp/>{</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved);</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pCAM)<sp/>{</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/dd7/a00260_1a63ffdf99759eade4bc099f3a4ad3b5f7" kindref="member">icXmlDumpColorAppearanceParams</ref>(xml,<sp/>blanks+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>m_pCAM);</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/JabToXYZElement&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"></highlight></codeline>
<codeline lineno="2184" refid="d3/dea/a02041_1a80da7cd38a9645ba1a22a5b81e92af16" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d3/dea/a02041_1a80da7cd38a9645ba1a22a5b81e92af16" kindref="member">CIccMpeXmlJabToXYZ::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="2185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/>m_nInputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;InputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/>m_nOutputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;OutputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nInputChannels!=3<sp/>||<sp/>m_nOutputChannels!=3)<sp/>{</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>InputChannels<sp/>or<sp/>OutputChannels<sp/>In<sp/>JabToXYZElement\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;ColorAppearanceParams&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"></highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild)<sp/>{</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/ddf/a00469" kindref="compound">CIccCamConverter</ref><sp/>*pCAM<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dc/ddf/a00469" kindref="compound">CIccCamConverter</ref>();</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="dd/dd7/a00260_1a539f9b308a780ec7fadf73e076292ff9" kindref="member">icXmlParseColorAppearanceParams</ref>(pChild-&gt;children,<sp/>parseStr,<sp/>pCAM))<sp/>{</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCAM;</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/>SetCAM(pCAM);</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>find<sp/>ColorAppearanceParams\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"></highlight></codeline>
<codeline lineno="2213" refid="d7/d13/a02045_1a54bb536e886c4f512c76956c51e2307f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d7/d13/a02045_1a54bb536e886c4f512c76956c51e2307f" kindref="member">CIccMpeXmlXYZToJab::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;XYZToJabElement<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;&quot;</highlight><highlight class="normal"><sp/>,<sp/>NumInputChannels(),<sp/>NumOutputChannels());</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved)<sp/>{</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved);</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pCAM)<sp/>{</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/dd7/a00260_1a63ffdf99759eade4bc099f3a4ad3b5f7" kindref="member">icXmlDumpColorAppearanceParams</ref>(xml,<sp/>blanks+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>m_pCAM);</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/XYZToJabElement&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"></highlight></codeline>
<codeline lineno="2235" refid="d7/d13/a02045_1a93de44beabef1e61b64a1bed175b28e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d7/d13/a02045_1a93de44beabef1e61b64a1bed175b28e2" kindref="member">CIccMpeXmlXYZToJab::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="2236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/>m_nInputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;InputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/>m_nOutputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;OutputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nInputChannels!=3<sp/>||<sp/>m_nOutputChannels!=3)<sp/>{</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>InputChannels<sp/>or<sp/>OutputChannels<sp/>In<sp/>XYZToJabElement\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;ColorAppearanceParams&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild)<sp/>{</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/ddf/a00469" kindref="compound">CIccCamConverter</ref><sp/>*pCAM<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dc/ddf/a00469" kindref="compound">CIccCamConverter</ref>();</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="dd/dd7/a00260_1a539f9b308a780ec7fadf73e076292ff9" kindref="member">icXmlParseColorAppearanceParams</ref>(pChild-&gt;children,<sp/>parseStr,<sp/>pCAM))<sp/>{</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCAM;</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/>SetCAM(pCAM);</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>find<sp/>ColorAppearanceParams\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"></highlight></codeline>
<codeline lineno="2265" refid="d8/de6/a02061_1ac2201e8656c54d4760a8b1f07e79ff51" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/de6/a02061_1ac2201e8656c54d4760a8b1f07e79ff51" kindref="member">CIccMpeXmlCalculator::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/>std::string<sp/>blanks2<sp/>=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;CalculatorElement<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>NumInputChannels(),<sp/>NumOutputChannels());</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved)<sp/>{</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved);</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_SubElem<sp/>&amp;&amp;<sp/>m_nSubElem)<sp/>{</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks2<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;SubElements&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_nSubElem;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_SubElem[i])<sp/>{</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/d10/a01189" kindref="compound">IIccExtensionMpe</ref><sp/>*pExt<sp/>=<sp/>m_SubElem[i]-&gt;GetExtension();</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pExt<sp/>&amp;&amp;<sp/>!strcmp(pExt-&gt;<ref refid="d3/d10/a01189_1a645d276bf232cfd12c5655d8dd7b817d" kindref="member">GetExtClassName</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;CIccMpeXml&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/dc1/a01993" kindref="compound">CIccMpeXml</ref><sp/>*pMpe<sp/>=<sp/>(<ref refid="d0/dc1/a01993" kindref="compound">CIccMpeXml</ref>*)pExt;</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMpe-&gt;<ref refid="d0/dc1/a01993_1aa4c60bf9aed85f83e0fd39c8171b2f16" kindref="member">ToXml</ref>(xml,<sp/>blanks2+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks2<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/SubElements&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_calcFunc)<sp/>{</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>desc;</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks2<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;MainFunction&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/>m_calcFunc-&gt;Describe(desc,<sp/>100,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)blanks2.size()+2);</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>desc;</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/>xml+=<sp/>blanks2<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/MainFunction&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/CalculatorElement&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"></highlight></codeline>
<codeline lineno="2316" refid="d8/de6/a02061_1ab7ca97b84c91ede58a8a016e1b23919e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/de6/a02061_1ab7ca97b84c91ede58a8a016e1b23919e" kindref="member">CIccMpeXmlCalculator::validNameChar</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bFirst)</highlight></codeline>
<codeline lineno="2317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bFirst<sp/>&amp;&amp;<sp/>!((c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!((c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"></highlight></codeline>
<codeline lineno="2326" refid="d8/de6/a02061_1abff944a170e203634872e394a7efd032" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/de6/a02061_1abff944a170e203634872e394a7efd032" kindref="member">CIccMpeXmlCalculator::validName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szName)</highlight></codeline>
<codeline lineno="2327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!szName<sp/>||<sp/>!*szName)<sp/>{</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ptr<sp/>=<sp/>szName;<sp/>*ptr;<sp/>ptr++)<sp/>{</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!validNameChar(*ptr,<sp/>ptr<sp/>==<sp/>szName))</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"></highlight></codeline>
<codeline lineno="2341" refid="d8/de6/a02061_1a71ab517362b15ce1f2e189a3c830d439" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/de6/a02061_1a71ab517362b15ce1f2e189a3c830d439" kindref="member">CIccMpeXmlCalculator::ParseImport</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>importPath,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="2342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pChild,<sp/>*pNext;</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/>xmlAttr<sp/>*attr;</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;Imports&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild)<sp/>{</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pNext<sp/>=<sp/>pChild-&gt;children;<sp/>pNext;<sp/>pNext<sp/>=<sp/>pNext-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNext-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNext-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;Import&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNext,<sp/></highlight><highlight class="stringliteral">&quot;Filename&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>file<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr);</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlDoc<sp/>*doc<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNode<sp/>*root_element<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>look<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>look<sp/>+=<sp/>file;</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>look<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(importPath.c_str(),<sp/>look.c_str()))<sp/>{</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Already<sp/>imported<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*parse<sp/>the<sp/>file<sp/>and<sp/>get<sp/>the<sp/>DOM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc<sp/>=<sp/>xmlReadFile(file.c_str(),<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doc<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>import<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>file;</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Get<sp/>the<sp/>root<sp/>element<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root_element<sp/>=<sp/>xmlDocGetRootElement(doc);</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)root_element-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;IccCalcImport&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>calc<sp/>element<sp/>import<sp/>file<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rv<sp/>=<sp/>ParseImport(root_element,<sp/>importPath+file+</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/>parseStr);</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFreeDoc(doc);</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>import<sp/>file<sp/>specifier\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>import<sp/>specifier\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"></highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;Variables&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild)<sp/>{</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pNext<sp/>=<sp/>pChild-&gt;children;<sp/>pNext;<sp/>pNext<sp/>=<sp/>pNext-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNext-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNext-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;Declare&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNext,<sp/></highlight><highlight class="stringliteral">&quot;Name&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr);</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!validName(name.c_str()))<sp/>{</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>calc<sp/>element<sp/>variable<sp/>name<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"></highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TempDeclVarMap::iterator<sp/>v<sp/>=<sp/>m_declVarMap.find(name);</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/>m_declVarMap.end())<sp/>{</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Calc<sp/>element<sp/>variable<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>was<sp/>previously<sp/>declared\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>size<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"></highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNext,<sp/></highlight><highlight class="stringliteral">&quot;Position&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&amp;&amp;<sp/>importPath<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Position<sp/>cannot<sp/>be<sp/>specified<sp/>for<sp/>imported<sp/>variables&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNext,<sp/></highlight><highlight class="stringliteral">&quot;Size&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&lt;<sp/>1)<sp/>size<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/dea/a02057" kindref="compound">CIccTempDeclVar</ref><sp/>var<sp/>=<sp/><ref refid="d2/dea/a02057" kindref="compound">CIccTempDeclVar</ref>(name,<sp/>offset,<sp/>size);</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNext-&gt;children<sp/>&amp;&amp;<sp/>pNext-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d9e/a01305" kindref="compound">CIccFuncTokenizer</ref><sp/>parse((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNext-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"></highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(parse.<ref refid="dc/d9e/a01305_1af16b4c39c40ceea0608fa443fcf67148" kindref="member">GetNext</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>extra<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>member<sp/>=<sp/>parse.<ref refid="dc/d9e/a01305_1a6882189d45f24304196b5ed5eac3f655" kindref="member">GetName</ref>();</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!validName(member.c_str()))<sp/>{</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>member<sp/>name<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>member<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>for<sp/>calc<sp/>element<sp/>variable<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>0;<sp/>extra<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parse.<ref refid="dc/d9e/a01305_1a3a63a50846af14dfa16e88d82c096a99" kindref="member">GetIndex</ref>(size,<sp/>extra,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size++;</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&lt;<sp/>1)<sp/></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var.<ref refid="d2/dea/a02057_1abb17f82d6c02a69240d0737ba69cb20a" kindref="member">m_members</ref>.push_back(<ref refid="d0/d55/a02053" kindref="compound">CIccTempVar</ref>(member,<sp/>offset,<sp/>size));</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(var.<ref refid="d2/dea/a02057_1a6a0c778a4795ff40f998ae44d6dd3fcb" kindref="member">m_size</ref><sp/>&lt;<sp/>offset)</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var.<ref refid="d2/dea/a02057_1a6a0c778a4795ff40f998ae44d6dd3fcb" kindref="member">m_size</ref><sp/>=<sp/>offset;</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_declVarMap[name]<sp/>=<sp/>var;</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>calc<sp/>element<sp/>variable<sp/>name<sp/>definition\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>calc<sp/>element<sp/>variable<sp/>declaration\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;Macros&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild)<sp/>{</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pNext<sp/>=<sp/>pChild-&gt;children;<sp/>pNext;<sp/>pNext<sp/>=<sp/>pNext-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNext-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNext-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;Macro&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNext,<sp/></highlight><highlight class="stringliteral">&quot;Name&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr);</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!validName(name.c_str()))<sp/>{</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Macro<sp/>name<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pNext-&gt;children<sp/>||<sp/>!pNext-&gt;children-&gt;content<sp/>||<sp/>!pNext-&gt;children-&gt;content[0])<sp/>{</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>content<sp/>for<sp/>macro<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MacroMap::iterator<sp/>m<sp/>=<sp/>m_macroMap.find(name);</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>!=<sp/>m_macroMap.end())<sp/>{</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(m-&gt;second.c_str(),<sp/>(<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNext-&gt;children-&gt;content))</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Calc<sp/>Element<sp/>macro<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>was<sp/>previously<sp/>defined<sp/>differently\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroMap[name]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)(pNext-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"></highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNext,<sp/></highlight><highlight class="stringliteral">&quot;Local&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>offset,<sp/>size;</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/dea/a02057" kindref="compound">CIccTempDeclVar</ref><sp/>var<sp/>=<sp/><ref refid="d2/dea/a02057" kindref="compound">CIccTempDeclVar</ref>(name,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>locals<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr);</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d9e/a01305" kindref="compound">CIccFuncTokenizer</ref><sp/>parse(locals.c_str());</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(parse.<ref refid="dc/d9e/a01305_1af16b4c39c40ceea0608fa443fcf67148" kindref="member">GetNext</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>extra<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>member<sp/>=<sp/>parse.<ref refid="dc/d9e/a01305_1a6882189d45f24304196b5ed5eac3f655" kindref="member">GetName</ref>();</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!validName(member.c_str()))<sp/>{</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>local<sp/>name<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>member<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>for<sp/>calc<sp/>element<sp/>macro<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>0;<sp/>extra<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parse.<ref refid="dc/d9e/a01305_1a3a63a50846af14dfa16e88d82c096a99" kindref="member">GetIndex</ref>(size,<sp/>extra,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size++;</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"></highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var.<ref refid="d2/dea/a02057_1abb17f82d6c02a69240d0737ba69cb20a" kindref="member">m_members</ref>.push_back(<ref refid="d0/d55/a02053" kindref="compound">CIccTempVar</ref>(member,<sp/>offset,<sp/>size));</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(var.<ref refid="d2/dea/a02057_1a6a0c778a4795ff40f998ae44d6dd3fcb" kindref="member">m_size</ref><sp/>&lt;<sp/>offset)</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var.<ref refid="d2/dea/a02057_1a6a0c778a4795ff40f998ae44d6dd3fcb" kindref="member">m_size</ref><sp/>=<sp/>offset;</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroLocalMap[name]<sp/>=<sp/>var;</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>macro<sp/>name\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>macro<sp/>declaration\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;SubElements&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild)<sp/>{</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pNext<sp/>=<sp/>pChild-&gt;children;<sp/>pNext;<sp/>pNext<sp/>=<sp/>pNext-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNext-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNext,<sp/></highlight><highlight class="stringliteral">&quot;Name&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr);</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!validName(name.c_str()))<sp/>{</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>SubElement<sp/>name<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.empty())<sp/>{</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(importPath<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Imported<sp/>Calc<sp/>SubElments<sp/>must<sp/>be<sp/>named.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MpePtrMap::iterator<sp/>se<sp/>=<sp/>m_mpeMap.find(name);</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(se<sp/>!=<sp/>m_mpeMap.end())<sp/>{</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Duplicate<sp/>declaration<sp/>of<sp/>SubElement<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"></highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d43/a01193" kindref="compound">CIccMultiProcessElement</ref><sp/>*pMpe<sp/>=<sp/><ref refid="d2/d6f/a01957_1aa8d27ee5aef8e01cb2f610b48858ea11" kindref="member">CIccTagXmlMultiProcessElement::CreateElement</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNext-&gt;name);</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"></highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pMpe)<sp/>{</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>Sub-Element<sp/>Type<sp/>(&quot;</highlight><highlight class="normal">)<sp/>+<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNext-&gt;name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"></highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(pMpe-&gt;<ref refid="dd/d43/a01193_1adbca0ab9005419df17440d70e0f5eacf" kindref="member">GetClassName</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;CIccMpeXmlCalculator&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/de6/a02061" kindref="compound">CIccMpeXmlCalculator</ref><sp/>*pSubCalc<sp/>=<sp/>(<ref refid="d8/de6/a02061" kindref="compound">CIccMpeXmlCalculator</ref>*)pMpe;</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSubCalc-&gt;<ref refid="d8/de6/a02061_1a1272d6a2483c1c3c523b1e0fd7f25f8b" kindref="member">m_sImport</ref><sp/>=<sp/>importPath;</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*attr;</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/d10/a01189" kindref="compound">IIccExtensionMpe</ref><sp/>*pExt<sp/>=<sp/>pMpe-&gt;<ref refid="dd/d43/a01193_1a9d0364bcea8215694dc1576f629934de" kindref="member">GetExtension</ref>();</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pExt)<sp/>{</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(pExt-&gt;<ref refid="d3/d10/a01189_1a645d276bf232cfd12c5655d8dd7b817d" kindref="member">GetExtClassName</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;CIccMpeXml&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/dc1/a01993" kindref="compound">CIccMpeXml</ref>*<sp/>pXmlMpe<sp/>=<sp/>(<ref refid="d0/dc1/a01993" kindref="compound">CIccMpeXml</ref>*)pExt;</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pXmlMpe-&gt;<ref refid="d0/dc1/a01993_1a0f0a4efab7609af9589966f5f2dce20b" kindref="member">ParseXml</ref>(pNext,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Reserved&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr),<sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/>&amp;pMpe-&gt;<ref refid="dd/d43/a01193_1af2c0f93513ec8c5a0c54328e3d3d705c" kindref="member">m_nReserved</ref>);</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.empty())<sp/>{</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_mpeList.push_back(<ref refid="d8/d5a/a02049" kindref="compound">CIccMpePtr</ref>(pMpe,<sp/>m_nNextMpe));</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nNextMpe++;</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_mpeMap[name]<sp/>=<sp/><ref refid="d8/d5a/a02049" kindref="compound">CIccMpePtr</ref>(pMpe);</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[100];</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(str,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>starting<sp/>on<sp/>line<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>pNext-&gt;line);</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>element<sp/>of<sp/>type<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>pMpe-&gt;<ref refid="dd/d43/a01193_1adbca0ab9005419df17440d70e0f5eacf" kindref="member">GetClassName</ref>()<sp/>+<sp/>str<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pMpe;</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Element<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>pMpe-&gt;<ref refid="dd/d43/a01193_1adbca0ab9005419df17440d70e0f5eacf" kindref="member">GetClassName</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;isn&apos;t<sp/>of<sp/>type<sp/>CIccMpeXml\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pMpe;</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Element<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>pMpe-&gt;<ref refid="dd/d43/a01193_1adbca0ab9005419df17440d70e0f5eacf" kindref="member">GetClassName</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;isn&apos;t<sp/>of<sp/>type<sp/>CIccMpeXml\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pMpe;</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"></highlight></codeline>
<codeline lineno="2620" refid="d8/de6/a02061_1a88dab230dfb5391a2a51d9953a284f8e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/de6/a02061_1a88dab230dfb5391a2a51d9953a284f8e" kindref="member">CIccMpeXmlCalculator::ValidMacroCalls</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szMacroText,<sp/>std::string<sp/>macroStack,<sp/>std::string<sp/>&amp;parseStr)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2621"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ptr<sp/>=<sp/>strstr(szMacroText,<sp/></highlight><highlight class="stringliteral">&quot;call{&quot;</highlight><highlight class="normal">);<sp/>ptr;<sp/>ptr<sp/>=<sp/>strstr(ptr,<sp/></highlight><highlight class="stringliteral">&quot;call{&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d9e/a01305" kindref="compound">CIccFuncTokenizer</ref><sp/>parse(ptr,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/>parse.<ref refid="dc/d9e/a01305_1af16b4c39c40ceea0608fa443fcf67148" kindref="member">GetNext</ref>();</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"></highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>parse.<ref refid="dc/d9e/a01305_1aba78741f4c7a254314d5dad206a67333" kindref="member">GetReference</ref>();</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/>MacroMap::const_iterator<sp/>m<sp/>=<sp/>m_macroMap.find(name);</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>==<sp/>m_macroMap.end())<sp/>{</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Call<sp/>to<sp/>undefined<sp/>macro<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sm<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/>sm<sp/>+=<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(macroStack.c_str(),<sp/>sm.c_str()))<sp/>{</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Macro<sp/>recursion<sp/>detected<sp/>in<sp/>call<sp/>to<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ValidMacroCalls(m-&gt;second.c_str(),<sp/>macroStack<sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"></highlight></codeline>
<codeline lineno="2647" refid="d8/de6/a02061_1a942261124512e9915340867a0ac3b316" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/de6/a02061_1a942261124512e9915340867a0ac3b316" kindref="member">CIccMpeXmlCalculator::ValidateMacroCalls</ref>(std::string<sp/>&amp;parseStr)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2648"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/>MacroMap::const_iterator<sp/>m;</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"></highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(m<sp/>=<sp/>m_macroMap.begin();<sp/>m<sp/>!=<sp/>m_macroMap.end();<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ValidMacroCalls(m-&gt;second.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"></highlight></codeline>
<codeline lineno="2659" refid="d8/de6/a02061_1a6dceacd068834515833da80c7e559dff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/de6/a02061_1a6dceacd068834515833da80c7e559dff" kindref="member">CIccMpeXmlCalculator::Flatten</ref>(std::string<sp/>&amp;flatStr,<sp/>std::string<sp/>macroName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szFunc,<sp/>std::string<sp/>&amp;parseStr,<sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>nLocalsOffset)</highlight></codeline>
<codeline lineno="2660"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><ref refid="dc/d9e/a01305" kindref="compound">CIccFuncTokenizer</ref><sp/>parse(szFunc,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(parse.<ref refid="dc/d9e/a01305_1af16b4c39c40ceea0608fa443fcf67148" kindref="member">GetNext</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>token<sp/>=<sp/>parse.<ref refid="dc/d9e/a01305_1a6f7dd3b8b60901859fe5da7352c0beb6" kindref="member">GetLast</ref>();</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tok<sp/>=<sp/>token.c_str();</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(tok,<sp/></highlight><highlight class="stringliteral">&quot;call{&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>||</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tok[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>nameiter;</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tok[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nameiter<sp/>=<sp/>token.substr(1);</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nameiter<sp/>=<sp/>parse.<ref refid="dc/d9e/a01305_1aba78741f4c7a254314d5dad206a67333" kindref="member">GetReference</ref>();</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"></highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ptr<sp/>=<sp/>nameiter.c_str();<sp/>*ptr<sp/>&amp;&amp;<sp/>*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">;<sp/>ptr++)<sp/>name<sp/>+=<sp/>*ptr;</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(*ptr)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2680"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>=<sp/>atoi(ptr<sp/>+<sp/>1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(iter<sp/>&lt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>=<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2683"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(iter&gt;1024)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2684"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>=<sp/>1024;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2685"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal"></highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MacroMap::iterator<sp/>m<sp/>=<sp/>m_macroMap.find(name.c_str());</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>!=<sp/>m_macroMap.end())<sp/>{</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nLocalsSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TempDeclVarMap::iterator<sp/>locals<sp/>=<sp/>m_macroLocalMap.find(macroName);</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(locals<sp/>!=<sp/>m_macroLocalMap.end())<sp/>{</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nLocalsSize<sp/>=<sp/>locals-&gt;second.m_size;</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>iter;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Flatten(flatStr,<sp/>name,<sp/>m-&gt;second.c_str(),<sp/>parseStr,<sp/>nLocalsOffset+nLocalsSize);</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Call<sp/>to<sp/>undefined<sp/>macro<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(tok,<sp/></highlight><highlight class="stringliteral">&quot;in{&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>||</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strncmp(tok,<sp/></highlight><highlight class="stringliteral">&quot;out{&quot;</highlight><highlight class="normal">,<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>op<sp/>=<sp/>parse.<ref refid="dc/d9e/a01305_1a6882189d45f24304196b5ed5eac3f655" kindref="member">GetName</ref>();</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ref<sp/>=<sp/>parse.<ref refid="dc/d9e/a01305_1aba78741f4c7a254314d5dad206a67333" kindref="member">GetReference</ref>();</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>refroot;</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/>ref.c_str();<sp/>*ptr<sp/>&amp;&amp;<sp/>*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">;<sp/>ptr++)<sp/>refroot<sp/>+=<sp/>*ptr;</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"></highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d40/a00236_1ac3f57cde7eaff3d84e3bb7dfa6483cdf" kindref="member">ChanVarMap</ref><sp/>*pMap;</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChan;</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;in&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMap<sp/>=<sp/>&amp;m_inputMap;</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nChan<sp/>=<sp/>m_nInputChannels;</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMap<sp/>=<sp/>&amp;m_outputMap;</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nChan<sp/>=<sp/>m_nOutputChannels;</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ChanVarMap::iterator<sp/>ci<sp/>=<sp/>pMap-&gt;find(refroot);</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ci<sp/>==<sp/>pMap-&gt;end())<sp/>{</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>op<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>operation<sp/>channel<sp/>reference<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>refroot<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refroot<sp/>!=<sp/>ref)<sp/>{</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>select<sp/>=<sp/>ref.substr(refroot.size());</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"></highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(select[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal"><sp/>||<sp/>select[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>atoi(select.c_str()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ptr<sp/>=<sp/>select.c_str()<sp/>+<sp/>1;<sp/>*ptr<sp/>&amp;&amp;<sp/>*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">;<sp/>ptr++);</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>select<sp/>=<sp/>ptr<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(select[0]==</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>atoi(select.c_str()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"></highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&lt;<sp/>0<sp/>||<sp/>offset&lt;0<sp/>||<sp/>ci-&gt;second.first<sp/>+<sp/>offset<sp/>+<sp/>size<sp/>&gt;<sp/>m_nInputChannels)<sp/>{</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>op<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>operation<sp/>channel<sp/>offset<sp/>or<sp/>size<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>refroot<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>index[80];</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(index,<sp/></highlight><highlight class="stringliteral">&quot;(%d,%d)&quot;</highlight><highlight class="normal">,<sp/>ci-&gt;second.first+offset,<sp/>size);</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flatStr<sp/>+=<sp/>op<sp/>+<sp/>index<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ci-&gt;second.second&gt;1)<sp/>{</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>index[80];</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(index,<sp/></highlight><highlight class="stringliteral">&quot;(%d,%d)&quot;</highlight><highlight class="normal">,<sp/>ci-&gt;second.first,<sp/>ci-&gt;second.second);</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flatStr<sp/>+=<sp/>op<sp/>+<sp/>index<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>index[80];</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(index,<sp/></highlight><highlight class="stringliteral">&quot;(%d)&quot;</highlight><highlight class="normal">,<sp/>ci-&gt;second.first);</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flatStr<sp/>+=<sp/>op<sp/>+<sp/>index<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(tok,<sp/></highlight><highlight class="stringliteral">&quot;tget{&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>||</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strncmp(tok,<sp/></highlight><highlight class="stringliteral">&quot;tput{&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>||</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strncmp(tok,<sp/></highlight><highlight class="stringliteral">&quot;tsav{&quot;</highlight><highlight class="normal">,<sp/>5))<sp/>{</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>op<sp/>=<sp/>parse.<ref refid="dc/d9e/a01305_1a6882189d45f24304196b5ed5eac3f655" kindref="member">GetName</ref>();</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ref<sp/>=<sp/>parse.<ref refid="dc/d9e/a01305_1aba78741f4c7a254314d5dad206a67333" kindref="member">GetReference</ref>();</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>refroot;</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/>ref.c_str();<sp/>*ptr<sp/>&amp;&amp;<sp/>*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">;<sp/>ptr++)<sp/>refroot<sp/>+=<sp/>*ptr;</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"></highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(macroName.size()<sp/>&amp;&amp;<sp/>refroot.size()<sp/>&amp;&amp;<sp/>refroot[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>localName<sp/>=<sp/>refroot.substr(1);</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TempDeclVarMap::iterator<sp/>locals<sp/>=<sp/>m_macroLocalMap.find(macroName);</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(locals<sp/>==<sp/>m_macroLocalMap.end())<sp/>{</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Reference<sp/>to<sp/>undeclared<sp/>local<sp/>variable<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>localName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>in<sp/>macro<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>macroName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"></highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nLocalOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nLocalSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TempVarList::iterator<sp/>m<sp/>=<sp/>locals-&gt;second.m_members.begin();</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>m<sp/>!=<sp/>locals-&gt;second.m_members.end();<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(localName<sp/>==<sp/>m-&gt;m_name)<sp/>{</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nLocalOffset<sp/>=<sp/>m-&gt;m_pos;</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nLocalSize<sp/>=<sp/>m-&gt;m_size;</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>==<sp/>locals-&gt;second.m_members.end())<sp/>{</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Reference<sp/>to<sp/>undeclared<sp/>local<sp/>variable<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>localName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>in<sp/>macro<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>macroName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>voffset,<sp/>vsize;</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"></highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ref<sp/>!=<sp/>refroot)<sp/>{</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d9e/a01305" kindref="compound">CIccFuncTokenizer</ref><sp/>p2(ref.c_str());</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2.<ref refid="dc/d9e/a01305_1af16b4c39c40ceea0608fa443fcf67148" kindref="member">GetNext</ref>();</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>_voffset<sp/>=<sp/>0,<sp/>_vsize<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2.<ref refid="dc/d9e/a01305_1a3a63a50846af14dfa16e88d82c096a99" kindref="member">GetIndex</ref>(_voffset,<sp/>_vsize,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>voffset<sp/>=<sp/>_voffset;</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vsize<sp/>=<sp/>_vsize<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>voffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vsize<sp/>=<sp/>(int)nLocalSize;</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(voffset<sp/>+<sp/>vsize<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)nLocalSize)<sp/>{</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>bounds<sp/>indexing<sp/>of<sp/>local<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>refroot<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>in<sp/>macro<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>macroName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"></highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nLocalsOffset<sp/>+<sp/>nLocalOffset<sp/>+<sp/>voffset<sp/>+<sp/>vsize<sp/>&gt;<sp/>65536)<sp/>{</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Temporary<sp/>variable<sp/>addressing<sp/>out<sp/>of<sp/>bounds\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>idx[80];</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vsize<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(idx,<sp/></highlight><highlight class="stringliteral">&quot;[%lu]&quot;</highlight><highlight class="normal">,<sp/>nLocalsOffset<sp/>+<sp/>nLocalOffset<sp/>+<sp/>voffset);</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(idx,<sp/></highlight><highlight class="stringliteral">&quot;[%lu,%d]&quot;</highlight><highlight class="normal">,<sp/>nLocalsOffset<sp/>+<sp/>nLocalOffset<sp/>+<sp/>voffset,<sp/>vsize);</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flatStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flatStr<sp/>+=<sp/>op.substr(1);</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flatStr<sp/>+=<sp/>idx;</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flatStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TempVarMap::iterator<sp/>var<sp/>=<sp/>m_varMap.find(refroot);</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(var<sp/>==<sp/>m_varMap.end())<sp/>{</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>root;</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/>refroot.c_str();<sp/>*ptr<sp/>&amp;&amp;<sp/>*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">;<sp/>ptr++)<sp/>root<sp/>+=<sp/>*ptr;</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"></highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TempVarMap::iterator<sp/>rootVar<sp/>=<sp/>m_varMap.find(root);</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refroot<sp/>!=<sp/>root<sp/>&amp;&amp;<sp/>rootVar<sp/>==<sp/>m_varMap.end())<sp/>{</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Reference<sp/>to<sp/>undeclared<sp/>variable<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>ref<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"></highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TempDeclVarMap::iterator<sp/>decl<sp/>=<sp/>m_declVarMap.find(root);</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decl<sp/>==<sp/>m_declVarMap.end())<sp/>{</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Reference<sp/>to<sp/>undeclared<sp/>variable<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>ref<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"></highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decl-&gt;second.m_pos<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_varMap[root]<sp/>=<sp/><ref refid="d0/d55/a02053" kindref="compound">CIccTempVar</ref>(root,<sp/>m_nNextVar,<sp/>decl-&gt;second.m_size);</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decl-&gt;second.m_pos<sp/>=<sp/>m_nNextVar;</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"></highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strchr(refroot.c_str(),<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TempVarList::iterator<sp/>m<sp/>=<sp/>decl-&gt;second.m_members.begin();</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>m<sp/>!=<sp/>decl-&gt;second.m_members.end();<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>vm<sp/>=<sp/>root<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m-&gt;m_name;</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_varMap[vm]<sp/>=<sp/><ref refid="d0/d55/a02053" kindref="compound">CIccTempVar</ref>(vm,<sp/>m_nNextVar<sp/>+<sp/>m-&gt;m_pos,<sp/>m-&gt;m_size);</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"></highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nNextVar<sp/>+<sp/>decl-&gt;second.m_size<sp/>&gt;<sp/>65536)<sp/>{</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Temporary<sp/>variable<sp/>addressing<sp/>out<sp/>of<sp/>bounds\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nNextVar<sp/>+=<sp/>decl-&gt;second.m_size;</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_varMap[root]<sp/>=<sp/><ref refid="d0/d55/a02053" kindref="compound">CIccTempVar</ref>(root,<sp/>decl-&gt;second.m_pos,<sp/>decl-&gt;second.m_size);</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strchr(refroot.c_str(),<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TempVarList::iterator<sp/>m<sp/>=<sp/>decl-&gt;second.m_members.begin();</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>m<sp/>!=<sp/>decl-&gt;second.m_members.end();<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>vm<sp/>=<sp/>root<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m-&gt;m_name;</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_varMap[vm]<sp/>=<sp/><ref refid="d0/d55/a02053" kindref="compound">CIccTempVar</ref>(vm,<sp/>decl-&gt;second.m_pos<sp/>+<sp/>m-&gt;m_pos,<sp/>m-&gt;m_size);</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decl-&gt;second.m_pos<sp/>+<sp/>decl-&gt;second.m_size<sp/>&gt;<sp/>65536)<sp/>{</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Temporary<sp/>variable<sp/>addressing<sp/>out<sp/>of<sp/>bounds\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"></highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/>m_varMap.find(refroot);</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(var<sp/>==<sp/>m_varMap.end())<sp/>{</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Reference<sp/>to<sp/>undeclared<sp/>variable<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>refroot<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>voffset,<sp/>vsize;</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"></highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ref<sp/>!=<sp/>refroot)<sp/>{</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d9e/a01305" kindref="compound">CIccFuncTokenizer</ref><sp/>p2(ref.c_str());</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2.<ref refid="dc/d9e/a01305_1af16b4c39c40ceea0608fa443fcf67148" kindref="member">GetNext</ref>();</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>_voffset<sp/>=<sp/>0,<sp/>_vsize<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2.<ref refid="dc/d9e/a01305_1a3a63a50846af14dfa16e88d82c096a99" kindref="member">GetIndex</ref>(_voffset,<sp/>_vsize,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>voffset<sp/>=<sp/>_voffset;</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vsize<sp/>=<sp/>_vsize<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>voffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vsize<sp/>=<sp/>var-&gt;second.m_size;</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"></highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(voffset<sp/>+<sp/>vsize<sp/>&gt;<sp/>var-&gt;second.m_size)<sp/>{</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>bounds<sp/>indexing<sp/>of<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>refroot<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(var-&gt;second.m_pos<sp/>+<sp/>voffset<sp/>+<sp/>vsize<sp/>&gt;<sp/>65536)<sp/>{</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Temporary<sp/>variable<sp/>addressing<sp/>out<sp/>of<sp/>bounds\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>idx[80];</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vsize<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(idx,<sp/></highlight><highlight class="stringliteral">&quot;[%d]&quot;</highlight><highlight class="normal">,<sp/>var-&gt;second.m_pos<sp/>+<sp/>voffset);</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(idx,<sp/></highlight><highlight class="stringliteral">&quot;[%d,%d]&quot;</highlight><highlight class="normal">,<sp/>var-&gt;second.m_pos<sp/>+<sp/>voffset,<sp/>vsize);</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flatStr<sp/>+=<sp/>op<sp/>+<sp/>idx<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(tok,<sp/></highlight><highlight class="stringliteral">&quot;elem{&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>||</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strncmp(tok,<sp/></highlight><highlight class="stringliteral">&quot;curv{&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>||</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strncmp(tok,<sp/></highlight><highlight class="stringliteral">&quot;clut{&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>||</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strncmp(tok,<sp/></highlight><highlight class="stringliteral">&quot;mtx{&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>||</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strncmp(tok,<sp/></highlight><highlight class="stringliteral">&quot;fJab{&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>||</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strncmp(tok,<sp/></highlight><highlight class="stringliteral">&quot;tJab{&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>||</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strncmp(tok,<sp/></highlight><highlight class="stringliteral">&quot;calc{&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>||</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strncmp(tok,<sp/></highlight><highlight class="stringliteral">&quot;tint{&quot;</highlight><highlight class="normal">,<sp/>5))<sp/>{</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>op<sp/>=<sp/>parse.<ref refid="dc/d9e/a01305_1a6882189d45f24304196b5ed5eac3f655" kindref="member">GetName</ref>();</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ref<sp/>=<sp/>parse.<ref refid="dc/d9e/a01305_1aba78741f4c7a254314d5dad206a67333" kindref="member">GetReference</ref>();</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MpePtrMap::iterator<sp/>e<sp/>=<sp/>m_mpeMap.find(ref);</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e<sp/>==<sp/>m_mpeMap.end())<sp/>{</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>sub<sp/>element<sp/>reference<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>token<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;second.m_nIndex&lt;0)<sp/>{</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;second.m_ptr)<sp/>{</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_mpeList.push_back(<ref refid="d8/d5a/a02049" kindref="compound">CIccMpePtr</ref>(e-&gt;second.m_ptr,<sp/>m_nNextMpe));</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;second.m_ptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;second.m_nIndex<sp/>=<sp/>m_nNextMpe;</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nNextMpe++;</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>sub-element<sp/>reference:<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>token<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>idx[80];</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(idx,<sp/></highlight><highlight class="stringliteral">&quot;(%d)&quot;</highlight><highlight class="normal">,<sp/>e-&gt;second.m_nIndex);</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flatStr<sp/>+=<sp/>op<sp/>+<sp/>idx<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flatStr<sp/>+=<sp/>tok;</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flatStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2957"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"></highlight></codeline>
<codeline lineno="2959" refid="d8/de6/a02061_1a6a778e1dcd669430198c37377d137046" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/de6/a02061_1a6a778e1dcd669430198c37377d137046" kindref="member">CIccMpeXmlCalculator::UpdateLocals</ref>(std::string<sp/>&amp;func,<sp/>std::string<sp/>sFunc,<sp/>std::string<sp/>&amp;parseStr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLocalsOffset)</highlight></codeline>
<codeline lineno="2960"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/>func.clear();</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><ref refid="dc/d9e/a01305" kindref="compound">CIccFuncTokenizer</ref><sp/>parse(sFunc.c_str(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(parse.<ref refid="dc/d9e/a01305_1af16b4c39c40ceea0608fa443fcf67148" kindref="member">GetNext</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>token<sp/>=<sp/>parse.<ref refid="dc/d9e/a01305_1a6f7dd3b8b60901859fe5da7352c0beb6" kindref="member">GetLast</ref>();</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tok<sp/>=<sp/>token.c_str();</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"></highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(tok,<sp/></highlight><highlight class="stringliteral">&quot;lget[&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>||</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strncmp(tok,<sp/></highlight><highlight class="stringliteral">&quot;lput[&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>||</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strncmp(tok,<sp/></highlight><highlight class="stringliteral">&quot;lsav[&quot;</highlight><highlight class="normal">,<sp/>5))<sp/>{</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>op<sp/>=<sp/>parse.<ref refid="dc/d9e/a01305_1a6882189d45f24304196b5ed5eac3f655" kindref="member">GetName</ref>();</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>voffset,<sp/>vsize;</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"></highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d9e/a01305" kindref="compound">CIccFuncTokenizer</ref><sp/>p2(tok+4);</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>_voffset<sp/>=<sp/>0,<sp/>_vsize<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p2.<ref refid="dc/d9e/a01305_1a3a63a50846af14dfa16e88d82c096a99" kindref="member">GetIndex</ref>(_voffset,<sp/>_vsize,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>voffset<sp/>=<sp/>_voffset<sp/>+<sp/>nLocalsOffset;</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vsize<sp/>=<sp/>_vsize<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"></highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(voffset<sp/>+<sp/>vsize<sp/>&gt;<sp/>65535)<sp/>{</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Local<sp/>variable<sp/>out<sp/>of<sp/>bounds<sp/>-<sp/>too<sp/>many<sp/>variables.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"></highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>idx[80];</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vsize<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(idx,<sp/></highlight><highlight class="stringliteral">&quot;[%d]&quot;</highlight><highlight class="normal">,<sp/>voffset);</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(idx,<sp/></highlight><highlight class="stringliteral">&quot;[%d,%d]&quot;</highlight><highlight class="normal">,<sp/>voffset,<sp/>vsize);</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/>+=</highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/>+=<sp/>op.substr(1);</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/>+=<sp/>idx;</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/>+=<sp/>tok;</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"></highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3004"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3005" refid="d8/de6/a02061_1ac5831e989eada2f5e01cbe8ed18cce33" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/de6/a02061_1ac5831e989eada2f5e01cbe8ed18cce33" kindref="member">CIccMpeXmlCalculator::clean</ref>()</highlight></codeline>
<codeline lineno="3006"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/>m_sImport<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/>m_declVarMap.clear();</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/>m_varMap.clear();</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/>m_macroMap.clear();</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"></highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/>MpePtrList::iterator<sp/>ml;</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ml<sp/>=<sp/>m_mpeList.begin();<sp/>ml<sp/>!=<sp/>m_mpeList.end();<sp/>ml++)<sp/>{</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ml-&gt;m_ptr)</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ml-&gt;m_ptr;</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/>m_mpeList.clear();</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"></highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/>MpePtrMap::iterator<sp/>mm;</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(mm<sp/>=<sp/>m_mpeMap.begin();<sp/>mm<sp/>!=<sp/>m_mpeMap.end();<sp/>mm++)<sp/>{</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;second.m_ptr)</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mm-&gt;second.m_ptr;</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/>m_mpeMap.clear();</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/>m_nNextVar<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/>m_nNextMpe<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"></highlight></codeline>
<codeline lineno="3029" refid="d8/de6/a02061_1a0d7b500e440746fc9a1e8f421b6912a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/de6/a02061_1a0d7b500e440746fc9a1e8f421b6912a2" kindref="member">CIccMpeXmlCalculator::ParseChanMap</ref>(<ref refid="d7/d40/a00236_1ac3f57cde7eaff3d84e3bb7dfa6483cdf" kindref="member">ChanVarMap</ref>&amp;<sp/>chanMap,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szNames,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChannels)</highlight></codeline>
<codeline lineno="3030"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/>chanMap.clear();</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"></highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!szNames)</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"></highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><ref refid="d7/d40/a00236_1ac19a426da54464a439ac8ca65dd44e94" kindref="member">IndexSizePair</ref><sp/>isp;</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"></highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>ptr<sp/>=<sp/>szNames;<sp/>*ptr<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>nChannels;<sp/>ptr++)<sp/>{</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bFirst<sp/>=<sp/>name.empty();</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bFirst)<sp/>{</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isp.first<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isp.second<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chanMap[name]<sp/>=<sp/>isp;</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name.clear();</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal"><sp/>||<sp/>*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>atoi(ptr<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size&lt;0<sp/>||<sp/>i<sp/>+<sp/>size&gt;nChannels)</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"></highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>*ptr<sp/>&amp;&amp;<sp/>*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">;<sp/>ptr++);</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*ptr)</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr--;</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(validNameChar(*ptr,<sp/>bFirst))<sp/>{</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>+=<sp/>*ptr;</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"></highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!name.empty()<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>nChannels)<sp/>{</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/>isp.first<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/>isp.second<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/>chanMap[name]<sp/>=<sp/>isp;</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"></highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"></highlight></codeline>
<codeline lineno="3080" refid="d8/de6/a02061_1aa49fb555bcc2fe5e5377f7d608368b94" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/de6/a02061_1aa49fb555bcc2fe5e5377f7d608368b94" kindref="member">CIccMpeXmlCalculator::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="3081"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pChild;</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/>SetSize(atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;InputChannels&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;OutputChannels&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"></highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/>clean();</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"></highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ParseChanMap(m_inputMap,<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;InputNames&quot;</highlight><highlight class="normal">),<sp/>m_nInputChannels))<sp/>{</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>name<sp/>for<sp/>InputChannels&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"></highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ParseChanMap(m_outputMap,<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;OutputNames&quot;</highlight><highlight class="normal">),<sp/>m_nOutputChannels))<sp/>{</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>name<sp/>for<sp/>InputChannels&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"></highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ParseImport(pNode,<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/>parseStr))</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"></highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ValidateMacroCalls(parseStr))<sp/>{</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"></highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;MainFunction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild<sp/>&amp;&amp;<sp/>pNode-&gt;children<sp/>&amp;&amp;<sp/>pChild-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*content<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pChild-&gt;children-&gt;content;</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>flatFunc;</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"></highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Move<sp/>new<sp/>variables<sp/>to<sp/>after<sp/>allocated<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/>TempDeclVarMap::iterator<sp/>declVar;</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(declVar<sp/>=<sp/>m_declVarMap.begin();<sp/>declVar<sp/>!=<sp/>m_declVarMap.end();<sp/>declVar++)<sp/>{</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(declVar-&gt;second.m_pos<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next<sp/>=<sp/>declVar-&gt;second.m_pos<sp/>+<sp/>declVar-&gt;second.m_size;</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next<sp/>&gt;<sp/>m_nNextVar)</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nNextVar<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"></highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Flatten(flatFunc,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>content,<sp/>parseStr,<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"></highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_macroLocalMap.size())<sp/>{</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>localFunc;</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!UpdateLocals(localFunc,<sp/>flatFunc,<sp/>parseStr,<sp/>m_nNextVar))<sp/>{</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flatFunc<sp/>=<sp/>localFunc;</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//copy<sp/>MPE<sp/>subelmeents<sp/>used<sp/>by<sp/>Main<sp/>Function<sp/>to<sp/>returned<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/>MpePtrList::iterator<sp/>m;</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(m<sp/>=<sp/>m_mpeList.begin(),<sp/>n<sp/>=<sp/>0;<sp/>m<sp/>!=<sp/>m_mpeList.end();<sp/>m++,<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;SetSubElem(n,<sp/>m-&gt;m_ptr);</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;m_ptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"></highlight></codeline>
<codeline lineno="3140"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*ff<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;flatfunc.txt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(flatFunc.c_str(),<sp/>flatFunc.size(),<sp/>1,<sp/>ff);</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(ff);</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3145"><highlight class="normal"></highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/de0/a00050_1a36db9e101e447d0d68e6ac2f21ad92df" kindref="member">icFuncParseStatus</ref><sp/>stat<sp/>=<sp/>SetCalcFunc(flatFunc.c_str(),<sp/>parseStr);</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat!=<ref refid="d5/de0/a00050_1a36db9e101e447d0d68e6ac2f21ad92dfa841f99754b281b98f20e2c31b0291b8b" kindref="member">icFuncParseNoError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[65];</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="d7/dce/a00143_1ad24afa240a65b1f84c71f10c7a62a370" kindref="member">icIntMin</ref>(64,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)strlen(flatFunc.c_str()));</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(buf,<sp/>flatFunc.c_str(),<sp/>len);</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf[len]=0;</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"></highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(stat)<sp/>{</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d5/de0/a00050_1a36db9e101e447d0d68e6ac2f21ad92dfa4dc45810e4c803b167e2c22c6c69cf68" kindref="member">icFuncParseSyntaxError</ref>:</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Syntax<sp/>Error<sp/>occurred<sp/>while<sp/>parsing<sp/>Main<sp/>Calculator<sp/>Function<sp/>from<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d5/de0/a00050_1a36db9e101e447d0d68e6ac2f21ad92dfaccc0030c92371a184b26499c92a1571f" kindref="member">icFuncParseInvalidOperation</ref>:</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Operation<sp/>found<sp/>while<sp/>parsing<sp/>Main<sp/>Calculator<sp/>Function<sp/>from<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d5/de0/a00050_1a36db9e101e447d0d68e6ac2f21ad92dfa8fd4b48d359fee5fb6a0354e9b072d8d" kindref="member">icFuncParseStackUnderflow</ref>:</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Stack<sp/>underflow<sp/>detected<sp/>while<sp/>parsing<sp/>Main<sp/>Calculator<sp/>Function<sp/>from<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d5/de0/a00050_1a36db9e101e447d0d68e6ac2f21ad92dfafbf534a1b7b476f3401f5921a3d43bb5" kindref="member">icFuncParseInvalidChannel</ref>:</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Channel<sp/>detected<sp/>while<sp/>parsing<sp/>Main<sp/>Calculator<sp/>Function<sp/>from<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>Main<sp/>Calculator<sp/>Function<sp/>from<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/>clean();</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"></highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"></highlight></codeline>
<codeline lineno="3179"><highlight class="normal"></highlight></codeline>
<codeline lineno="3180" refid="de/df8/a02073_1a90bc60d68216a101341bba3e58c048d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/df8/a02073_1a90bc60d68216a101341bba3e58c048d6" kindref="member">CIccMpeXmlEmissionCLUT::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/>std::string<sp/>reserved;</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"></highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;EmissionCLutElement&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"></highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved)<sp/>{</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved);</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/><sp/>buf;</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"></highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;<sp/>Flags=\&quot;%d\&quot;<sp/>StorageType=\&quot;%d\&quot;&gt;\n&quot;</highlight><highlight class="normal">,<sp/>NumInputChannels(),<sp/>NumOutputChannels(),<sp/>m_flags,<sp/>m_nStorageType);</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"></highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;Wavelengths<sp/>start=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>end=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>steps=\&quot;%d\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_Range.start),<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_Range.end),<sp/>m_Range.steps);</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"></highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"></highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pWhite)<sp/>{</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;WhiteData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"></highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_Range.steps;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>m_pWhite[i]);</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"></highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/WhiteData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1ad5170248b277a4a29ceda7150dfe054c" kindref="member">icCLUTDataToXml</ref>(xml,<sp/>m_pCLUT,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>,<sp/>blanks,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"></highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/EmissionCLutElement&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"></highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"></highlight></codeline>
<codeline lineno="3221" refid="de/df8/a02073_1aa5d45fb5b70d1e4895c876400c2ea344" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/df8/a02073_1aa5d45fb5b70d1e4895c876400c2ea344" kindref="member">CIccMpeXmlEmissionCLUT::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="3222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/>m_nStorageType<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;StorageType&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"></highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/>m_nInputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;InputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/>m_nOutputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;OutputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/>m_flags<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Flags&quot;</highlight><highlight class="normal">,<sp/>0));</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"></highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_nInputChannels<sp/>||<sp/>!m_nOutputChannels)<sp/>{</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>InputChannels<sp/>or<sp/>OutputChannels<sp/>In<sp/>CLutElement\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"></highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pData;</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"></highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/>pData<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;Wavelengths&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pData)<sp/>{</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>dStart<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pData,<sp/></highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>dEnd<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pData,<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nSteps<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pData,<sp/></highlight><highlight class="stringliteral">&quot;steps&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"></highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dStart<sp/>&gt;=<sp/>dEnd<sp/>||!nSteps)<sp/>{</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Spectral<sp/>Range\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Range.start<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>(dStart);</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Range.end<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>(dEnd);</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Range.steps<sp/>=<sp/>nSteps;</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>Spectral<sp/>Range\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"></highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pWhite)</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/>free(m_pWhite);</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"></highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/>m_pWhite<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*)malloc(m_Range.steps*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>));</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pWhite)<sp/>{</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;White<sp/>buffer<sp/>memory<sp/>error\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/>pData<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;WhiteData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pData)<sp/>{</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"></highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">CIccFloatArray::ParseArray</ref>(m_pWhite,<sp/>m_Range.steps,<sp/>pData-&gt;children))</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>White<sp/>Data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"></highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pCLUT)<sp/>{</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_pCLUT;</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pCLUT<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"></highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pApplyCLUT)<sp/>{</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_pApplyCLUT;</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pApplyCLUT<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"></highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><ref refid="d8/d02/a01149" kindref="compound">CIccCLUT</ref><sp/>*pCLut<sp/>=<sp/><ref refid="dd/dd7/a00260_1a7c5a7e91d27be931c8067c38c7f17ea6" kindref="member">icCLutFromXml</ref>(pNode,<sp/>m_nInputChannels,<sp/>m_Range.steps,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>,<sp/>parseStr);</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCLut)<sp/>{</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pCLUT<sp/>=<sp/>pCLut;</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"></highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"></highlight></codeline>
<codeline lineno="3293" refid="db/dac/a02077_1a65a4dd5664e7e4b7e72db2cb6613c2d3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/dac/a02077_1a65a4dd5664e7e4b7e72db2cb6613c2d3" kindref="member">CIccMpeXmlReflectanceCLUT::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/>std::string<sp/>reserved;</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"></highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;ReflectanceCLutElem&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"></highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved)<sp/>{</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved);</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/><sp/>buf;</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"></highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;<sp/>Flags=\&quot;%d\&quot;&gt;\n&quot;</highlight><highlight class="normal">,<sp/>NumInputChannels(),<sp/>NumOutputChannels(),<sp/>m_flags);</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"></highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;Wavelengths<sp/>start=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>end=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>steps=\&quot;%d\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_Range.start),<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_Range.end),<sp/>m_Range.steps);</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"></highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"></highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pWhite)<sp/>{</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;WhiteData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"></highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_Range.steps;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>m_pWhite[i]);</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"></highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/WhiteData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"></highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1ad5170248b277a4a29ceda7150dfe054c" kindref="member">icCLUTDataToXml</ref>(xml,<sp/>m_pCLUT,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>,<sp/>blanks,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"></highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/ReflectanceCLutElem&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"></highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"></highlight></codeline>
<codeline lineno="3334" refid="db/dac/a02077_1a96cc9696018abfed330d18170568536b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/dac/a02077_1a96cc9696018abfed330d18170568536b" kindref="member">CIccMpeXmlReflectanceCLUT::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="3335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/>m_nStorageType<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;StorageType&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"></highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/>m_nInputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;InputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/>m_nOutputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;OutputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/>m_flags<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Flags&quot;</highlight><highlight class="normal">,<sp/>0));</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"></highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_nInputChannels<sp/>||<sp/>!m_nOutputChannels)<sp/>{</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>InputChannels<sp/>or<sp/>OutputChannels<sp/>In<sp/>CLutElement\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"></highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pData;</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"></highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/>pData<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;Wavelengths&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pData)<sp/>{</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>dStart<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pData,<sp/></highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>dEnd<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pData,<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nSteps<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pData,<sp/></highlight><highlight class="stringliteral">&quot;steps&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"></highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dStart<sp/>&gt;=<sp/>dEnd<sp/>||!nSteps)<sp/>{</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Spectral<sp/>Range\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Range.start<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>(dStart);</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Range.end<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>(dEnd);</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Range.steps<sp/>=<sp/>nSteps;</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>Spectral<sp/>Range\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"></highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pWhite)</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/>free(m_pWhite);</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/>m_pWhite<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*)malloc(m_Range.steps*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>));</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pWhite)<sp/>{</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;White<sp/>buffer<sp/>memory<sp/>error\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"></highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/>pData<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;WhiteData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pData)<sp/>{</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"></highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">CIccFloatArray::ParseArray</ref>(m_pWhite,<sp/>m_Range.steps,<sp/>pData-&gt;children))</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>WhiteData&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"></highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pCLUT)<sp/>{</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_pCLUT;</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pCLUT<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"></highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pApplyCLUT)<sp/>{</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_pApplyCLUT;</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pApplyCLUT<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"></highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><ref refid="d8/d02/a01149" kindref="compound">CIccCLUT</ref><sp/>*pCLut<sp/>=<sp/><ref refid="dd/dd7/a00260_1a7c5a7e91d27be931c8067c38c7f17ea6" kindref="member">icCLutFromXml</ref>(pNode,<sp/>m_nInputChannels,<sp/>m_Range.steps,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>,<sp/>parseStr);</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCLut)<sp/>{</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pCLUT<sp/>=<sp/>pCLut;</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"></highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"></highlight></codeline>
<codeline lineno="3406" refid="d2/d50/a02081_1a7a0dcf4d4c49e598d0710545f601cbfd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d50/a02081_1a7a0dcf4d4c49e598d0710545f601cbfd" kindref="member">CIccMpeXmlEmissionObserver::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="3407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nInputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;InputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nOutputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;OutputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/>m_flags<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Flags&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"></highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nInputChannels<sp/>||<sp/>!nOutputChannels)<sp/>{</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>InputChannels<sp/>or<sp/>OutputChannels<sp/>In<sp/>EmissionObserverElement\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"></highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pData;</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"></highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/>pData<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;Wavelengths&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pData)<sp/>{</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>dStart<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pData,<sp/></highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>dEnd<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pData,<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nSteps<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pData,<sp/></highlight><highlight class="stringliteral">&quot;steps&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"></highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dStart<sp/>&gt;=<sp/>dEnd<sp/>||<sp/>nSteps<sp/>!=<sp/>nInputChannels)<sp/>{</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Spectral<sp/>Range\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Range.start<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>(dStart);</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Range.end<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>(dEnd);</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Range.steps<sp/>=<sp/>nSteps;</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"></highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/>SetSize(nInputChannels,<sp/>nOutputChannels,<sp/>m_Range);</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pWhite)<sp/>{</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>SetSize\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"></highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/>pData<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;WhiteData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pData)<sp/>{</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"></highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">CIccFloatArray::ParseArray</ref>(m_pWhite,<sp/>m_Range.steps,<sp/>pData-&gt;children))</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>White<sp/>Data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"></highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"></highlight></codeline>
<codeline lineno="3453" refid="d2/d50/a02081_1a97421b83857bdcd9162531eca05446fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d50/a02081_1a97421b83857bdcd9162531eca05446fe" kindref="member">CIccMpeXmlEmissionObserver::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[128];</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;EmissionObserverElement<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;<sp/>Flags=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>NumInputChannels(),<sp/>NumOutputChannels(),<sp/>m_flags);</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"></highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved)<sp/>{</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved);</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"></highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;Wavelengths<sp/>start=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>end=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>steps=\&quot;%d\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_Range.start),<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_Range.end),<sp/>m_Range.steps);</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"></highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"></highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pWhite)<sp/>{</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;WhiteData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"></highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_Range.steps;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>m_pWhite[i]);</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"></highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/WhiteData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"></highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/EmissionObserverElement&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"></highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"></highlight></codeline>
<codeline lineno="3488" refid="d2/dde/a02085_1aea6bb4f288917a8087c52ad06ddb486a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/dde/a02085_1aea6bb4f288917a8087c52ad06ddb486a" kindref="member">CIccMpeXmlReflectanceObserver::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="3489"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nInputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;InputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nOutputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;OutputChannels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/>m_flags<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Flags&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"></highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nInputChannels<sp/>||<sp/>!nOutputChannels)<sp/>{</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>InputChannels<sp/>or<sp/>OutputChannels<sp/>In<sp/>ReflectanceObserverElement\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"></highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pData;</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"></highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/>pData<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;Wavelengths&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pData)<sp/>{</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>dStart<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pData,<sp/></highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>dEnd<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pData,<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nSteps<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pData,<sp/></highlight><highlight class="stringliteral">&quot;steps&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"></highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dStart<sp/>&gt;=<sp/>dEnd<sp/>||<sp/>nSteps<sp/>!=<sp/>nInputChannels)<sp/>{</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Spectral<sp/>Range\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Range.start<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>(dStart);</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Range.end<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>(dEnd);</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Range.steps<sp/>=<sp/>nSteps;</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"></highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/>SetSize(nInputChannels,<sp/>nOutputChannels,<sp/>m_Range);</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pWhite)<sp/>{</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>SetSize\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"></highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/>pData<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;WhiteData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pData)<sp/>{</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"></highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">CIccFloatArray::ParseArray</ref>(m_pWhite,<sp/>m_Range.steps,<sp/>pData-&gt;children))</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>White<sp/>Data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"></highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"></highlight></codeline>
<codeline lineno="3535" refid="d2/dde/a02085_1ac006b2c376c05c9bafa2edba85663841" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/dde/a02085_1ac006b2c376c05c9bafa2edba85663841" kindref="member">CIccMpeXmlReflectanceObserver::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[128];</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;ReflectanceObserverElement<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;<sp/>Flags=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>NumInputChannels(),<sp/>NumOutputChannels(),<sp/>m_flags);</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"></highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved)<sp/>{</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%u\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved);</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"></highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;Wavelengths<sp/>start=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>end=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>steps=\&quot;%d\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_Range.start),<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_Range.end),<sp/>m_Range.steps);</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"></highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"></highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pWhite)<sp/>{</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;WhiteData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"></highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_Range.steps;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>m_pWhite[i]);</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"></highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/WhiteData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"></highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/ReflectanceObserverElement&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"></highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"></highlight></codeline>
<codeline lineno="3570"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USEREFICCMAXNAMESPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="IccXML/IccLibXML/IccMpeXml.cpp"/>
  </compounddef>
</doxygen>
