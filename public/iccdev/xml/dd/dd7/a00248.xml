<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="dd/dd7/a00248" kind="file" language="C++">
    <compoundname>IccProfileXml.cpp</compoundname>
    <includes local="yes">stdio.h</includes>
    <includes refid="d5/d42/a00269" local="yes">IccProfileXml.h</includes>
    <includes refid="d6/de1/a00233" local="yes">IccTagXml.h</includes>
    <includes refid="d9/d39/a00257" local="yes">IccUtilXml.h</includes>
    <includes refid="d7/d06/a00131" local="yes">IccArrayBasic.h</includes>
    <includes local="no">set</includes>
    <includes local="no">cstring</includes>
    <includes local="no">map</includes>
    <incdepgraph>
      <node id="33">
        <label>IccArrayBasic.h</label>
        <link refid="d7/d06/a00131"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>IccDefs.h</label>
        <link refid="d4/d81/a00110"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>IccIO.h</label>
        <link refid="df/d6a/a00119"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>IccPcc.h</label>
        <link refid="d4/d3a/a00101"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>IccProfLibConf.h</label>
        <link refid="d5/d16/a00029"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>IccProfile.h</label>
        <link refid="d4/d51/a00017"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>IccTag.h</label>
        <link refid="d2/df5/a00137"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>IccTagBasic.h</label>
        <link refid="da/dec/a00080"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>IccTagComposite.h</label>
        <link refid="d1/da8/a00230"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>IccTagDict.h</label>
        <link refid="df/d03/a00062"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>IccTagEmbedIcc.h</label>
        <link refid="dc/d9a/a00218"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>IccTagFactory.h</label>
        <link refid="d8/d41/a00038"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>IccTagLut.h</label>
        <link refid="da/d24/a00068"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>IccTagMPE.h</label>
        <link refid="d7/d25/a00182"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>IccTagProfSeqId.h</label>
        <link refid="d5/df1/a00206"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>IccUtil.h</label>
        <link refid="d7/dce/a00143"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>icProfileHeader.h</label>
        <link refid="d7/d46/a00002"/>
      </node>
      <node id="1">
        <label>IccXML/IccLibXML/IccProfileXml.cpp</label>
        <link refid="dd/dd7/a00248"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>IccProfileXml.h</label>
        <link refid="d5/d42/a00269"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>IccTagXml.h</label>
        <link refid="d6/de1/a00233"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>IccUtilXml.h</label>
        <link refid="d9/d39/a00257"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>IccXmlConfig.h</label>
        <link refid="d7/d03/a00254"/>
      </node>
      <node id="36">
        <label>cstring</label>
      </node>
      <node id="13">
        <label>libxml/parser.h</label>
      </node>
      <node id="15">
        <label>libxml/relaxng.h</label>
      </node>
      <node id="14">
        <label>libxml/tree.h</label>
      </node>
      <node id="31">
        <label>limits</label>
      </node>
      <node id="11">
        <label>list</label>
      </node>
      <node id="34">
        <label>map</label>
      </node>
      <node id="23">
        <label>memory</label>
      </node>
      <node id="35">
        <label>set</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="8">
        <label>stdint.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="12">
        <label>string</label>
      </node>
      <node id="32">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="dd/dd7/a00248_1a95bb65a2b3dfffdf39ecf2db53c1d82b" prot="public" static="no">
        <type>std::map&lt; <ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref>, <ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref> &gt;</type>
        <definition>typedef std::map&lt;icUInt32Number, icTagSignature&gt; IccOffsetTagSigMap</definition>
        <argsstring></argsstring>
        <name>IccOffsetTagSigMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccProfileXml.cpp" line="72" column="19" bodyfile="IccXML/IccLibXML/IccProfileXml.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="dd/dd7/a00248_1a2e7420bb01ebc6df0a70195a6255adbb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>static unsigned char parseVersion</definition>
        <argsstring>(const char *szVer)</argsstring>
        <name>parseVersion</name>
        <param>
          <type>const char *</type>
          <declname>szVer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccProfileXml.cpp" line="311" column="22" bodyfile="IccXML/IccLibXML/IccProfileXml.cpp" bodystart="311" bodyend="318"/>
        <referencedby refid="d6/d27/a01781_1ac2e86ed8d2e31113e5ef612ee29ed712" compoundref="dd/dd7/a00248" startline="333" endline="555">CIccProfileXml::ParseBasic</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>File: <ref refid="dd/dd7/a00248" kindref="compound">IccProfileXml.cpp</ref></para>
<para>Contains: Implementation Icc Profile XML format conversions</para>
<para>Version: V1</para>
<para>Copyright: (c) see ICC Software License </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>ICC<sp/>Software<sp/>License,<sp/>Version<sp/>0.2</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2003-2012<sp/>The<sp/>International<sp/>Color<sp/>Consortium.<sp/>All<sp/>rights<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>3.<sp/>In<sp/>the<sp/>absence<sp/>of<sp/>prior<sp/>written<sp/>permission,<sp/>the<sp/>names<sp/>&quot;ICC&quot;<sp/>and<sp/>&quot;The</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>International<sp/>Color<sp/>Consortium&quot;<sp/>must<sp/>not<sp/>be<sp/>used<sp/>to<sp/>imply<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>ICC<sp/>organization<sp/>endorses<sp/>or<sp/>promotes<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>INTERNATIONAL<sp/>COLOR<sp/>CONSORTIUM<sp/>OR</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>ITS<sp/>CONTRIBUTING<sp/>MEMBERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>consists<sp/>of<sp/>voluntary<sp/>contributions<sp/>made<sp/>by<sp/>many</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>individuals<sp/>on<sp/>behalf<sp/>of<sp/>the<sp/>The<sp/>International<sp/>Color<sp/>Consortium.<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>Membership<sp/>in<sp/>the<sp/>ICC<sp/>is<sp/>encouraged<sp/>when<sp/>this<sp/>software<sp/>is<sp/>used<sp/>for</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>commercial<sp/>purposes.<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>For<sp/>more<sp/>information<sp/>on<sp/>The<sp/>International<sp/>Color<sp/>Consortium,<sp/>please</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>see<sp/>&lt;http://www.color.org/&gt;.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d5/d42/a00269" kindref="compound">IccProfileXml.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/de1/a00233" kindref="compound">IccTagXml.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/d39/a00257" kindref="compound">IccUtilXml.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/d06/a00131" kindref="compound">IccArrayBasic.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>C<sp/>strings<sp/>strcpy,<sp/>memcpy<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="dd/dd7/a00248_1a95bb65a2b3dfffdf39ecf2db53c1d82b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/>std::map&lt;icUInt32Number,<sp/>icTagSignature&gt;<sp/><ref refid="dd/dd7/a00248_1a95bb65a2b3dfffdf39ecf2db53c1d82b" kindref="member">IccOffsetTagSigMap</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="d6/d27/a01781_1ae2c077f1bd73ef3f4f1ff91d872957e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d27/a01781_1ae2c077f1bd73ef3f4f1ff91d872957e4" kindref="member">CIccProfileXml::ToXml</ref>(std::string<sp/>&amp;xml)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="dc/d2f/a00425" kindref="compound">CIccInfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>xml<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;?xml<sp/>version=\&quot;1.0\&quot;<sp/>encoding=\&quot;UTF-8\&quot;?&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d6/d27/a01781_1a3fde5384cf19ae259cb72c3863f936b4" kindref="member">ToXmlWithBlanks</ref>(xml,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="d6/d27/a01781_1a3fde5384cf19ae259cb72c3863f936b4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d27/a01781_1a3fde5384cf19ae259cb72c3863f936b4" kindref="member">CIccProfileXml::ToXmlWithBlanks</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="dc/d2f/a00425" kindref="compound">CIccInfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fix[256];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nonzero;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;IccProfile&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;Header&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;PreferredCMMType&gt;%s&lt;/PreferredCMMType&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1afba0058b0369309aa83134b2437ce717" kindref="member">icGetColorSigStr</ref>(buf,<sp/>m_Header.cmmId)));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;ProfileVersion&gt;%s&lt;/ProfileVersion&gt;\n&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="dc/d2f/a00425_1a0efe3504b8790f409f6c7423a92efb86" kindref="member">GetVersionName</ref>(m_Header.version));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Header.version<sp/>&amp;<sp/>0x0000ffff)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;ProfileSubClassVersion&gt;%s&lt;/ProfileSubClassVersion&gt;\n&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="dc/d2f/a00425_1adf19390ac8376ef3f5b381238ea41861" kindref="member">GetSubClassVersionName</ref>(m_Header.version));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;ProfileDeviceClass&gt;%s&lt;/ProfileDeviceClass&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>m_Header.deviceClass)));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Header.deviceSubClass)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;ProfileDeviceSubClass&gt;%s&lt;/ProfileDeviceSubClass&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>m_Header.deviceSubClass)));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;DataColourSpace&gt;%s&lt;/DataColourSpace&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1afba0058b0369309aa83134b2437ce717" kindref="member">icGetColorSigStr</ref>(buf,<sp/>m_Header.colorSpace)));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;PCS&gt;%s&lt;/PCS&gt;\n&quot;</highlight><highlight class="normal">,<sp/><sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1afba0058b0369309aa83134b2437ce717" kindref="member">icGetColorSigStr</ref>(buf,<sp/>m_Header.pcs)));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;CreationDateTime&gt;%d-%02d-%02dT%02d:%02d:%02d&lt;/CreationDateTime&gt;\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.date.year,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.date.month,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.date.day,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.date.hours,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.date.minutes,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.date.seconds);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(m_Header.magic<sp/>!=<sp/>0){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>sprintf(line,<sp/>&quot;<sp/><sp/><sp/><sp/>&lt;Signature&gt;%s&lt;/Signature&gt;\n&quot;,<sp/>icFixXml(fix,<sp/>icGetSigStr(buf,<sp/>m_Header.magic)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Header.platform<sp/>!=<sp/><ref refid="d7/d46/a00002_1a890a7c80622edc67f54b7b55238f15c1a38db3a37d46bde64c3d7e11e517cb11d" kindref="member">icSigUnknownPlatform</ref>){</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;PrimaryPlatform&gt;%s&lt;/PrimaryPlatform&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>m_Header.platform)));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>xml+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>xml+=<sp/><ref refid="d9/d39/a00257_1ac72d9ecf26774be9858d24b2f98435b9" kindref="member">icGetHeaderFlagsName</ref>(m_Header.flags,<sp/>m_Header.mcs!=0);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Header.manufacturer<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;DeviceManufacturer&gt;%s&lt;/DeviceManufacturer&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>m_Header.manufacturer)));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Header.model<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;DeviceModel&gt;%s&lt;/DeviceModel&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>m_Header.model)));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>xml+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/><ref refid="d9/d39/a00257_1a29395cadeb827a6be39833c934c84074" kindref="member">icGetDeviceAttrName</ref>(m_Header.attributes);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;RenderingIntent&gt;%s&lt;/RenderingIntent&gt;\n&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="dc/d2f/a00425_1af113cdc02ca5a23735be71cbb05e6727" kindref="member">GetRenderingIntentName</ref>((<ref refid="d7/d46/a00002_1ad596b62f264ef4846d435b494c8d2a77" kindref="member">icRenderingIntent</ref>)m_Header.renderingIntent,<sp/>m_Header.version&gt;=<ref refid="d7/d46/a00002_1a802c8f93248af9679280a8c10705807c" kindref="member">icVersionNumberV5</ref>));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;PCSIlluminant&gt;\n%s<sp/><sp/><sp/><sp/><sp/><sp/>&lt;XYZNumber<sp/>X=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Y=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Z=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;/&gt;\n%s<sp/><sp/><sp/><sp/>&lt;/PCSIlluminant&gt;\n&quot;</highlight><highlight class="normal">,<sp/>blanks.c_str(),</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="d7/dce/a00143_1a52fc751ce015924f9655f8288813a02c" kindref="member">icFtoD</ref>(m_Header.illuminant.X),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="d7/dce/a00143_1a52fc751ce015924f9655f8288813a02c" kindref="member">icFtoD</ref>(m_Header.illuminant.Y),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="d7/dce/a00143_1a52fc751ce015924f9655f8288813a02c" kindref="member">icFtoD</ref>(m_Header.illuminant.Z),</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blanks.c_str());</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;ProfileCreator&gt;%s&lt;/ProfileCreator&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>m_Header.creator)));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Header.profileID.ID32[0]<sp/>||<sp/>m_Header.profileID.ID32[1]<sp/>||<sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.profileID.ID32[2]<sp/>||<sp/>m_Header.profileID.ID32[3])<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n=0;<sp/>n&lt;16;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf<sp/>+<sp/>n*2,<sp/></highlight><highlight class="stringliteral">&quot;%02X&quot;</highlight><highlight class="normal">,<sp/>m_Header.profileID.ID8[n]);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>buf[n*2]=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;ProfileID&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&lt;/ProfileID&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>nonzero<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Header.spectralPCS)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;SpectralPCS&gt;%s&lt;/SpectralPCS&gt;\n&quot;</highlight><highlight class="normal">,<sp/><sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1afba0058b0369309aa83134b2437ce717" kindref="member">icGetColorSigStr</ref>(buf,<sp/>m_Header.spectralPCS)));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Header.spectralRange.steps)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;SpectralRange&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&lt;Wavelengths<sp/>start=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>end=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>steps=\&quot;%d\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_Header.spectralRange.start),<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_Header.spectralRange.end),<sp/>m_Header.spectralRange.steps);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;/SpectralRange&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Header.biSpectralRange.steps)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;BiSpectralRange&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&lt;Wavelengths<sp/>start=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>end=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>steps=\&quot;%d\&quot;/&gt;\n)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_Header.biSpectralRange.start),<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_Header.biSpectralRange.end),<sp/>m_Header.biSpectralRange.steps);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;/BiSpectralRange&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Header.mcs)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;MCS&gt;%s&lt;/MCS&gt;\n&quot;</highlight><highlight class="normal">,<sp/><sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1afba0058b0369309aa83134b2437ce717" kindref="member">icGetColorSigStr</ref>(buf,<sp/>m_Header.mcs)));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n=0;<sp/>n&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_Header.reserved);<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Header.reserved[n])</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nonzero<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf<sp/>+<sp/>n*2,<sp/></highlight><highlight class="stringliteral">&quot;%02X&quot;</highlight><highlight class="normal">,<sp/>m_Header.reserved[n]);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>buf[n*2]=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nonzero)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;Reserved&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&lt;/Reserved&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/Header&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;Tags&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>TagEntryList::iterator<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>std::set&lt;icTagSignature&gt;<sp/>sigSet;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="dc/d2f/a00425" kindref="compound">CIccInfo</ref><sp/>Fmt;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="dd/dd7/a00248_1a95bb65a2b3dfffdf39ecf2db53c1d82b" kindref="member">IccOffsetTagSigMap</ref><sp/>offsetTags;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=m_Tags-&gt;begin();<sp/>i!=m_Tags-&gt;end();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigSet.find(i-&gt;TagInfo.sig)==sigSet.end())<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/dfd/a00969" kindref="compound">CIccTag</ref><sp/>*pTag<sp/>=<sp/>FindTag(i-&gt;TagInfo.sig);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTag)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref><sp/>*pTagXml<sp/>=<sp/>(<ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref>*)(pTag-&gt;<ref refid="d7/dfd/a00969_1aa4cc7f1dd04e9b537738d1dfa96a9790" kindref="member">GetExtension</ref>());</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTagXml)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IccOffsetTagSigMap::iterator<sp/>prevTag<sp/>=<sp/>offsetTags.find(i-&gt;TagInfo.offset);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*tagName<sp/>=<sp/>Fmt.<ref refid="dc/d2f/a00425_1a457cbdc77f3728b5b93b939090e7dc67" kindref="member">GetTagSigName</ref>(i-&gt;TagInfo.sig);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prevTag<sp/>==<sp/>offsetTags.end())<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*<sp/>tagSig<sp/>=<sp/><ref refid="d9/d39/a00257_1a9df441a57e3659e7ae404779feaea9a3" kindref="member">icGetTagSigTypeName</ref>(pTag-&gt;<ref refid="d7/dfd/a00969_1a0d6f4b6f857134bd87bfb0cd54025208" kindref="member">GetType</ref>());</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tagName<sp/>&amp;&amp;<sp/>strncmp(tagName,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>&quot;</highlight><highlight class="normal">,<sp/>8))<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;%s&gt;<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/>tagName));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;PrivateTag<sp/>TagSignature=\&quot;%s\&quot;&gt;<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>i-&gt;TagInfo.sig)));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tagName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PrivateTag&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PrivateType<sp/>-<sp/>a<sp/>type<sp/>that<sp/>does<sp/>not<sp/>belong<sp/>to<sp/>the<sp/>list<sp/>in<sp/>the<sp/>icc<sp/>specs<sp/>-<sp/>custom<sp/>for<sp/>vendor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(</highlight><highlight class="stringliteral">&quot;PrivateType&quot;</highlight><highlight class="normal">,<sp/>tagSig))</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;PrivateType<sp/>type=\&quot;%s\&quot;&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>pTag-&gt;<ref refid="d7/dfd/a00969_1a0d6f4b6f857134bd87bfb0cd54025208" kindref="member">GetType</ref>())));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;%s&gt;\n&quot;</highlight><highlight class="normal">,<sp/>tagSig);<sp/></highlight><highlight class="comment">//parent<sp/>node<sp/>is<sp/>the<sp/>tag<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>out<sp/>the<sp/>tag<sp/>signature<sp/>(there<sp/>is<sp/>at<sp/>least<sp/>one)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>&lt;TagSignature&gt;%s&lt;/TagSignature&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>i-&gt;TagInfo.sig)));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigSet.insert(i-&gt;TagInfo.sig);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>out<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>tag<sp/>signatures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j++;<sp/>j<sp/>!=<sp/>m_Tags-&gt;end();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;pTag<sp/>==<sp/>i-&gt;pTag<sp/>||<sp/>j-&gt;TagInfo.offset<sp/>==<sp/>i-&gt;TagInfo.offset)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>&lt;TagSignature&gt;%s&lt;/TagSignature&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>j-&gt;TagInfo.sig)));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigSet.insert(j-&gt;TagInfo.sig);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//convert<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>tag<sp/>to<sp/>xml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pTagXml-&gt;<ref refid="de/d3c/a01809_1a759cbaed8a0553bb035b9ff749052309" kindref="member">ToXml</ref>(xml,<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>output<sp/>tag<sp/>with<sp/>type<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>i-&gt;TagInfo.sig));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;/%s&gt;<sp/>&lt;/%s&gt;\n\n&quot;</highlight><highlight class="normal">,<sp/>tagSig,<sp/>tagName);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offsetTags[i-&gt;TagInfo.offset]<sp/>=<sp/>i-&gt;TagInfo.sig;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*prevTagName<sp/>=<sp/>Fmt.<ref refid="dc/d2f/a00425_1a457cbdc77f3728b5b93b939090e7dc67" kindref="member">GetTagSigName</ref>(prevTag-&gt;second);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>nameBuf[200],<sp/>fix2[200];</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!prevTagName<sp/>||<sp/>!strncmp(prevTagName,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>&quot;</highlight><highlight class="normal">,<sp/>8))<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(nameBuf,<sp/></highlight><highlight class="stringliteral">&quot;PrivateTag&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevTagName<sp/>=<sp/>nameBuf;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tagName<sp/>&amp;&amp;<sp/>strncmp(tagName,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>&quot;</highlight><highlight class="normal">,<sp/>8))</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;%s<sp/>SameAs=\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/>tagName),<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix2,<sp/>prevTagName));<sp/></highlight><highlight class="comment">//parent<sp/>node<sp/>is<sp/>the<sp/>tag<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;PrivateTag<sp/>TagSignature=\&quot;%s\&quot;<sp/>SameAs=\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix2,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>i-&gt;TagInfo.sig)),<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/>prevTagName));</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prevTagName<sp/>==<sp/>nameBuf)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>SameAsSignature=\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix2,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>prevTag-&gt;second)));</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/&gt;\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Non<sp/>XML<sp/>tag<sp/>in<sp/>list<sp/>with<sp/>tag<sp/>%s!\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>i-&gt;TagInfo.sig));</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>find<sp/>tag<sp/>with<sp/>tag<sp/>%s!\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>i-&gt;TagInfo.sig));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/Tags&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/IccProfile&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="dd/dd7/a00248_1a2e7420bb01ebc6df0a70195a6255adbb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="dd/dd7/a00248_1a2e7420bb01ebc6df0a70195a6255adbb" kindref="member">parseVersion</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szVer)</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>atoi(szVer);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>rv<sp/>=<sp/>((val<sp/>/<sp/>10)<sp/>%<sp/>10)<sp/>*<sp/>16<sp/>+<sp/>(val<sp/>%<sp/>10);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="d6/d27/a01781_1ac2e86ed8d2e31113e5ef612ee29ed712" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d27/a01781_1ac2e86ed8d2e31113e5ef612ee29ed712" kindref="member">CIccProfileXml::ParseBasic</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="334"><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>std::string<sp/>temp;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>memset(&amp;m_Header,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_Header));<sp/><sp/></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pNode=pNode-&gt;children;<sp/>pNode;<sp/>pNode=pNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type==XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;ProfileVersion&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szVer<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ver;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>verMajor=0,<sp/>verMinor=0,<sp/>verClassMajor=0,<sp/>verClassMinor=0;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>*szVer<sp/>&amp;&amp;<sp/>*szVer<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*szVer<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;<sp/>szVer++)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ver<sp/>+=<sp/>*szVer;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>verMajor<sp/>=<sp/><ref refid="dd/dd7/a00248_1a2e7420bb01ebc6df0a70195a6255adbb" kindref="member">parseVersion</ref>(ver.c_str());</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ver.clear();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*szVer)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szVer++;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*szVer)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>*szVer<sp/>&amp;&amp;<sp/>*szVer<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*szVer<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;<sp/>szVer++)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ver<sp/>+=<sp/>*szVer;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verMinor<sp/>=<sp/><ref refid="dd/dd7/a00248_1a2e7420bb01ebc6df0a70195a6255adbb" kindref="member">parseVersion</ref>(ver.c_str());</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ver.clear();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*szVer)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szVer++;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*szVer)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>*szVer<sp/>&amp;&amp;<sp/>*szVer<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*szVer<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;<sp/>szVer++)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ver<sp/>=<sp/>*szVer;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verClassMajor<sp/>=<sp/><ref refid="dd/dd7/a00248_1a2e7420bb01ebc6df0a70195a6255adbb" kindref="member">parseVersion</ref>(ver.c_str());</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ver.clear();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*szVer)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szVer++;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*szVer)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>*szVer<sp/>&amp;&amp;<sp/>*szVer<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*szVer<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;<sp/>szVer++)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ver<sp/>=<sp/>*szVer;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verClassMinor<sp/>=<sp/><ref refid="dd/dd7/a00248_1a2e7420bb01ebc6df0a70195a6255adbb" kindref="member">parseVersion</ref>(ver.c_str());</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ver.clear();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.version<sp/>=<sp/>(verMajor<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>(verMinor<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(verClassMajor<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>verClassMinor;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;ProfileSubClassVersion&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szVer<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ver;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>verClassMajor<sp/>=<sp/>0,<sp/>verClassMinor<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>*szVer<sp/>&amp;&amp;<sp/>*szVer<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*szVer<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;<sp/>szVer++)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ver<sp/>=<sp/>*szVer;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>verClassMajor<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)atoi(ver.c_str());</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ver.clear();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(szVer)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>*szVer<sp/>&amp;&amp;<sp/>*szVer<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*szVer<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;<sp/>szVer++)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ver<sp/>=<sp/>*szVer;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verClassMinor<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)atoi(ver.c_str());</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.version<sp/>=<sp/>(m_Header.version<sp/>&amp;<sp/>0xffff0000)<sp/>|<sp/>(((verClassMajor<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>verClassMinor)<sp/>&amp;<sp/>0x0000ffff);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;PreferredCMMType&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.cmmId<sp/>=<sp/><ref refid="d9/d39/a00257_1a87a808865a486a3d8e332d0a73806817" kindref="member">icXmlGetChildSigVal</ref>(pNode);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;ProfileDeviceClass&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.deviceClass<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a1cc0ddb4770d5695c83543b62afaa1a0" kindref="member">icProfileClassSignature</ref>)<ref refid="d9/d39/a00257_1a87a808865a486a3d8e332d0a73806817" kindref="member">icXmlGetChildSigVal</ref>(pNode);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;ProfileDeviceSubClass&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.deviceSubClass<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a67fa1b773fad35303680761ee5ef9313" kindref="member">icSignature</ref>)<ref refid="d9/d39/a00257_1a87a808865a486a3d8e332d0a73806817" kindref="member">icXmlGetChildSigVal</ref>(pNode);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;DataColourSpace&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.colorSpace<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a61e8bac86860cdefe93533feac126917" kindref="member">icColorSpaceSignature</ref>)<ref refid="d9/d39/a00257_1a87a808865a486a3d8e332d0a73806817" kindref="member">icXmlGetChildSigVal</ref>(pNode);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;PCS&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.pcs<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a61e8bac86860cdefe93533feac126917" kindref="member">icColorSpaceSignature</ref>)<ref refid="d9/d39/a00257_1a87a808865a486a3d8e332d0a73806817" kindref="member">icXmlGetChildSigVal</ref>(pNode);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;CreationDateTime&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode<sp/>&amp;&amp;<sp/>pNode-&gt;children<sp/>&amp;&amp;<sp/>pNode-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*datetime<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.date<sp/>=<sp/><ref refid="d9/d39/a00257_1a522c038996d47b04a3b404b85133e78c" kindref="member">icGetDateTimeValue</ref>(datetime);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;m_Header.date,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_Header.date));</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;PrimaryPlatform&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.platform<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a890a7c80622edc67f54b7b55238f15c1" kindref="member">icPlatformSignature</ref>)<ref refid="d9/d39/a00257_1a87a808865a486a3d8e332d0a73806817" kindref="member">icXmlGetChildSigVal</ref>(pNode);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;ProfileFlags&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.flags<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;EmbeddedInFile&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>&amp;&amp;<sp/>!strcmp(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr),<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.flags<sp/>|=<sp/><ref refid="d7/d46/a00002_1a6b9d49de8dfb75ab2e520ef9215e84f4" kindref="member">icEmbeddedProfileTrue</ref>;<sp/></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;UseWithEmbeddedDataOnly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>&amp;&amp;<sp/>!strcmp(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr),<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.flags<sp/>|=<sp/><ref refid="d7/d46/a00002_1a8c631cc38423dcdb5f9a1fa7f6323819" kindref="member">icUseWithEmbeddedDataOnly</ref>;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;ExtendedRangePCS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>&amp;&amp;<sp/>!strcmp(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr),<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.flags<sp/>|=<sp/><ref refid="d7/d46/a00002_1acec04d771a806ba93f4ab275fe1f9e49" kindref="member">icExtendedRangePCS</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;MCSNeedsSubset&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>&amp;&amp;<sp/>!strcmp(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr),<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.flags<sp/>|=<sp/><ref refid="d7/d46/a00002_1ada4a40a4c4b6cd075f42e5364e90dcf7" kindref="member">icMCSNeedsSubsetTrue</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;VendorFlags&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>vendor;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr),<sp/></highlight><highlight class="stringliteral">&quot;%x&quot;</highlight><highlight class="normal">,<sp/>&amp;vendor);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.flags<sp/>|=<sp/>vendor;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;DeviceManufacturer&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.manufacturer<sp/>=<sp/><ref refid="d9/d39/a00257_1a87a808865a486a3d8e332d0a73806817" kindref="member">icXmlGetChildSigVal</ref>(pNode);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;DeviceModel&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.model<sp/>=<sp/><ref refid="d9/d39/a00257_1a87a808865a486a3d8e332d0a73806817" kindref="member">icXmlGetChildSigVal</ref>(pNode);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;DeviceAttributes&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.attributes<sp/>=<sp/><ref refid="d9/d39/a00257_1ab515209dc98599451e8def16c2cdee32" kindref="member">icGetDeviceAttrValue</ref>(pNode);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;RenderingIntent&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content,<sp/></highlight><highlight class="stringliteral">&quot;Perceptual&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.renderingIntent<sp/>=<sp/><ref refid="d7/d46/a00002_1ad596b62f264ef4846d435b494c8d2a77a300c7e86384819a2318614c61c20a112" kindref="member">icPerceptual</ref>;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content,<sp/></highlight><highlight class="stringliteral">&quot;Relative<sp/>Colorimetric&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content,<sp/></highlight><highlight class="stringliteral">&quot;Relative&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.renderingIntent<sp/>=<sp/><ref refid="d7/d46/a00002_1ad596b62f264ef4846d435b494c8d2a77a64d6354071e8f3d7b461202675e755cb" kindref="member">icRelativeColorimetric</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content,<sp/></highlight><highlight class="stringliteral">&quot;Saturation&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.renderingIntent<sp/>=<sp/><ref refid="d7/d46/a00002_1ad596b62f264ef4846d435b494c8d2a77ae73fda5aaf64986600eb12f2f41e85f3" kindref="member">icSaturation</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content,<sp/></highlight><highlight class="stringliteral">&quot;Absolute<sp/>Colorimetric&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content,<sp/></highlight><highlight class="stringliteral">&quot;Absolute&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.renderingIntent<sp/>=<sp/><ref refid="d7/d46/a00002_1ad596b62f264ef4846d435b494c8d2a77ae6136c556a175effd2e35cb1db5ff944" kindref="member">icAbsoluteColorimetric</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;PCSIlluminant&quot;</highlight><highlight class="normal">))<sp/>{<sp/></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNode<sp/>*xyzNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;XYZNumber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*x<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(xyzNode,<sp/></highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*y<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(xyzNode,<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*z<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(xyzNode,<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&amp;&amp;<sp/>y<sp/>&amp;&amp;<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.illuminant.X<sp/>=<sp/><ref refid="d7/dce/a00143_1a4a143eb09493d53cb1f7252819615498" kindref="member">icDtoF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(x)));</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.illuminant.Y<sp/>=<sp/><ref refid="d7/dce/a00143_1a4a143eb09493d53cb1f7252819615498" kindref="member">icDtoF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(y)));</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.illuminant.Z<sp/>=<sp/><ref refid="d7/dce/a00143_1a4a143eb09493d53cb1f7252819615498" kindref="member">icDtoF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(z)));</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;ProfileCreator&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.creator<sp/>=<sp/><ref refid="d9/d39/a00257_1a87a808865a486a3d8e332d0a73806817" kindref="member">icXmlGetChildSigVal</ref>(pNode);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;ProfileID&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;children<sp/>&amp;&amp;<sp/>pNode-&gt;children-&gt;content)<sp/></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1a7e2e6f47df3c6baacbda01035dfbbbee" kindref="member">icXmlGetHexData</ref>(&amp;m_Header.profileID.ID8,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_Header.profileID.ID8));</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;m_Header.profileID.ID8,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_Header.profileID.ID8));</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;SpectralPCS&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.spectralPCS<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a852cf5d81aa3d65ff6a08c3eaafcd0dc" kindref="member">icSpectralColorSignature</ref>)<ref refid="d9/d39/a00257_1a87a808865a486a3d8e332d0a73806817" kindref="member">icXmlGetChildSigVal</ref>(pNode);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;SpectralRange&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlNode<sp/>*xyzNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;Wavelengths&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*start<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(xyzNode,<sp/></highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*end<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(xyzNode,<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*steps<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(xyzNode,<sp/></highlight><highlight class="stringliteral">&quot;steps&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start<sp/>&amp;&amp;<sp/>end<sp/>&amp;&amp;<sp/>steps)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.spectralRange.start<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(start)));</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.spectralRange.end<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(end)));</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.spectralRange.steps<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(steps));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;BiSpectralRange&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlNode<sp/>*xyzNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;Wavelengths&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*start<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(xyzNode,<sp/></highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*end<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(xyzNode,<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*steps<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(xyzNode,<sp/></highlight><highlight class="stringliteral">&quot;steps&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start<sp/>&amp;&amp;<sp/>end<sp/>&amp;&amp;<sp/>steps)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.biSpectralRange.start<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(start)));</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.biSpectralRange.end<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(end)));</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.biSpectralRange.steps<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(steps));</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;MCS&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.mcs<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a56192dd1dfeaaad8fc33cdc6e3136ee7" kindref="member">icMaterialColorSignature</ref>)<ref refid="d9/d39/a00257_1a87a808865a486a3d8e332d0a73806817" kindref="member">icXmlGetChildSigVal</ref>(pNode);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;ProfileDeviceSubClass&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.deviceSubClass<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a1cc0ddb4770d5695c83543b62afaa1a0" kindref="member">icProfileClassSignature</ref>)<ref refid="d9/d39/a00257_1a87a808865a486a3d8e332d0a73806817" kindref="member">icXmlGetChildSigVal</ref>(pNode);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;Reserved&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;children<sp/>&amp;&amp;<sp/>pNode-&gt;content)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1a7e2e6f47df3c6baacbda01035dfbbbee" kindref="member">icXmlGetHexData</ref>(&amp;m_Header.reserved,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_Header.reserved));</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;m_Header.reserved,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_Header.reserved));</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>Profile<sp/>Header<sp/>attribute:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;name;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;=\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;children<sp/>&amp;&amp;<sp/>pNode-&gt;children-&gt;content)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>m_Header.magic<sp/>=<sp/><ref refid="d7/d46/a00002_1a67be39557f934699d2288756247fba9e" kindref="member">icMagicNumber</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="574" refid="d6/d27/a01781_1abf34239bc20b8c58e1940bd4b132b659" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d27/a01781_1abf34239bc20b8c58e1940bd4b132b659" kindref="member">CIccProfileXml::ParseTag</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>xmlAttr<sp/>*attr;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>!=<sp/>XML_ELEMENT_NODE)<sp/>{</highlight><highlight class="comment">//<sp/>||<sp/>icXmlStrCmp(pNode-&gt;name,<sp/>&quot;Tag&quot;))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Tag<sp/>Node:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)pNode-&gt;name;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><ref refid="d7/dfd/a00969" kindref="compound">CIccTag</ref><sp/>*pTag<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>std::string<sp/>nodeName<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;name;<sp/></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref><sp/>sigTag<sp/>=<sp/><ref refid="d9/d39/a00257_1adc2f3af8fcb19d532371a3776c95dcdd" kindref="member">icGetTagNameSig</ref>(nodeName.c_str());</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigTag<sp/>!=<sp/><ref refid="d7/d46/a00002_1a8d3f7cc2943b5a6814c516773b037d12" kindref="member">icSigUnknownTag</ref><sp/>||<sp/>nodeName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;PrivateTag&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//Parsing<sp/>of<sp/>XML<sp/>tags<sp/>by<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nodeName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;PrivateTag&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tagSig<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;TagSignature&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tagSig[0])<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigTag<sp/>=<sp/>(<ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref>)<ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>(tagSig);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>TagSignature<sp/>for<sp/>PrivateTag\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sameAs<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;SameAs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sameAs[0])<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref><sp/>sigParentTag<sp/>=<sp/><ref refid="d9/d39/a00257_1adc2f3af8fcb19d532371a3776c95dcdd" kindref="member">icGetTagNameSig</ref>(sameAs);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(sameAs,<sp/></highlight><highlight class="stringliteral">&quot;PrivateTag&quot;</highlight><highlight class="normal">)<sp/>||<sp/>sigParentTag<sp/>==<sp/><ref refid="d7/d46/a00002_1a8d3f7cc2943b5a6814c516773b037d12" kindref="member">icSigUnknownTag</ref>)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sameAsSig<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;SameAsSignature&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sameAsSig[0])<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigParentTag<sp/>=<sp/>(<ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref>)<ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>(sameAsSig);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>SameAsSignature<sp/>for<sp/>PrivateTag\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pTag<sp/>=<sp/>this-&gt;FindTag(sigParentTag);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTag)<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AttachTag(sigTag,<sp/>pTag);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;SameAs<sp/>tag<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>sameAs;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>nodeName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>does<sp/>not<sp/>exist\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//Parse<sp/>the<sp/>type<sp/>node<sp/>as<sp/>the<sp/>first<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlNode<sp/>*pTypeNode;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pTypeNode<sp/>=<sp/>pNode-&gt;children;<sp/>pTypeNode;<sp/>pTypeNode<sp/>=<sp/>pTypeNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTypeNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pTypeNode)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>tag<sp/>type<sp/>node<sp/>defined<sp/>for<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>nodeName;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>tag<sp/>type<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref><sp/>sigType<sp/>=<sp/><ref refid="d9/d39/a00257_1a7e4a8379f29fbaded2a4dd75b6222e55" kindref="member">icGetTypeNameTagSig</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pTypeNode-&gt;name);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigType<sp/>==<sp/><ref refid="d7/d46/a00002_1a0b3709c84d4d18ff166cf355dc6c576f" kindref="member">icSigUnknownType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pTypeNode,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigType<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref>)<ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d2f/a00425" kindref="compound">CIccInfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>tag<sp/>based<sp/>on<sp/>the<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pTag<sp/>=<sp/><ref refid="d7/dfd/a00969_1a2a2efdbfae5e8820c0dc4cdd1af691a8" kindref="member">CIccTag::Create</ref>(sigType);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/dcd/a00965" kindref="compound">IIccExtensionTag</ref><sp/>*pExt;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTag<sp/>&amp;&amp;<sp/>(pExt<sp/>=<sp/>pTag-&gt;<ref refid="d7/dfd/a00969_1aa4cc7f1dd04e9b537738d1dfa96a9790" kindref="member">GetExtension</ref>())<sp/>&amp;&amp;<sp/>!strcmp(pExt-&gt;<ref refid="d3/dcd/a00965_1afc77445123182ddaec413f6353c719be" kindref="member">GetExtClassName</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;CIccTagXml&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref>*<sp/>pXmlTag<sp/>=<sp/>(<ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref>*)pExt;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pXmlTag-&gt;<ref refid="de/d3c/a01809_1ab389ac02038775bf0a198ae68847d8a1" kindref="member">ParseXml</ref>(pTypeNode-&gt;children,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pTypeNode,<sp/></highlight><highlight class="stringliteral">&quot;reserved&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr),<sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/>&amp;pTag-&gt;<ref refid="d7/dfd/a00969_1a0dbc39e419057e941c11cacb8c9e3fb0" kindref="member">m_nReserved</ref>);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AttachTag(sigTag,<sp/>pTag);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[100];</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>Parse<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pTypeNode-&gt;name;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>nodeName;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(str,<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>Tag<sp/>on<sp/>line<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pTypeNode-&gt;line);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>str;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[100];</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>tag<sp/>extension<sp/>for<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pTypeNode-&gt;name;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(str,<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>Tag<sp/>on<sp/>line<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pTypeNode-&gt;line);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>str;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//Legacy<sp/>parsing<sp/>of<sp/>XML<sp/>tags<sp/>by<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>sigTag<sp/>=<sp/>(<ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref>)0;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>tag<sp/>type<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref><sp/>sigType<sp/>=<sp/><ref refid="d9/d39/a00257_1a7e4a8379f29fbaded2a4dd75b6222e55" kindref="member">icGetTypeNameTagSig</ref>(nodeName.c_str());</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigType<sp/>==<sp/><ref refid="d7/d46/a00002_1a0b3709c84d4d18ff166cf355dc6c576f" kindref="member">icSigUnknownType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sigType<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref>)<ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d2f/a00425" kindref="compound">CIccInfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>tag<sp/>based<sp/>on<sp/>the<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>pTag<sp/>=<sp/><ref refid="d7/dfd/a00969_1a2a2efdbfae5e8820c0dc4cdd1af691a8" kindref="member">CIccTag::Create</ref>(sigType);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/dcd/a00965" kindref="compound">IIccExtensionTag</ref><sp/>*pExt;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTag<sp/>&amp;&amp;<sp/>(pExt<sp/>=<sp/>pTag-&gt;<ref refid="d7/dfd/a00969_1aa4cc7f1dd04e9b537738d1dfa96a9790" kindref="member">GetExtension</ref>())<sp/>&amp;&amp;<sp/>!strcmp(pExt-&gt;<ref refid="d3/dcd/a00965_1afc77445123182ddaec413f6353c719be" kindref="member">GetExtClassName</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;CIccTagXml&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref>*<sp/>pXmlTag<sp/>=<sp/>(<ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref>*)pExt;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pXmlTag-&gt;<ref refid="de/d3c/a01809_1ab389ac02038775bf0a198ae68847d8a1" kindref="member">ParseXml</ref>(pNode-&gt;children,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;reserved&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr),<sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/>&amp;pTag-&gt;<ref refid="d7/dfd/a00969_1a0dbc39e419057e941c11cacb8c9e3fb0" kindref="member">m_nReserved</ref>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(xmlNode<sp/>*tagSigNode<sp/>=<sp/>pNode-&gt;children;<sp/>tagSigNode;<sp/>tagSigNode<sp/>=<sp/>tagSigNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tagSigNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;<sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(tagSigNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;TagSignature&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigTag<sp/>=<sp/>(<ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref>)<ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)tagSigNode-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AttachTag(sigTag,<sp/>pTag);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[100];</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>Parse<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>info.<ref refid="dc/d2f/a00425_1aa4d31231b22a56dc869b51eaa2b1f933" kindref="member">GetTagTypeSigName</ref>(sigType);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>nodeName;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(str,<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>Tag<sp/>on<sp/>line<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pNode-&gt;line);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>str;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[100];</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>tag<sp/>extension<sp/>for<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>info.<ref refid="dc/d2f/a00425_1aa4d31231b22a56dc869b51eaa2b1f933" kindref="member">GetTagTypeSigName</ref>(sigType);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>nodeName;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(str,<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>Tag<sp/>on<sp/>line<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pNode-&gt;line);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>str;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(sigTag)<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5a48a680ba3049e0c37a44da9f08e411c7" kindref="member">icSigAToB0Tag</ref>:</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5ab04125e571eb02f134e54fb3b0bcdb45" kindref="member">icSigAToB1Tag</ref>:</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5a58f2209b5887e2dd73b279b5b2c6f4b2" kindref="member">icSigAToB2Tag</ref>:</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5a19b39e0d70b49c0c8864ec3b5ee2f1ba" kindref="member">icSigAToB3Tag</ref>:</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTag-&gt;<ref refid="d7/dfd/a00969_1a5cf5b72ab66ca68a6c8ddfd861741bb8" kindref="member">IsMBBType</ref>())</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="dc/d06/a01153" kindref="compound">CIccMBB</ref>*)pTag)-&gt;SetColorSpaces(m_Header.colorSpace,<sp/>m_Header.pcs);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5a78413df8b7d634ae4e0ec02f006e5bd0" kindref="member">icSigBToA0Tag</ref>:</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5a53147bf01d2c36339096d2f22b9c2869" kindref="member">icSigBToA1Tag</ref>:</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5a0ba36c77684b04845f69da317ef3feb8" kindref="member">icSigBToA2Tag</ref>:</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5ab6a3ba830b4ac279851cb5674c83ce06" kindref="member">icSigBToA3Tag</ref>:</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTag-&gt;<ref refid="d7/dfd/a00969_1a5cf5b72ab66ca68a6c8ddfd861741bb8" kindref="member">IsMBBType</ref>())</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="dc/d06/a01153" kindref="compound">CIccMBB</ref>*)pTag)-&gt;SetColorSpaces(m_Header.pcs,<sp/>m_Header.colorSpace);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5a91088345233e12514ec483327a00dbe8" kindref="member">icSigHToS0Tag</ref>:</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5a85d24fc4ed8a193b8718b540ecfd003d" kindref="member">icSigHToS1Tag</ref>:</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5a46872db563207dce392030175e993f7d" kindref="member">icSigHToS2Tag</ref>:</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5a23a1145e55d8486dcad5566bad1ee9bf" kindref="member">icSigHToS3Tag</ref>:</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTag-&gt;<ref refid="d7/dfd/a00969_1a5cf5b72ab66ca68a6c8ddfd861741bb8" kindref="member">IsMBBType</ref>())</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="dc/d06/a01153" kindref="compound">CIccMBB</ref>*)pTag)-&gt;SetColorSpaces(m_Header.pcs,<sp/>m_Header.pcs);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5ad57d49a829f89f04159908e21ffe9d01" kindref="member">icSigGamutTag</ref>:</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTag-&gt;<ref refid="d7/dfd/a00969_1a5cf5b72ab66ca68a6c8ddfd861741bb8" kindref="member">IsMBBType</ref>())</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="dc/d06/a01153" kindref="compound">CIccMBB</ref>*)pTag)-&gt;SetColorSpaces(m_Header.pcs,<sp/><ref refid="d7/d46/a00002_1af63f30724bd4cfbb6b7e3e2d7b1b602e" kindref="member">icSigGamutData</ref>);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5ac9a9457a436bbfaa9212552f337d2beb" kindref="member">icSigNamedColor2Tag</ref>:</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTag-&gt;<ref refid="d7/dfd/a00969_1a0d6f4b6f857134bd87bfb0cd54025208" kindref="member">GetType</ref>()==<ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417ddeabd3b6889c64ac3ffb16f1c48be950dc8" kindref="member">icSigNamedColor2Type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="d7/d59/a01013" kindref="compound">CIccTagNamedColor2</ref>*)pTag)-&gt;SetColorSpaces(m_Header.pcs,<sp/>m_Header.colorSpace);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTag-&gt;<ref refid="d7/dfd/a00969_1acc454c2f425b8619187fc75f682d7aa4" kindref="member">GetTagArrayType</ref>()==<ref refid="d7/d46/a00002_1a97bb6c6d4e1859ba7290162215ac8beba58bd0f3ca3c177aacc2b9fd1cbc0009b" kindref="member">icSigNamedColorArray</ref>)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d05/a00385" kindref="compound">CIccArrayNamedColor</ref><sp/>*pAry<sp/>=<sp/>(<ref refid="d5/d05/a00385" kindref="compound">CIccArrayNamedColor</ref>*)<ref refid="d1/da8/a00230_1ad185e4ba4865dcafcbca5d38bd001274" kindref="member">icGetTagArrayHandler</ref>(pTag);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pAry)<sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pAry-&gt;<ref refid="d5/d05/a00385_1a823d6f29347e6f86de07de8bfad1ba89" kindref="member">SetColorSpaces</ref>(m_Header.pcs,<sp/>m_Header.colorSpace,<sp/></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Header.spectralPCS,<sp/></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;m_Header.spectralRange,<sp/></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;m_Header.biSpectralRange);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="comment">//<sp/>entry<sp/>function<sp/>for<sp/>converting<sp/>xml<sp/>to<sp/>icc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801" refid="d6/d27/a01781_1af4605fcf803152d71090e6c668d8997a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d27/a01781_1af4605fcf803152d71090e6c668d8997a" kindref="member">CIccProfileXml::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="802"><highlight class="normal">{<sp/><sp/></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;IccProfile&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*hdrNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;Header&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hdrNode<sp/>||<sp/>!<ref refid="d6/d27/a01781_1ac2e86ed8d2e31113e5ef612ee29ed712" kindref="member">ParseBasic</ref>(hdrNode,<sp/>parseStr))</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>each<sp/>tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*tagNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;Tags&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tagNode)</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(tagNode<sp/>=<sp/>tagNode-&gt;children;<sp/>tagNode;<sp/>tagNode<sp/>=<sp/>tagNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tagNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d6/d27/a01781_1abf34239bc20b8c58e1940bd4b132b659" kindref="member">ParseTag</ref>(tagNode,<sp/>parseStr))</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="comment">//<sp/>entry<sp/>function<sp/>for<sp/>converting<sp/>icc<sp/>to<sp/>xml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829" refid="d6/d27/a01781_1a03d4294b5fe3a57880b609a5320eb4e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d27/a01781_1a03d4294b5fe3a57880b609a5320eb4e6" kindref="member">CIccProfileXml::LoadXml</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szFilename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szRelaxNGDir,<sp/>std::string<sp/>*parseStr)</highlight></codeline>
<codeline lineno="830"><highlight class="normal">{<sp/><sp/></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>xmlDoc<sp/>*doc<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*root_element<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*parse<sp/>the<sp/>file<sp/>and<sp/>get<sp/>the<sp/>DOM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>doc<sp/>=<sp/>xmlReadFile(szFilename,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doc<sp/>==<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(szRelaxNGDir<sp/>&amp;&amp;<sp/>szRelaxNGDir[0])<sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlRelaxNGParserCtxt*<sp/>rlxParser;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>rlxParser<sp/>=<sp/>xmlRelaxNGNewParserCtxt<sp/>(szRelaxNGDir);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//validate<sp/>the<sp/>xml<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rlxParser){</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlRelaxNG*<sp/>relaxNG<sp/>=<sp/>xmlRelaxNGParse(rlxParser);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relaxNG){</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlRelaxNGValidCtxt*<sp/>validCtxt<sp/>=<sp/>xmlRelaxNGNewValidCtxt(relaxNG);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(validCtxt){</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>xmlRelaxNGValidateDoc(validCtxt,<sp/>doc);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nError:<sp/>%d:<sp/>&apos;%s&apos;<sp/>is<sp/>an<sp/>invalid<sp/>XML<sp/>file.\n&quot;</highlight><highlight class="normal">,<sp/>result,<sp/>szFilename);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>std::string<sp/>my_parseStr;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!parseStr)</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>=<sp/>&amp;my_parseStr;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>*parseStr<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*Get<sp/>the<sp/>root<sp/>element<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/>root_element<sp/>=<sp/>xmlDocGetRootElement(doc);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rv<sp/>=<sp/><ref refid="d6/d27/a01781_1af4605fcf803152d71090e6c668d8997a" kindref="member">ParseXml</ref>(root_element,<sp/>*parseStr);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>xmlFreeDoc(doc);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="882"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="IccXML/IccLibXML/IccProfileXml.cpp"/>
  </compounddef>
</doxygen>
