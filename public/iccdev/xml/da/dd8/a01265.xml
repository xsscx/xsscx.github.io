<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="da/dd8/a01265" kind="class" language="C++" prot="public">
    <compoundname>CIccTagCreator</compoundname>
    <includes refid="d8/d41/a00038" local="no">IccTagFactory.h</includes>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="da/dd8/a01265_1a484247f3619898fd14dd881bc65a4e00" prot="private" static="yes" mutable="no">
        <type><ref refid="d8/d41/a00038_1a8c547cd977dadc1ce34042e3a5662559" kindref="member">CIccTagCreatorPtr</ref></type>
        <definition>std::unique_ptr&lt; CIccTagCreator &gt; CIccTagCreator::theTagCreator</definition>
        <argsstring></argsstring>
        <name>theTagCreator</name>
        <qualifiedname>CIccTagCreator::theTagCreator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccProfLib/IccTagFactory.h" line="395" column="28" bodyfile="IccProfLib/IccTagFactory.h" bodystart="395" bodyend="-1"/>
        <referencedby refid="da/dd8/a01265_1a87d511327db473a3e0aac5420556aa86" compoundref="de/de1/a00065" startline="539" endline="548">GetInstance</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="da/dd8/a01265_1a7b5024c1629f349356872c1b77c134d4" prot="private" static="no" mutable="no">
        <type><ref refid="d8/d41/a00038_1aab5d7cf9543332aea65679bd1e45e749" kindref="member">CIccTagFactoryList</ref></type>
        <definition>CIccTagFactoryList CIccTagCreator::factoryStack</definition>
        <argsstring></argsstring>
        <name>factoryStack</name>
        <qualifiedname>CIccTagCreator::factoryStack</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccProfLib/IccTagFactory.h" line="397" column="22" bodyfile="IccProfLib/IccTagFactory.h" bodystart="397" bodyend="-1"/>
        <referencedby refid="da/dd8/a01265_1aecf691cfac27778f352c60f5099b9293" compoundref="de/de1/a00065" startline="550" endline="561">DoCreateTag</referencedby>
        <referencedby refid="da/dd8/a01265_1a1b75a28f3e8fcf94fff20be585e088dd" compoundref="de/de1/a00065" startline="577" endline="589">DoGetTagNameSig</referencedby>
        <referencedby refid="da/dd8/a01265_1a93a71ef5d2fb8e4771c0e4dd9f7f9226" compoundref="de/de1/a00065" startline="563" endline="575">DoGetTagSigName</referencedby>
        <referencedby refid="da/dd8/a01265_1a2c63e50c60b71504032285510b317f2b" compoundref="de/de1/a00065" startline="606" endline="618">DoGetTagTypeNameSig</referencedby>
        <referencedby refid="da/dd8/a01265_1aa7f3f28125e3295116c2393ed55b3ba8" compoundref="de/de1/a00065" startline="592" endline="604">DoGetTagTypeSigName</referencedby>
        <referencedby refid="da/dd8/a01265_1a5b631ac0f7c685d4a3f5bd8187d7915e" compoundref="de/de1/a00065" startline="625" endline="636">DoPopFactory</referencedby>
        <referencedby refid="da/dd8/a01265_1a222019a8c2cfcc505a31d56ce6f4896e" compoundref="de/de1/a00065" startline="620" endline="623">DoPushFactory</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="da/dd8/a01265_1a6eb8607969fccf2926dc60a2ad71fe2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CIccTagCreator::~CIccTagCreator</definition>
        <argsstring>()</argsstring>
        <name>~CIccTagCreator</name>
        <qualifiedname>CIccTagCreator::~CIccTagCreator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccProfLib/IccTagFactory.h" line="266" column="3" bodyfile="IccProfLib/IccTagFactory.cpp" bodystart="529" bodyend="537"/>
        <references refid="da/dd8/a01265_1a5b631ac0f7c685d4a3f5bd8187d7915e" compoundref="de/de1/a00065" startline="625" endline="636">DoPopFactory</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="da/dd8/a01265_1a220110bcce89b9d96006c30067a7aa12" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/dfd/a00969" kindref="compound">CIccTag</ref> *</type>
        <definition>static CIccTag * CIccTagCreator::CreateTag</definition>
        <argsstring>(icTagTypeSignature tagTypeSig)</argsstring>
        <name>CreateTag</name>
        <qualifiedname>CIccTagCreator::CreateTag</qualifiedname>
        <param>
          <type><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref></type>
          <declname>tagTypeSig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function: CreateTag(tagTypeSig) Create a tag of type tagTypeSig.</para>
<para>Parameter(s): tagTypeSig = signature of the ICC tag type for the tag to be created</para>
<para>Returns a new <ref refid="d7/dfd/a00969" kindref="compound">CIccTag</ref> object of the given signature type. Each factory in the factoryStack is used until a factory supports the signature type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccProfLib/IccTagFactory.h" line="279" column="18" bodyfile="IccProfLib/IccTagFactory.h" bodystart="279" bodyend="280"/>
        <references refid="da/dd8/a01265_1aecf691cfac27778f352c60f5099b9293" compoundref="de/de1/a00065" startline="550" endline="561">DoCreateTag</references>
        <references refid="da/dd8/a01265_1a87d511327db473a3e0aac5420556aa86" compoundref="de/de1/a00065" startline="539" endline="548">GetInstance</references>
        <referencedby refid="d7/dfd/a00969_1a2a2efdbfae5e8820c0dc4cdd1af691a8" compoundref="d9/dd0/a00191" startline="143" endline="146">CIccTag::Create</referencedby>
        <referencedby refid="db/de0/a00465_1aa3fe4ccface825d27a6c49ae022bcdb0" compoundref="d5/dcb/a00170" startline="1213" endline="1316">CIccTagArray::Read</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/dd8/a01265_1a95e4fcd099488e0b460153b9c2237c6d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref></type>
        <definition>static icTagSignature CIccTagCreator::GetTagNameSig</definition>
        <argsstring>(const icChar *szName)</argsstring>
        <name>GetTagNameSig</name>
        <qualifiedname>CIccTagCreator::GetTagNameSig</qualifiedname>
        <param>
          <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
          <declname>szName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function: GetTagNameSig(szTagName) Get signature from tag display name.</para>
<para>Parameter(s): szTagName = name of tag</para>
<para>Returns tag signature of tag if tag name is recognized by the factory, icSigUnknownTag if the tag name is not recognized. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccProfLib/IccTagFactory.h" line="306" column="25" bodyfile="IccProfLib/IccTagFactory.h" bodystart="306" bodyend="309"/>
        <references refid="da/dd8/a01265_1a1b75a28f3e8fcf94fff20be585e088dd" compoundref="de/de1/a00065" startline="577" endline="589">DoGetTagNameSig</references>
        <references refid="da/dd8/a01265_1a87d511327db473a3e0aac5420556aa86" compoundref="de/de1/a00065" startline="539" endline="548">GetInstance</references>
        <referencedby refid="d9/d39/a00257_1adc2f3af8fcb19d532371a3776c95dcdd" compoundref="d5/d35/a00266" startline="1169" endline="1172">icGetTagNameSig</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/dd8/a01265_1a7c59cb6e6fcce1dae966cbad6d95b9fe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
        <definition>static const icChar * CIccTagCreator::GetTagSigName</definition>
        <argsstring>(icTagSignature tagTypeSig)</argsstring>
        <name>GetTagSigName</name>
        <qualifiedname>CIccTagCreator::GetTagSigName</qualifiedname>
        <param>
          <type><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref></type>
          <declname>tagTypeSig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function: GetTagSigName(tagSig) Get display name of tagSig.</para>
<para>Parameter(s): tagSig = signature of the ICC tag to get a name for</para>
<para>Returns ptr to string containing name of tag type if it is recognized by any factory, NULL if all factories do not create tagTypeSig tags. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccProfLib/IccTagFactory.h" line="292" column="23" bodyfile="IccProfLib/IccTagFactory.h" bodystart="292" bodyend="293"/>
        <references refid="da/dd8/a01265_1a93a71ef5d2fb8e4771c0e4dd9f7f9226" compoundref="de/de1/a00065" startline="563" endline="575">DoGetTagSigName</references>
        <references refid="da/dd8/a01265_1a87d511327db473a3e0aac5420556aa86" compoundref="de/de1/a00065" startline="539" endline="548">GetInstance</references>
        <referencedby refid="dc/d2f/a00425_1a457cbdc77f3728b5b93b939090e7dc67" compoundref="d5/db1/a00140" startline="1495" endline="1502">CIccInfo::GetTagSigName</referencedby>
        <referencedby refid="d9/d39/a00257_1a73fbe64b89eaab9f4c1e20e1d0424761" compoundref="d5/d35/a00266" startline="1158" endline="1167">icGetTagSigName</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/dd8/a01265_1a659ff2074de1288b9654ce36e252a493" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref></type>
        <definition>static icTagTypeSignature CIccTagCreator::GetTagTypeNameSig</definition>
        <argsstring>(const icChar *szName)</argsstring>
        <name>GetTagTypeNameSig</name>
        <qualifiedname>CIccTagCreator::GetTagTypeNameSig</qualifiedname>
        <param>
          <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
          <declname>szName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function: GetTagTypeNameSig(szTypeName) Get signature based on display name of tag type.</para>
<para>Parameter(s): szTypeName = name of the ICC tag type to get a signature for</para>
<para>Returns tag type signature of tag type name if type name is recognized by the factory, icSigUnknownType if the type name is not recognized. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccProfLib/IccTagFactory.h" line="335" column="29" bodyfile="IccProfLib/IccTagFactory.h" bodystart="335" bodyend="338"/>
        <references refid="da/dd8/a01265_1a2c63e50c60b71504032285510b317f2b" compoundref="de/de1/a00065" startline="606" endline="618">DoGetTagTypeNameSig</references>
        <references refid="da/dd8/a01265_1a87d511327db473a3e0aac5420556aa86" compoundref="de/de1/a00065" startline="539" endline="548">GetInstance</references>
        <referencedby refid="d9/d39/a00257_1a7e4a8379f29fbaded2a4dd75b6222e55" compoundref="d5/d35/a00266" startline="1152" endline="1156">icGetTypeNameTagSig</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/dd8/a01265_1aa6aef9f6c963c17afc3f4d40b5d71f3a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
        <definition>static const icChar * CIccTagCreator::GetTagTypeSigName</definition>
        <argsstring>(icTagTypeSignature tagTypeSig)</argsstring>
        <name>GetTagTypeSigName</name>
        <qualifiedname>CIccTagCreator::GetTagTypeSigName</qualifiedname>
        <param>
          <type><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref></type>
          <declname>tagTypeSig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function: GetTagTypeSigName(tagTypeSig) Get display name of tagTypeSig.</para>
<para>Parameter(s): tagTypeSig = signature of the ICC tag type to get a name for</para>
<para>Returns ptr to string containing name of tag type if it is recognized by any factory, NULL if all factories do not create tagTypeSig tags. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccProfLib/IccTagFactory.h" line="322" column="23" bodyfile="IccProfLib/IccTagFactory.h" bodystart="322" bodyend="323"/>
        <references refid="da/dd8/a01265_1aa7f3f28125e3295116c2393ed55b3ba8" compoundref="de/de1/a00065" startline="592" endline="604">DoGetTagTypeSigName</references>
        <references refid="da/dd8/a01265_1a87d511327db473a3e0aac5420556aa86" compoundref="de/de1/a00065" startline="539" endline="548">GetInstance</references>
        <referencedby refid="dc/d2f/a00425_1aa4d31231b22a56dc869b51eaa2b1f933" compoundref="d5/db1/a00140" startline="1594" endline="1602">CIccInfo::GetTagTypeSigName</referencedby>
        <referencedby refid="d9/d39/a00257_1a9df441a57e3659e7ae404779feaea9a3" compoundref="d5/d35/a00266" startline="1141" endline="1150">icGetTagSigTypeName</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/dd8/a01265_1a03b1e9c5518470c5e475c5b975505b56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/de7/a01257" kindref="compound">IIccTagFactory</ref> *</type>
        <definition>static IIccTagFactory * CIccTagCreator::PopFactory</definition>
        <argsstring>()</argsstring>
        <name>PopFactory</name>
        <qualifiedname>CIccTagCreator::PopFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function: <ref refid="da/dd8/a01265_1a03b1e9c5518470c5e475c5b975505b56" kindref="member">PopFactory()</ref> Remove the top <ref refid="d9/de7/a01257" kindref="compound">IIccTagFactory</ref> from the stack of tag factories tracked by the system.</para>
<para>Parameter(s): None</para>
<para>Returns the top <ref refid="d9/de7/a01257" kindref="compound">IIccTagFactory</ref> from the stack of tag factories tracked by the system. The returned tag factory is no longer owned by the system and needs to be deleted to avoid memory leaks.</para>
<para>Note: The initial <ref refid="de/d34/a01261" kindref="compound">CIccSpecTagFactory</ref> cannot be popped off the stack. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccProfLib/IccTagFactory.h" line="367" column="25" bodyfile="IccProfLib/IccTagFactory.h" bodystart="367" bodyend="368"/>
        <references refid="da/dd8/a01265_1a5b631ac0f7c685d4a3f5bd8187d7915e" compoundref="de/de1/a00065" startline="625" endline="636">DoPopFactory</references>
        <references refid="da/dd8/a01265_1a87d511327db473a3e0aac5420556aa86" compoundref="de/de1/a00065" startline="539" endline="548">GetInstance</references>
      </memberdef>
      <memberdef kind="function" id="da/dd8/a01265_1adfa51ffc7c28acc6f9700ef8c90d4ddd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void CIccTagCreator::PushFactory</definition>
        <argsstring>(IIccTagFactory *pFactory)</argsstring>
        <name>PushFactory</name>
        <qualifiedname>CIccTagCreator::PushFactory</qualifiedname>
        <param>
          <type><ref refid="d9/de7/a01257" kindref="compound">IIccTagFactory</ref> *</type>
          <declname>pFactory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function: PushFactory(pFactory) Add an <ref refid="d9/de7/a01257" kindref="compound">IIccTagFactory</ref> to the stack of tag factories tracked by the system.</para>
<para>Parameter(s): pFactory = pointer to an <ref refid="d9/de7/a01257" kindref="compound">IIccTagFactory</ref> object to add to the system. The pFactory must be created with new, and will be owned <ref refid="da/dd8/a01265" kindref="compound">CIccTagCreator</ref> until popped off the stack using <ref refid="da/dd8/a01265_1a03b1e9c5518470c5e475c5b975505b56" kindref="member">PopFactory()</ref>. Any factories not popped off will be taken care of properly on application shutdown. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccProfLib/IccTagFactory.h" line="351" column="15" bodyfile="IccProfLib/IccTagFactory.h" bodystart="351" bodyend="352"/>
        <references refid="da/dd8/a01265_1a222019a8c2cfcc505a31d56ce6f4896e" compoundref="de/de1/a00065" startline="620" endline="623">DoPushFactory</references>
        <references refid="da/dd8/a01265_1a87d511327db473a3e0aac5420556aa86" compoundref="de/de1/a00065" startline="539" endline="548">GetInstance</references>
        <referencedby refid="d2/d04/a00281_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="d2/d04/a00281" startline="14" endline="113">main</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="da/dd8/a01265_1aa5317f8fc2ac1d9941c07c6d68187891" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CIccTagCreator::CIccTagCreator</definition>
        <argsstring>()</argsstring>
        <name>CIccTagCreator</name>
        <qualifiedname>CIccTagCreator::CIccTagCreator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Only <ref refid="da/dd8/a01265_1a87d511327db473a3e0aac5420556aa86" kindref="member">GetInstance()</ref> can create the signleton </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccProfLib/IccTagFactory.h" line="372" column="3" bodyfile="IccProfLib/IccTagFactory.h" bodystart="372" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="da/dd8/a01265_1aecf691cfac27778f352c60f5099b9293" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/dfd/a00969" kindref="compound">CIccTag</ref> *</type>
        <definition>CIccTag * CIccTagCreator::DoCreateTag</definition>
        <argsstring>(icTagTypeSignature tagTypeSig)</argsstring>
        <name>DoCreateTag</name>
        <qualifiedname>CIccTagCreator::DoCreateTag</qualifiedname>
        <param>
          <type><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref></type>
          <declname>tagTypeSig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccProfLib/IccTagFactory.h" line="387" column="11" bodyfile="IccProfLib/IccTagFactory.cpp" bodystart="550" bodyend="561"/>
        <references refid="d9/de7/a01257_1a1b29989361c92be45e0c41f31e0539f6">IIccTagFactory::CreateTag</references>
        <references refid="da/dd8/a01265_1a7b5024c1629f349356872c1b77c134d4" compoundref="d8/d41/a00038" startline="397">factoryStack</references>
        <referencedby refid="da/dd8/a01265_1a220110bcce89b9d96006c30067a7aa12" compoundref="d8/d41/a00038" startline="279" endline="280">CreateTag</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/dd8/a01265_1a1b75a28f3e8fcf94fff20be585e088dd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref></type>
        <definition>icTagSignature CIccTagCreator::DoGetTagNameSig</definition>
        <argsstring>(const icChar *szName)</argsstring>
        <name>DoGetTagNameSig</name>
        <qualifiedname>CIccTagCreator::DoGetTagNameSig</qualifiedname>
        <param>
          <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
          <declname>szName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccProfLib/IccTagFactory.h" line="389" column="18" bodyfile="IccProfLib/IccTagFactory.cpp" bodystart="577" bodyend="589"/>
        <references refid="da/dd8/a01265_1a7b5024c1629f349356872c1b77c134d4" compoundref="d8/d41/a00038" startline="397">factoryStack</references>
        <references refid="d9/de7/a01257_1a8f02e7b394e7b9b053a38a50bb8cf9e6">IIccTagFactory::GetTagNameSig</references>
        <referencedby refid="da/dd8/a01265_1a95e4fcd099488e0b460153b9c2237c6d" compoundref="d8/d41/a00038" startline="306" endline="309">GetTagNameSig</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/dd8/a01265_1a93a71ef5d2fb8e4771c0e4dd9f7f9226" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
        <definition>const icChar * CIccTagCreator::DoGetTagSigName</definition>
        <argsstring>(icTagSignature tagSig)</argsstring>
        <name>DoGetTagSigName</name>
        <qualifiedname>CIccTagCreator::DoGetTagSigName</qualifiedname>
        <param>
          <type><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref></type>
          <declname>tagSig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccProfLib/IccTagFactory.h" line="388" column="16" bodyfile="IccProfLib/IccTagFactory.cpp" bodystart="563" bodyend="575"/>
        <references refid="da/dd8/a01265_1a7b5024c1629f349356872c1b77c134d4" compoundref="d8/d41/a00038" startline="397">factoryStack</references>
        <references refid="d9/de7/a01257_1aa7ee87663f2d8dcbb6e8107973d8f8fe">IIccTagFactory::GetTagSigName</references>
        <referencedby refid="da/dd8/a01265_1a7c59cb6e6fcce1dae966cbad6d95b9fe" compoundref="d8/d41/a00038" startline="292" endline="293">GetTagSigName</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/dd8/a01265_1a2c63e50c60b71504032285510b317f2b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref></type>
        <definition>icTagTypeSignature CIccTagCreator::DoGetTagTypeNameSig</definition>
        <argsstring>(const icChar *szName)</argsstring>
        <name>DoGetTagTypeNameSig</name>
        <qualifiedname>CIccTagCreator::DoGetTagTypeNameSig</qualifiedname>
        <param>
          <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
          <declname>szName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccProfLib/IccTagFactory.h" line="391" column="22" bodyfile="IccProfLib/IccTagFactory.cpp" bodystart="606" bodyend="618"/>
        <references refid="da/dd8/a01265_1a7b5024c1629f349356872c1b77c134d4" compoundref="d8/d41/a00038" startline="397">factoryStack</references>
        <references refid="d9/de7/a01257_1ab6ee4e456b1725d9bbe8932ac8208fb2">IIccTagFactory::GetTagTypeNameSig</references>
        <referencedby refid="da/dd8/a01265_1a659ff2074de1288b9654ce36e252a493" compoundref="d8/d41/a00038" startline="335" endline="338">GetTagTypeNameSig</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/dd8/a01265_1aa7f3f28125e3295116c2393ed55b3ba8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref> *</type>
        <definition>const icChar * CIccTagCreator::DoGetTagTypeSigName</definition>
        <argsstring>(icTagTypeSignature tagTypeSig)</argsstring>
        <name>DoGetTagTypeSigName</name>
        <qualifiedname>CIccTagCreator::DoGetTagTypeSigName</qualifiedname>
        <param>
          <type><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref></type>
          <declname>tagTypeSig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccProfLib/IccTagFactory.h" line="390" column="16" bodyfile="IccProfLib/IccTagFactory.cpp" bodystart="592" bodyend="604"/>
        <references refid="da/dd8/a01265_1a7b5024c1629f349356872c1b77c134d4" compoundref="d8/d41/a00038" startline="397">factoryStack</references>
        <references refid="d9/de7/a01257_1a88091538a206198a107508c885e49e9d">IIccTagFactory::GetTagTypeSigName</references>
        <referencedby refid="da/dd8/a01265_1aa6aef9f6c963c17afc3f4d40b5d71f3a" compoundref="d8/d41/a00038" startline="322" endline="323">GetTagTypeSigName</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/dd8/a01265_1a5b631ac0f7c685d4a3f5bd8187d7915e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/de7/a01257" kindref="compound">IIccTagFactory</ref> *</type>
        <definition>IIccTagFactory * CIccTagCreator::DoPopFactory</definition>
        <argsstring>(bool bAll=false)</argsstring>
        <name>DoPopFactory</name>
        <qualifiedname>CIccTagCreator::DoPopFactory</qualifiedname>
        <param>
          <type>bool</type>
          <declname>bAll</declname>
          <defval><ref refid="d5/ddf/a00224_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccProfLib/IccTagFactory.h" line="393" column="18" bodyfile="IccProfLib/IccTagFactory.cpp" bodystart="625" bodyend="636"/>
        <references refid="da/dd8/a01265_1a7b5024c1629f349356872c1b77c134d4" compoundref="d8/d41/a00038" startline="397">factoryStack</references>
        <referencedby refid="da/dd8/a01265_1a6eb8607969fccf2926dc60a2ad71fe2d" compoundref="de/de1/a00065" startline="529" endline="537">~CIccTagCreator</referencedby>
        <referencedby refid="da/dd8/a01265_1a03b1e9c5518470c5e475c5b975505b56" compoundref="d8/d41/a00038" startline="367" endline="368">PopFactory</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/dd8/a01265_1a222019a8c2cfcc505a31d56ce6f4896e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CIccTagCreator::DoPushFactory</definition>
        <argsstring>(IIccTagFactory *pFactory)</argsstring>
        <name>DoPushFactory</name>
        <qualifiedname>CIccTagCreator::DoPushFactory</qualifiedname>
        <param>
          <type><ref refid="d9/de7/a01257" kindref="compound">IIccTagFactory</ref> *</type>
          <declname>pFactory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccProfLib/IccTagFactory.h" line="392" column="8" bodyfile="IccProfLib/IccTagFactory.cpp" bodystart="620" bodyend="623"/>
        <references refid="da/dd8/a01265_1a7b5024c1629f349356872c1b77c134d4" compoundref="d8/d41/a00038" startline="397">factoryStack</references>
        <referencedby refid="da/dd8/a01265_1a87d511327db473a3e0aac5420556aa86" compoundref="de/de1/a00065" startline="539" endline="548">GetInstance</referencedby>
        <referencedby refid="da/dd8/a01265_1adfa51ffc7c28acc6f9700ef8c90d4ddd" compoundref="d8/d41/a00038" startline="351" endline="352">PushFactory</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="da/dd8/a01265_1a87d511327db473a3e0aac5420556aa86" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/dd8/a01265" kindref="compound">CIccTagCreator</ref> *</type>
        <definition>CIccTagCreator * CIccTagCreator::GetInstance</definition>
        <argsstring>()</argsstring>
        <name>GetInstance</name>
        <qualifiedname>CIccTagCreator::GetInstance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function: <ref refid="da/dd8/a01265_1a87d511327db473a3e0aac5420556aa86" kindref="member">GetInstance()</ref> Private static function to access singleton CiccTagCreator Object.</para>
<para>Parameter(s): None</para>
<para>Returns the singleton <ref refid="da/dd8/a01265" kindref="compound">CIccTagCreator</ref> object. It will allocate a new one and push a single CIccSpecTag Factory object onto the factory stack if the singleton has not been intialized. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccProfLib/IccTagFactory.h" line="385" column="25" bodyfile="IccProfLib/IccTagFactory.cpp" bodystart="539" bodyend="548"/>
        <references refid="da/dd8/a01265_1a222019a8c2cfcc505a31d56ce6f4896e" compoundref="de/de1/a00065" startline="620" endline="623">DoPushFactory</references>
        <references refid="da/dd8/a01265_1a484247f3619898fd14dd881bc65a4e00" compoundref="d8/d41/a00038" startline="395">theTagCreator</references>
        <referencedby refid="da/dd8/a01265_1a220110bcce89b9d96006c30067a7aa12" compoundref="d8/d41/a00038" startline="279" endline="280">CreateTag</referencedby>
        <referencedby refid="da/dd8/a01265_1a95e4fcd099488e0b460153b9c2237c6d" compoundref="d8/d41/a00038" startline="306" endline="309">GetTagNameSig</referencedby>
        <referencedby refid="da/dd8/a01265_1a7c59cb6e6fcce1dae966cbad6d95b9fe" compoundref="d8/d41/a00038" startline="292" endline="293">GetTagSigName</referencedby>
        <referencedby refid="da/dd8/a01265_1a659ff2074de1288b9654ce36e252a493" compoundref="d8/d41/a00038" startline="335" endline="338">GetTagTypeNameSig</referencedby>
        <referencedby refid="da/dd8/a01265_1aa6aef9f6c963c17afc3f4d40b5d71f3a" compoundref="d8/d41/a00038" startline="322" endline="323">GetTagTypeSigName</referencedby>
        <referencedby refid="da/dd8/a01265_1a03b1e9c5518470c5e475c5b975505b56" compoundref="d8/d41/a00038" startline="367" endline="368">PopFactory</referencedby>
        <referencedby refid="da/dd8/a01265_1adfa51ffc7c28acc6f9700ef8c90d4ddd" compoundref="d8/d41/a00038" startline="351" endline="352">PushFactory</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class: <ref refid="da/dd8/a01265" kindref="compound">CIccTagCreator</ref></para>
<para>Purpose: <ref refid="da/dd8/a01265" kindref="compound">CIccTagCreator</ref> uses a singleton pattern to provide dynamically upgradeable <ref refid="d7/dfd/a00969" kindref="compound">CIccTag</ref> derived object creation based on tag signature. </para>
    </detaileddescription>
    <location file="IccProfLib/IccTagFactory.h" line="263" column="1" bodyfile="IccProfLib/IccTagFactory.h" bodystart="264" bodyend="398"/>
    <listofallmembers>
      <member refid="da/dd8/a01265_1aa5317f8fc2ac1d9941c07c6d68187891" prot="private" virt="non-virtual"><scope>CIccTagCreator</scope><name>CIccTagCreator</name></member>
      <member refid="da/dd8/a01265_1a220110bcce89b9d96006c30067a7aa12" prot="public" virt="non-virtual"><scope>CIccTagCreator</scope><name>CreateTag</name></member>
      <member refid="da/dd8/a01265_1aecf691cfac27778f352c60f5099b9293" prot="private" virt="non-virtual"><scope>CIccTagCreator</scope><name>DoCreateTag</name></member>
      <member refid="da/dd8/a01265_1a1b75a28f3e8fcf94fff20be585e088dd" prot="private" virt="non-virtual"><scope>CIccTagCreator</scope><name>DoGetTagNameSig</name></member>
      <member refid="da/dd8/a01265_1a93a71ef5d2fb8e4771c0e4dd9f7f9226" prot="private" virt="non-virtual"><scope>CIccTagCreator</scope><name>DoGetTagSigName</name></member>
      <member refid="da/dd8/a01265_1a2c63e50c60b71504032285510b317f2b" prot="private" virt="non-virtual"><scope>CIccTagCreator</scope><name>DoGetTagTypeNameSig</name></member>
      <member refid="da/dd8/a01265_1aa7f3f28125e3295116c2393ed55b3ba8" prot="private" virt="non-virtual"><scope>CIccTagCreator</scope><name>DoGetTagTypeSigName</name></member>
      <member refid="da/dd8/a01265_1a5b631ac0f7c685d4a3f5bd8187d7915e" prot="private" virt="non-virtual"><scope>CIccTagCreator</scope><name>DoPopFactory</name></member>
      <member refid="da/dd8/a01265_1a222019a8c2cfcc505a31d56ce6f4896e" prot="private" virt="non-virtual"><scope>CIccTagCreator</scope><name>DoPushFactory</name></member>
      <member refid="da/dd8/a01265_1a7b5024c1629f349356872c1b77c134d4" prot="private" virt="non-virtual"><scope>CIccTagCreator</scope><name>factoryStack</name></member>
      <member refid="da/dd8/a01265_1a87d511327db473a3e0aac5420556aa86" prot="private" virt="non-virtual"><scope>CIccTagCreator</scope><name>GetInstance</name></member>
      <member refid="da/dd8/a01265_1a95e4fcd099488e0b460153b9c2237c6d" prot="public" virt="non-virtual"><scope>CIccTagCreator</scope><name>GetTagNameSig</name></member>
      <member refid="da/dd8/a01265_1a7c59cb6e6fcce1dae966cbad6d95b9fe" prot="public" virt="non-virtual"><scope>CIccTagCreator</scope><name>GetTagSigName</name></member>
      <member refid="da/dd8/a01265_1a659ff2074de1288b9654ce36e252a493" prot="public" virt="non-virtual"><scope>CIccTagCreator</scope><name>GetTagTypeNameSig</name></member>
      <member refid="da/dd8/a01265_1aa6aef9f6c963c17afc3f4d40b5d71f3a" prot="public" virt="non-virtual"><scope>CIccTagCreator</scope><name>GetTagTypeSigName</name></member>
      <member refid="da/dd8/a01265_1a03b1e9c5518470c5e475c5b975505b56" prot="public" virt="non-virtual"><scope>CIccTagCreator</scope><name>PopFactory</name></member>
      <member refid="da/dd8/a01265_1adfa51ffc7c28acc6f9700ef8c90d4ddd" prot="public" virt="non-virtual"><scope>CIccTagCreator</scope><name>PushFactory</name></member>
      <member refid="da/dd8/a01265_1a484247f3619898fd14dd881bc65a4e00" prot="private" virt="non-virtual"><scope>CIccTagCreator</scope><name>theTagCreator</name></member>
      <member refid="da/dd8/a01265_1a6eb8607969fccf2926dc60a2ad71fe2d" prot="public" virt="non-virtual"><scope>CIccTagCreator</scope><name>~CIccTagCreator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
