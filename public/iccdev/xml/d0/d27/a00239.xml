<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="d0/d27/a00239" kind="file" language="C++">
    <compoundname>IccTagXml.cpp</compoundname>
    <includes refid="d6/de1/a00233" local="yes">IccTagXml.h</includes>
    <includes refid="d7/d40/a00236" local="yes">IccMpeXml.h</includes>
    <includes refid="d7/dce/a00143" local="yes">IccUtil.h</includes>
    <includes refid="d9/d39/a00257" local="yes">IccUtilXml.h</includes>
    <includes refid="d2/dc8/a00242" local="yes">IccIoXml.h</includes>
    <includes refid="dd/d52/a00221" local="yes">IccSparseMatrix.h</includes>
    <includes refid="d5/d42/a00269" local="yes">IccProfileXml.h</includes>
    <includes refid="d1/d44/a00098" local="yes">IccStructFactory.h</includes>
    <includes refid="da/d2a/a00086" local="yes">IccArrayFactory.h</includes>
    <includes local="no">cstring</includes>
    <includes local="no">set</includes>
    <includes local="no">map</includes>
    <includes local="no">sstream</includes>
    <includes local="no">iomanip</includes>
    <incdepgraph>
      <node id="43">
        <label>IccArrayFactory.h</label>
        <link refid="da/d2a/a00086"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>IccDefs.h</label>
        <link refid="d4/d81/a00110"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>IccIO.h</label>
        <link refid="df/d6a/a00119"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>IccMpeACS.h</label>
        <link refid="d6/d7d/a00161"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>IccMpeBasic.h</label>
        <link refid="d2/de7/a00014"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>IccMpeCalc.h</label>
        <link refid="d5/de0/a00050"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>IccMpeSpectral.h</label>
        <link refid="d3/de5/a00209"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>IccPcc.h</label>
        <link refid="d4/d3a/a00101"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>IccProfLibConf.h</label>
        <link refid="d5/d16/a00029"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>IccProfile.h</label>
        <link refid="d4/d51/a00017"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>IccSolve.h</label>
        <link refid="d3/d52/a00023"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>IccSparseMatrix.h</label>
        <link refid="dd/d52/a00221"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>IccStructFactory.h</label>
        <link refid="d1/d44/a00098"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>IccTag.h</label>
        <link refid="d2/df5/a00137"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>IccTagBasic.h</label>
        <link refid="da/dec/a00080"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>IccTagComposite.h</label>
        <link refid="d1/da8/a00230"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>IccTagDict.h</label>
        <link refid="df/d03/a00062"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>IccTagEmbedIcc.h</label>
        <link refid="dc/d9a/a00218"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>IccTagFactory.h</label>
        <link refid="d8/d41/a00038"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>IccTagLut.h</label>
        <link refid="da/d24/a00068"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>IccTagMPE.h</label>
        <link refid="d7/d25/a00182"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>IccTagProfSeqId.h</label>
        <link refid="d5/df1/a00206"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>IccUtil.h</label>
        <link refid="d7/dce/a00143"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>icProfileHeader.h</label>
        <link refid="d7/d46/a00002"/>
      </node>
      <node id="38">
        <label>IccIoXml.h</label>
        <link refid="d2/dc8/a00242"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>IccMpeXml.h</label>
        <link refid="d7/d40/a00236"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>IccProfileXml.h</label>
        <link refid="d5/d42/a00269"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>IccXML/IccLibXML/IccTagXml.cpp</label>
        <link refid="d0/d27/a00239"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>IccTagXml.h</label>
        <link refid="d6/de1/a00233"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>IccUtilXml.h</label>
        <link refid="d9/d39/a00257"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>IccXmlConfig.h</label>
        <link refid="d7/d03/a00254"/>
      </node>
      <node id="44">
        <label>cstring</label>
      </node>
      <node id="47">
        <label>iomanip</label>
      </node>
      <node id="25">
        <label>libxml/parser.h</label>
      </node>
      <node id="41">
        <label>libxml/relaxng.h</label>
      </node>
      <node id="26">
        <label>libxml/tree.h</label>
      </node>
      <node id="36">
        <label>limits</label>
      </node>
      <node id="12">
        <label>list</label>
      </node>
      <node id="34">
        <label>map</label>
      </node>
      <node id="17">
        <label>memory</label>
      </node>
      <node id="45">
        <label>set</label>
      </node>
      <node id="46">
        <label>sstream</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
      <node id="10">
        <label>stdio.h</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="32">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="d0/d27/a00239_1a95bb65a2b3dfffdf39ecf2db53c1d82b" prot="public" static="no">
        <type>std::map&lt; <ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref>, <ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref> &gt;</type>
        <definition>typedef std::map&lt;icUInt32Number, icTagSignature&gt; IccOffsetTagSigMap</definition>
        <argsstring></argsstring>
        <name>IccOffsetTagSigMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccTagXml.cpp" line="79" column="19" bodyfile="IccXML/IccLibXML/IccTagXml.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="d0/d27/a00239_1a7c5a7e91d27be931c8067c38c7f17ea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d02/a01149" kindref="compound">CIccCLUT</ref> *</type>
        <definition>CIccCLUT * icCLutFromXml</definition>
        <argsstring>(xmlNode *pNode, int nIn, int nOut, icConvertType nType, std::string &amp;parseStr)</argsstring>
        <name>icCLutFromXml</name>
        <param>
          <type>xmlNode *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nOut</declname>
        </param>
        <param>
          <type><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref></type>
          <declname>nType</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>parseStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccTagXml.cpp" line="3327" column="10" bodyfile="IccXML/IccLibXML/IccTagXml.cpp" bodystart="3327" bodyend="3791"/>
        <references refid="d8/d02/a01149_1a5ca68cccc55f99adcf011186a6ed2615" compoundref="d4/d3e/a00116" startline="1688" endline="1698">CIccCLUT::CIccCLUT</references>
        <references refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" compoundref="d9/d39/a00257" startline="165" endline="165">CIccXmlArrayType&lt; T, Tsig &gt;::GetBuf</references>
        <references refid="d8/d02/a01149_1aa42861bdf83a889cb2bb7dc8940ba325" compoundref="da/d24/a00068" startline="347" endline="347">CIccCLUT::GetData</references>
        <references refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" compoundref="df/d6a/a00119" startline="130" endline="130">CIccIO::GetLength</references>
        <references refid="d8/d02/a01149_1a11c1f0a6f3f878840eaed3e00d1ce74e" compoundref="da/d24/a00068" startline="357" endline="357">CIccCLUT::GetOutputChannels</references>
        <references refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" compoundref="d9/d39/a00257" startline="166" endline="166">CIccXmlArrayType&lt; T, Tsig &gt;::GetSize</references>
        <references refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" compoundref="d7/d03/a00254" startline="69">icConvert16Bit</references>
        <references refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" compoundref="d7/d03/a00254" startline="68">icConvert8Bit</references>
        <references refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" compoundref="d7/d03/a00254" startline="70">icConvertFloat</references>
        <references refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8acf7f3d311a96b6529fb7b3ac82fd372b" compoundref="d7/d03/a00254" startline="71">icConvertVariable</references>
        <references refid="d9/dd6/a00272_1a1787be4d01fe1c357f48a2e8531622a6" compoundref="d9/dd6/a00272" startline="100" endline="107">IccOpenFileIO</references>
        <references refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" compoundref="d5/d35/a00266" startline="572" endline="578">icXmlAttrValue</references>
        <references refid="d9/d39/a00257_1a459e22a536debe98c547657efa20b5ca" compoundref="d5/d35/a00266" startline="580" endline="587">icXmlAttrValue</references>
        <references refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" compoundref="d5/d35/a00266" startline="669" endline="685">icXmlFindAttr</references>
        <references refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" compoundref="d5/d35/a00266" startline="687" endline="701">icXmlFindNode</references>
        <references refid="d8/d02/a01149_1a98ecac13b9537465c0b69aa7bf477437" compoundref="d4/d3e/a00116" startline="1826" endline="1877">CIccCLUT::Init</references>
        <references refid="d8/d02/a01149_1afaacdd60037b3ebf7682d55a45009a31" compoundref="d4/d3e/a00116" startline="1806" endline="1814">CIccCLUT::Init</references>
        <references refid="d8/d02/a01149_1a815d091583440220135b3e99fed15f08" compoundref="da/d24/a00068" startline="348" endline="348">CIccCLUT::NumPoints</references>
        <references refid="de/dd3/a01873_1a07d799736e57c092e6b375e4b197c75c" compoundref="d5/d35/a00266" startline="755" endline="780">CIccXmlArrayType&lt; T, Tsig &gt;::ParseArray</references>
        <references refid="de/dd3/a01873_1a23e7980af4e5c740a54d8c23ec68acbb" compoundref="d5/d35/a00266" startline="807" endline="817">CIccXmlArrayType&lt; T, Tsig &gt;::ParseTextArrayNum</references>
        <references refid="dc/d2c/a00893_1a460f7d82e1daf63f867d7cbca8db2ac4" compoundref="d9/d2e/a00056" startline="114" endline="120">CIccIO::Read16</references>
        <references refid="dc/d2c/a00893_1a3a42fb785255dda8609fc46c83fe4f2c" compoundref="df/d6a/a00119" startline="104" endline="104">CIccIO::Read8</references>
        <references refid="dc/d2c/a00893_1a1399dc6dcf7aefe36b78ad96fc117d17" compoundref="d9/d2e/a00056" startline="302" endline="319">CIccIO::ReadFloat32Float</references>
        <references refid="d8/d02/a01149_1aa33a2b8078f4408eb02918676992f686" compoundref="da/d24/a00068" startline="382" endline="382">CIccCLUT::SetPrecision</references>
        <referencedby refid="d0/d27/a00239_1abb2a2c1c6eec43dfdc6cea84fe88a77f" compoundref="d0/d27/a00239" startline="3793" endline="3858">icMBBFromXml</referencedby>
        <referencedby refid="da/d3e/a02025_1a12bdfaf73489d4043eaef10a429cff0a" compoundref="dd/dd7/a00260" startline="1887" endline="1905">CIccMpeXmlCLUT::ParseXml</referencedby>
        <referencedby refid="d6/d19/a02029_1ad58a9eae57a40bbebbc8cfefe6f1e24f" compoundref="dd/dd7/a00260" startline="1927" endline="1948">CIccMpeXmlExtCLUT::ParseXml</referencedby>
        <referencedby refid="de/df8/a02073_1aa5d45fb5b70d1e4895c876400c2ea344" compoundref="dd/dd7/a00260" startline="3221" endline="3291">CIccMpeXmlEmissionCLUT::ParseXml</referencedby>
        <referencedby refid="db/dac/a02077_1a96cc9696018abfed330d18170568536b" compoundref="dd/dd7/a00260" startline="3334" endline="3404">CIccMpeXmlReflectanceCLUT::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d27/a00239_1ab2ad4f9d9730453002176b26c0899dab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool icCurvesFromXml</definition>
        <argsstring>(LPIccCurve *pCurve, icUInt32Number nChannels, xmlNode *pNode, icConvertType nType, std::string &amp;parseStr)</argsstring>
        <name>icCurvesFromXml</name>
        <param>
          <type><ref refid="da/d24/a00068_1a39a314ab7bc07c151871d9745ed17cae" kindref="member">LPIccCurve</ref> *</type>
          <declname>pCurve</declname>
        </param>
        <param>
          <type><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref></type>
          <declname>nChannels</declname>
        </param>
        <param>
          <type>xmlNode *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref></type>
          <declname>nType</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>parseStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccTagXml.cpp" line="3232" column="6" bodyfile="IccXML/IccLibXML/IccTagXml.cpp" bodystart="3232" bodyend="3299"/>
        <references refid="d3/dcd/a00965_1afc77445123182ddaec413f6353c719be">IIccExtensionTag::GetExtClassName</references>
        <references refid="d3/dcd/a00965_1ac7bb0a319f913857a32f13d31df189c8">IIccExtensionTag::GetExtDerivedClassName</references>
        <references refid="d7/dfd/a00969_1aa4cc7f1dd04e9b537738d1dfa96a9790" compoundref="da/dec/a00080" startline="143" endline="143">CIccTag::GetExtension</references>
        <references refid="d6/d18/a01925_1a077bbe4f80ab0ea8f83328361c5dc6cf">CIccCurveXml::ParseXml</references>
        <references refid="de/d3c/a01809_1ab389ac02038775bf0a198ae68847d8a1">CIccTagXml::ParseXml</references>
        <referencedby refid="d0/d27/a00239_1abb2a2c1c6eec43dfdc6cea84fe88a77f" compoundref="d0/d27/a00239" startline="3793" endline="3858">icMBBFromXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d27/a00239_1a0487825d4241d4ed1b2ad5825ba72cd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool icCurvesToXml</definition>
        <argsstring>(std::string &amp;xml, const char *szName, CIccCurve **pCurves, int numCurve, icConvertType nType, std::string blanks)</argsstring>
        <name>icCurvesToXml</name>
        <param>
          <type>std::string &amp;</type>
          <declname>xml</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szName</declname>
        </param>
        <param>
          <type><ref refid="dd/de4/a01121" kindref="compound">CIccCurve</ref> **</type>
          <declname>pCurves</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numCurve</declname>
        </param>
        <param>
          <type><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref></type>
          <declname>nType</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>blanks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccTagXml.cpp" line="3042" column="6" bodyfile="IccXML/IccLibXML/IccTagXml.cpp" bodystart="3042" bodyend="3059"/>
        <references refid="d3/dcd/a00965_1ac7bb0a319f913857a32f13d31df189c8">IIccExtensionTag::GetExtDerivedClassName</references>
        <references refid="d7/dfd/a00969_1aa4cc7f1dd04e9b537738d1dfa96a9790" compoundref="da/dec/a00080" startline="143" endline="143">CIccTag::GetExtension</references>
        <references refid="d6/d18/a01925_1a3195b83e31cbef371b697e375f0f2a78">CIccCurveXml::ToXml</references>
        <referencedby refid="d0/d27/a00239_1a2637faf66e8480a8e4b3b1ebfcb3d491" compoundref="d0/d27/a00239" startline="3131" endline="3229">icMBBToXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d27/a00239_1ac1a584ae1478d58b3578ae2b7c3dc10c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool icMatrixFromXml</definition>
        <argsstring>(CIccMatrix *pMatrix, xmlNode *pNode)</argsstring>
        <name>icMatrixFromXml</name>
        <param>
          <type><ref refid="d6/d6e/a01137" kindref="compound">CIccMatrix</ref> *</type>
          <declname>pMatrix</declname>
        </param>
        <param>
          <type>xmlNode *</type>
          <declname>pNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccTagXml.cpp" line="3301" column="6" bodyfile="IccXML/IccLibXML/IccTagXml.cpp" bodystart="3301" bodyend="3325"/>
        <references refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" compoundref="d5/d35/a00266" startline="572" endline="578">icXmlAttrValue</references>
        <references refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" compoundref="d5/d35/a00266" startline="669" endline="685">icXmlFindAttr</references>
        <references refid="d6/d6e/a01137_1ae60e859fa2d9eb58ae46c1d78eb7b8e2" compoundref="da/d24/a00068" startline="270">CIccMatrix::m_bUseConstants</references>
        <references refid="d6/d6e/a01137_1a69dfaeb08457336b51f559f484aa178a" compoundref="da/d24/a00068" startline="269">CIccMatrix::m_e</references>
        <referencedby refid="d0/d27/a00239_1abb2a2c1c6eec43dfdc6cea84fe88a77f" compoundref="d0/d27/a00239" startline="3793" endline="3858">icMBBFromXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d27/a00239_1aa3783dbcb8b73337e1975908b9d7c4e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool icMatrixToXml</definition>
        <argsstring>(std::string &amp;xml, CIccMatrix *pMatrix, std::string blanks)</argsstring>
        <name>icMatrixToXml</name>
        <param>
          <type>std::string &amp;</type>
          <declname>xml</declname>
        </param>
        <param>
          <type><ref refid="d6/d6e/a01137" kindref="compound">CIccMatrix</ref> *</type>
          <declname>pMatrix</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>blanks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccTagXml.cpp" line="3107" column="6" bodyfile="IccXML/IccLibXML/IccTagXml.cpp" bodystart="3107" bodyend="3128"/>
        <references refid="d6/d6e/a01137_1ae60e859fa2d9eb58ae46c1d78eb7b8e2" compoundref="da/d24/a00068" startline="270">CIccMatrix::m_bUseConstants</references>
        <references refid="d6/d6e/a01137_1a69dfaeb08457336b51f559f484aa178a" compoundref="da/d24/a00068" startline="269">CIccMatrix::m_e</references>
        <referencedby refid="d0/d27/a00239_1a2637faf66e8480a8e4b3b1ebfcb3d491" compoundref="d0/d27/a00239" startline="3131" endline="3229">icMBBToXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d27/a00239_1abb2a2c1c6eec43dfdc6cea84fe88a77f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool icMBBFromXml</definition>
        <argsstring>(CIccMBB *pMBB, xmlNode *pNode, icConvertType nType, std::string &amp;parseStr)</argsstring>
        <name>icMBBFromXml</name>
        <param>
          <type><ref refid="dc/d06/a01153" kindref="compound">CIccMBB</ref> *</type>
          <declname>pMBB</declname>
        </param>
        <param>
          <type>xmlNode *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref></type>
          <declname>nType</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>parseStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccTagXml.cpp" line="3793" column="6" bodyfile="IccXML/IccLibXML/IccTagXml.cpp" bodystart="3793" bodyend="3858"/>
        <references refid="dc/d06/a01153_1abc6ae335b33f73d1ab5f95105d2d38ef" compoundref="da/d24/a00068" startline="469" endline="469">CIccMBB::GetCLUT</references>
        <references refid="dc/d06/a01153_1acd1f128ac57344954a4f3232da3f78c6" compoundref="da/d24/a00068" startline="470" endline="470">CIccMBB::GetCurvesA</references>
        <references refid="dc/d06/a01153_1a437dcc750cc7a9fe1d7f9799e13c9879" compoundref="da/d24/a00068" startline="471" endline="471">CIccMBB::GetCurvesB</references>
        <references refid="dc/d06/a01153_1a16f6c9361bf92779117b0479003cd6bd" compoundref="da/d24/a00068" startline="472" endline="472">CIccMBB::GetCurvesM</references>
        <references refid="dc/d06/a01153_1abcc4f998a96b263bf0f6c6c742e449cb" compoundref="da/d24/a00068" startline="468" endline="468">CIccMBB::GetMatrix</references>
        <references refid="dd/dd7/a00260_1a7c5a7e91d27be931c8067c38c7f17ea6" compoundref="d0/d27/a00239" startline="3327" endline="3791">icCLutFromXml</references>
        <references refid="d0/d27/a00239_1ab2ad4f9d9730453002176b26c0899dab" compoundref="d0/d27/a00239" startline="3232" endline="3299">icCurvesFromXml</references>
        <references refid="d0/d27/a00239_1ac1a584ae1478d58b3578ae2b7c3dc10c" compoundref="d0/d27/a00239" startline="3301" endline="3325">icMatrixFromXml</references>
        <references refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" compoundref="d5/d35/a00266" startline="572" endline="578">icXmlAttrValue</references>
        <references refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" compoundref="d5/d35/a00266" startline="669" endline="685">icXmlFindAttr</references>
        <references refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" compoundref="d5/d35/a00266" startline="687" endline="701">icXmlFindNode</references>
        <references refid="dc/d06/a01153_1afc8280be7ae2a52c626da5072f2042aa" compoundref="d4/d3e/a00116" startline="3410" endline="3415">CIccMBB::Init</references>
        <references refid="dc/d06/a01153_1a0c1b65e2769f4a85dbdac46626cdc22a" compoundref="da/d24/a00068" startline="445" endline="445">CIccMBB::IsInputB</references>
        <references refid="dc/d06/a01153_1a278bcf1ad325db815d90b99a6b5996e1" compoundref="da/d24/a00068" startline="442" endline="442">CIccMBB::IsInputMatrix</references>
        <references refid="dc/d06/a01153_1a8009ad10a01ed3003cdef16a3463aab1" compoundref="d4/d3e/a00116" startline="3673" endline="3684">CIccMBB::NewCurvesA</references>
        <references refid="dc/d06/a01153_1a19e2d170d9b0482fa4bb6038b0d0bdcb" compoundref="d4/d3e/a00116" startline="3718" endline="3729">CIccMBB::NewCurvesB</references>
        <references refid="dc/d06/a01153_1a64189b5928a836fd28c53054328acc31" compoundref="d4/d3e/a00116" startline="3696" endline="3707">CIccMBB::NewCurvesM</references>
        <references refid="dc/d06/a01153_1a1e7a82890e7e56e1f93bd798a771f7d1" compoundref="d4/d3e/a00116" startline="3740" endline="3748">CIccMBB::NewMatrix</references>
        <references refid="dc/d06/a01153_1a3f28f022fea3853583b82184b35a2587" compoundref="d4/d3e/a00116" startline="3788" endline="3801">CIccMBB::SetCLUT</references>
        <referencedby refid="da/d76/a01941_1a17d7ee9bbdbfd67551e3ad4096d82f12" compoundref="d0/d27/a00239" startline="3870" endline="3878">CIccTagXmlLutAtoB::ParseXml</referencedby>
        <referencedby refid="d5/d39/a01945_1a8f179c174b57d340a2d29780b3cb7d14" compoundref="d0/d27/a00239" startline="3891" endline="3898">CIccTagXmlLutBtoA::ParseXml</referencedby>
        <referencedby refid="dd/d2e/a01949_1ac547bf18f93a7b1000a09bb307a2cf69" compoundref="d0/d27/a00239" startline="3911" endline="3918">CIccTagXmlLut8::ParseXml</referencedby>
        <referencedby refid="d9/d97/a01953_1a8326f04ecde36cd269be1bb293a9d6a9" compoundref="d0/d27/a00239" startline="3931" endline="3937">CIccTagXmlLut16::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d27/a00239_1a2637faf66e8480a8e4b3b1ebfcb3d491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool icMBBToXml</definition>
        <argsstring>(std::string &amp;xml, CIccMBB *pMBB, icConvertType nType, std::string blanks=&quot;&quot;, bool bSaveGridPoints=false)</argsstring>
        <name>icMBBToXml</name>
        <param>
          <type>std::string &amp;</type>
          <declname>xml</declname>
        </param>
        <param>
          <type><ref refid="dc/d06/a01153" kindref="compound">CIccMBB</ref> *</type>
          <declname>pMBB</declname>
        </param>
        <param>
          <type><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref></type>
          <declname>nType</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>blanks</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>bSaveGridPoints</declname>
          <defval><ref refid="d5/ddf/a00224_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccTagXml.cpp" line="3131" column="6" bodyfile="IccXML/IccLibXML/IccTagXml.cpp" bodystart="3131" bodyend="3229"/>
        <references refid="dc/d06/a01153_1abc6ae335b33f73d1ab5f95105d2d38ef" compoundref="da/d24/a00068" startline="469" endline="469">CIccMBB::GetCLUT</references>
        <references refid="dc/d06/a01153_1acd1f128ac57344954a4f3232da3f78c6" compoundref="da/d24/a00068" startline="470" endline="470">CIccMBB::GetCurvesA</references>
        <references refid="dc/d06/a01153_1a437dcc750cc7a9fe1d7f9799e13c9879" compoundref="da/d24/a00068" startline="471" endline="471">CIccMBB::GetCurvesB</references>
        <references refid="dc/d06/a01153_1a16f6c9361bf92779117b0479003cd6bd" compoundref="da/d24/a00068" startline="472" endline="472">CIccMBB::GetCurvesM</references>
        <references refid="dc/d06/a01153_1abcc4f998a96b263bf0f6c6c742e449cb" compoundref="da/d24/a00068" startline="468" endline="468">CIccMBB::GetMatrix</references>
        <references refid="d9/d39/a00257_1a8e60807f7d16227a24f22ad32623bf98" compoundref="d5/d35/a00266" startline="537" endline="557">icCLUTToXml</references>
        <references refid="d0/d27/a00239_1a0487825d4241d4ed1b2ad5825ba72cd9" compoundref="d0/d27/a00239" startline="3042" endline="3059">icCurvesToXml</references>
        <references refid="d0/d27/a00239_1aa3783dbcb8b73337e1975908b9d7c4e1" compoundref="d0/d27/a00239" startline="3107" endline="3128">icMatrixToXml</references>
        <references refid="dc/d06/a01153_1a27d1df6b700c896a7a6da12562d09018" compoundref="da/d24/a00068" startline="451" endline="451">CIccMBB::InputChannels</references>
        <references refid="dc/d06/a01153_1a278bcf1ad325db815d90b99a6b5996e1" compoundref="da/d24/a00068" startline="442" endline="442">CIccMBB::IsInputMatrix</references>
        <references refid="dc/d06/a01153_1a33d94042166c1b9c6f3059785ca0d3aa" compoundref="da/d24/a00068" startline="452" endline="452">CIccMBB::OutputChannels</references>
        <references refid="dc/d06/a01153_1a4ce9ee842d19e4eee3ca02db0de16eb8" compoundref="da/d24/a00068" startline="446" endline="446">CIccMBB::SwapMBCurves</references>
        <referencedby refid="da/d76/a01941_1abeba5c3094ea9906c74bbe6e6c2e3586" compoundref="d0/d27/a00239" startline="3860" endline="3867">CIccTagXmlLutAtoB::ToXml</referencedby>
        <referencedby refid="d5/d39/a01945_1ac1dbe883aa002d1232802f2e3783a272" compoundref="d0/d27/a00239" startline="3881" endline="3888">CIccTagXmlLutBtoA::ToXml</referencedby>
        <referencedby refid="dd/d2e/a01949_1af32a3f3856a894a6de6fb4e718b629c5" compoundref="d0/d27/a00239" startline="3901" endline="3908">CIccTagXmlLut8::ToXml</referencedby>
        <referencedby refid="d9/d97/a01953_1abcbb870aa768cf4734c0a4e345fe0566" compoundref="d0/d27/a00239" startline="3921" endline="3928">CIccTagXmlLut16::ToXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d27/a00239_1a5e18ab5a318311f6b8e807ae44b7ed45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool icProfDescToXml</definition>
        <argsstring>(std::string &amp;xml, CIccProfileDescStruct &amp;p, std::string blanks=&quot;&quot;)</argsstring>
        <name>icProfDescToXml</name>
        <param>
          <type>std::string &amp;</type>
          <declname>xml</declname>
        </param>
        <param>
          <type><ref refid="d2/df3/a01085" kindref="compound">CIccProfileDescStruct</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>blanks</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccTagXml.cpp" line="2181" column="6" bodyfile="IccXML/IccLibXML/IccTagXml.cpp" bodystart="2181" bodyend="2255"/>
        <references refid="de/d3c/a01809_1a67786e088d1e0f900a3aa28bb3499d2b" compoundref="d6/de1/a00233" startline="79" endline="79">CIccTagXml::GetExtClassName</references>
        <references refid="d7/dfd/a00969_1aa4cc7f1dd04e9b537738d1dfa96a9790" compoundref="da/dec/a00080" startline="143" endline="143">CIccTag::GetExtension</references>
        <references refid="dd/dee/a01081_1aa4678e864f3f11cf1cfb3ff583b79b95" compoundref="da/dec/a00080" startline="1468" endline="1468">CIccProfileDescText::GetTag</references>
        <references refid="d7/dfd/a00969_1a0d6f4b6f857134bd87bfb0cd54025208" compoundref="da/dec/a00080" startline="131" endline="131">CIccTag::GetType</references>
        <references refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" compoundref="d5/d35/a00266" startline="305" endline="339">icFixXml</references>
        <references refid="d9/d39/a00257_1a29395cadeb827a6be39833c934c84074" compoundref="d5/d35/a00266" startline="1426" endline="1467">icGetDeviceAttrName</references>
        <references refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" compoundref="d5/db1/a00140" startline="1056" endline="1085">icGetSigStr</references>
        <references refid="d9/d39/a00257_1a9df441a57e3659e7ae404779feaea9a3" compoundref="d5/d35/a00266" startline="1141" endline="1150">icGetTagSigTypeName</references>
        <references refid="d2/df3/a01085_1affae9212a7c184c302f80f09386188d5" compoundref="da/dec/a00080" startline="1500">CIccProfileDescStruct::m_attributes</references>
        <references refid="d2/df3/a01085_1a4daa3327f9b8127b5affb40f62440ae4" compoundref="da/dec/a00080" startline="1498">CIccProfileDescStruct::m_deviceMfg</references>
        <references refid="d2/df3/a01085_1a3c90a3b1e99c920e5ca48dbc8ce2cab7" compoundref="da/dec/a00080" startline="1502">CIccProfileDescStruct::m_deviceMfgDesc</references>
        <references refid="d2/df3/a01085_1a5c93d165339af67e85a09fdbfad051c2" compoundref="da/dec/a00080" startline="1499">CIccProfileDescStruct::m_deviceModel</references>
        <references refid="d2/df3/a01085_1ac85e36485dd846b824a87f31eb7da3f0" compoundref="da/dec/a00080" startline="1503">CIccProfileDescStruct::m_deviceModelDesc</references>
        <references refid="d2/df3/a01085_1a99f7828bc265a46c705e56f2156bf3d9" compoundref="da/dec/a00080" startline="1501">CIccProfileDescStruct::m_technology</references>
        <references refid="de/d3c/a01809_1a759cbaed8a0553bb035b9ff749052309">CIccTagXml::ToXml</references>
        <referencedby refid="d2/d54/a01917_1a61095812b67f06dc8269cd6db81e5cd0" compoundref="d0/d27/a00239" startline="2341" endline="2354">CIccTagXmlProfileSeqDesc::ToXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d27/a00239_1a99866e7756870ecb09e429ab2233f691" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool icXmlDumpTextData</definition>
        <argsstring>(std::string &amp;xml, std::string blanks, const char *szText, bool bConvert=true)</argsstring>
        <name>icXmlDumpTextData</name>
        <param>
          <type>std::string &amp;</type>
          <declname>xml</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>blanks</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>szText</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bConvert</declname>
          <defval><ref refid="d5/ddf/a00224_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccTagXml.cpp" line="124" column="13" bodyfile="IccXML/IccLibXML/IccTagXml.cpp" bodystart="124" bodyend="144"/>
        <references refid="d9/d39/a00257_1afb616c9224f7f0db7e412064a547dd42" compoundref="d5/d35/a00266" startline="372" endline="395">icAnsiToUtf8</references>
        <references refid="d9/d39/a00257_1aac906ed45d63b044aa871d3366c05c6f" compoundref="d5/d35/a00266" startline="648" endline="667">icXmlDumpHexData</references>
        <referencedby refid="d4/d29/a01817_1a688b7b93a2ecb5570694731062d95dd9" compoundref="d0/d27/a00239" startline="146" endline="149">CIccTagXmlText::ToXml</referencedby>
        <referencedby refid="de/d3d/a01821_1aa5c1dcf8aa1e84ca3ad2c7e72c26e197" compoundref="d0/d27/a00239" startline="151" endline="154">CIccTagXmlUtf8Text::ToXml</referencedby>
        <referencedby refid="db/dd5/a01833_1addd353fa8cdf6589dea0c13d0f1d507e" compoundref="d0/d27/a00239" startline="174" endline="178">CIccTagXmlUtf16Text::ToXml</referencedby>
        <referencedby refid="d7/db1/a01837_1a237b1ad09fe25ec7be340b0087a799ed" compoundref="d0/d27/a00239" startline="336" endline="378">CIccTagXmlTextDescription::ToXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d27/a00239_1a0f0f9f2d4fbf03932c3a2512b8d63410" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool icXmlParseProfDesc</definition>
        <argsstring>(xmlNode *pNode, CIccProfileDescStruct &amp;p, std::string &amp;parseStr)</argsstring>
        <name>icXmlParseProfDesc</name>
        <param>
          <type>xmlNode *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type><ref refid="d2/df3/a01085" kindref="compound">CIccProfileDescStruct</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>parseStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccTagXml.cpp" line="2257" column="6" bodyfile="IccXML/IccLibXML/IccTagXml.cpp" bodystart="2257" bodyend="2338"/>
        <references refid="de/d3c/a01809_1a67786e088d1e0f900a3aa28bb3499d2b" compoundref="d6/de1/a00233" startline="79" endline="79">CIccTagXml::GetExtClassName</references>
        <references refid="d7/dfd/a00969_1aa4cc7f1dd04e9b537738d1dfa96a9790" compoundref="da/dec/a00080" startline="143" endline="143">CIccTag::GetExtension</references>
        <references refid="dd/dee/a01081_1aa4678e864f3f11cf1cfb3ff583b79b95" compoundref="da/dec/a00080" startline="1468" endline="1468">CIccProfileDescText::GetTag</references>
        <references refid="d9/d39/a00257_1ab515209dc98599451e8def16c2cdee32" compoundref="d5/d35/a00266" startline="1344" endline="1375">icGetDeviceAttrValue</references>
        <references refid="d9/d39/a00257_1a7e4a8379f29fbaded2a4dd75b6222e55" compoundref="d5/d35/a00266" startline="1152" endline="1156">icGetTypeNameTagSig</references>
        <references refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" compoundref="d5/d35/a00266" startline="687" endline="701">icXmlFindNode</references>
        <references refid="d9/d39/a00257_1aeb7c91622f164201b2a5a0afe9cd3848" compoundref="d5/d35/a00266" startline="567" endline="570">icXmlStrToSig</references>
        <references refid="d2/df3/a01085_1affae9212a7c184c302f80f09386188d5" compoundref="da/dec/a00080" startline="1500">CIccProfileDescStruct::m_attributes</references>
        <references refid="d2/df3/a01085_1a4daa3327f9b8127b5affb40f62440ae4" compoundref="da/dec/a00080" startline="1498">CIccProfileDescStruct::m_deviceMfg</references>
        <references refid="d2/df3/a01085_1a3c90a3b1e99c920e5ca48dbc8ce2cab7" compoundref="da/dec/a00080" startline="1502">CIccProfileDescStruct::m_deviceMfgDesc</references>
        <references refid="d2/df3/a01085_1a5c93d165339af67e85a09fdbfad051c2" compoundref="da/dec/a00080" startline="1499">CIccProfileDescStruct::m_deviceModel</references>
        <references refid="d2/df3/a01085_1ac85e36485dd846b824a87f31eb7da3f0" compoundref="da/dec/a00080" startline="1503">CIccProfileDescStruct::m_deviceModelDesc</references>
        <references refid="d2/df3/a01085_1a99f7828bc265a46c705e56f2156bf3d9" compoundref="da/dec/a00080" startline="1501">CIccProfileDescStruct::m_technology</references>
        <references refid="de/d3c/a01809_1ab389ac02038775bf0a198ae68847d8a1">CIccTagXml::ParseXml</references>
        <references refid="dd/dee/a01081_1a810b999f96989574608c3502a6fa2f35" compoundref="d9/dd0/a00191" startline="9263" endline="9279">CIccProfileDescText::SetType</references>
        <referencedby refid="d2/d54/a01917_1a0b8bea51eaf695cd51933826c97e342f" compoundref="d0/d27/a00239" startline="2357" endline="2379">CIccTagXmlProfileSeqDesc::ParseXml</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d27/a00239_1a27a49e117d637e0073ff82ff83e0ed17" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string icXmlParseTextString</definition>
        <argsstring>(xmlNode *pNode, std::string &amp;parseStr, bool bConvert=true)</argsstring>
        <name>icXmlParseTextString</name>
        <param>
          <type>xmlNode *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>parseStr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bConvert</declname>
          <defval><ref refid="d5/ddf/a00224_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IccXML/IccLibXML/IccTagXml.cpp" line="180" column="20" bodyfile="IccXML/IccLibXML/IccTagXml.cpp" bodystart="180" bodyend="251"/>
        <references refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" compoundref="d9/d39/a00257" startline="165" endline="165">CIccXmlArrayType&lt; T, Tsig &gt;::GetBuf</references>
        <references refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" compoundref="df/d6a/a00119" startline="130" endline="130">CIccIO::GetLength</references>
        <references refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" compoundref="d9/d39/a00257" startline="166" endline="166">CIccXmlArrayType&lt; T, Tsig &gt;::GetSize</references>
        <references refid="d9/dd6/a00272_1a1787be4d01fe1c357f48a2e8531622a6" compoundref="d9/dd6/a00272" startline="100" endline="107">IccOpenFileIO</references>
        <references refid="d9/d39/a00257_1a17f6cde39ef474623e3b1082566bb5d3" compoundref="d5/d35/a00266" startline="397" endline="420">icUtf8ToAnsi</references>
        <references refid="d9/d39/a00257_1a459e22a536debe98c547657efa20b5ca" compoundref="d5/d35/a00266" startline="580" endline="587">icXmlAttrValue</references>
        <references refid="d9/d39/a00257_1a7e2e6f47df3c6baacbda01035dfbbbee" compoundref="d5/d35/a00266" startline="609" endline="628">icXmlGetHexData</references>
        <references refid="d9/d39/a00257_1a4798bcdc271228ef7083a57412803e06" compoundref="d5/d35/a00266" startline="630" endline="646">icXmlGetHexDataSize</references>
        <references refid="dc/d2c/a00893_1a95835f8ddc8b4e6915336b97268d0cba" compoundref="d9/d2e/a00056" startline="93" endline="112">CIccIO::ReadLine</references>
        <references refid="de/dd3/a01873_1a151862e8f9e6e5d7e3164fe2fe68ca97" compoundref="d5/d35/a00266" startline="1102" endline="1115">CIccXmlArrayType&lt; T, Tsig &gt;::SetSize</references>
        <referencedby refid="d4/d29/a01817_1a757fe0bdb33b7cbb0e9852c4437e01c3" compoundref="d0/d27/a00239" startline="253" endline="262">CIccTagXmlText::ParseXml</referencedby>
        <referencedby refid="de/d3d/a01821_1a592d4099cc73504f3e7ea7c36678ca20" compoundref="d0/d27/a00239" startline="264" endline="273">CIccTagXmlUtf8Text::ParseXml</referencedby>
        <referencedby refid="df/dee/a01825_1ab4d07b5329f5b3ce766c74386483f4aa" compoundref="d0/d27/a00239" startline="275" endline="298">CIccTagXmlZipUtf8Text::ParseXml</referencedby>
        <referencedby refid="d6/dbd/a01829_1aa486edc3eb28f3c08aaa29ccdf056f65" compoundref="d0/d27/a00239" startline="300" endline="323">CIccTagXmlZipXml::ParseXml</referencedby>
        <referencedby refid="db/dd5/a01833_1a99102f508957658b71a65d2b3701dc35" compoundref="d0/d27/a00239" startline="325" endline="334">CIccTagXmlUtf16Text::ParseXml</referencedby>
        <referencedby refid="d7/db1/a01837_1a90eeefd13346d44fe87970c91ca28287" compoundref="d0/d27/a00239" startline="381" endline="565">CIccTagXmlTextDescription::ParseXml</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>File: IccTagXML.cpp</para>
<para>Contains: Implementation ICC tag XML format conversions</para>
<para>Version: V1</para>
<para>Copyright: © see ICC Software License </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>ICC<sp/>Software<sp/>License,<sp/>Version<sp/>0.2</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2003-2012<sp/>The<sp/>International<sp/>Color<sp/>Consortium.<sp/>All<sp/>rights<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>3.<sp/>In<sp/>the<sp/>absence<sp/>of<sp/>prior<sp/>written<sp/>permission,<sp/>the<sp/>names<sp/>&quot;ICC&quot;<sp/>and<sp/>&quot;The</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>International<sp/>Color<sp/>Consortium&quot;<sp/>must<sp/>not<sp/>be<sp/>used<sp/>to<sp/>imply<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>ICC<sp/>organization<sp/>endorses<sp/>or<sp/>promotes<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>INTERNATIONAL<sp/>COLOR<sp/>CONSORTIUM<sp/>OR</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>ITS<sp/>CONTRIBUTING<sp/>MEMBERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>consists<sp/>of<sp/>voluntary<sp/>contributions<sp/>made<sp/>by<sp/>many</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>individuals<sp/>on<sp/>behalf<sp/>of<sp/>the<sp/>The<sp/>International<sp/>Color<sp/>Consortium.<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>Membership<sp/>in<sp/>the<sp/>ICC<sp/>is<sp/>encouraged<sp/>when<sp/>this<sp/>software<sp/>is<sp/>used<sp/>for</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>commercial<sp/>purposes.<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>For<sp/>more<sp/>information<sp/>on<sp/>The<sp/>International<sp/>Color<sp/>Consortium,<sp/>please</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>see<sp/>&lt;http://www.color.org/&gt;.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/de1/a00233" kindref="compound">IccTagXml.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/d40/a00236" kindref="compound">IccMpeXml.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/dce/a00143" kindref="compound">IccUtil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/d39/a00257" kindref="compound">IccUtilXml.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d2/dc8/a00242" kindref="compound">IccIoXml.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dd/d52/a00221" kindref="compound">IccSparseMatrix.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d5/d42/a00269" kindref="compound">IccProfileXml.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d1/d44/a00098" kindref="compound">IccStructFactory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="da/d2a/a00086" kindref="compound">IccArrayFactory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>C<sp/>strings<sp/>strcpy,<sp/>memcpy<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>to<sp/>include<sp/>this<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Include<sp/>this<sp/>header<sp/>for<sp/>setw<sp/>and<sp/>setfill</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="d0/d27/a00239_1a95bb65a2b3dfffdf39ecf2db53c1d82b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/>std::map&lt;icUInt32Number,<sp/>icTagSignature&gt;<sp/><ref refid="d0/d27/a00239_1a95bb65a2b3dfffdf39ecf2db53c1d82b" kindref="member">IccOffsetTagSigMap</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USEREFICCMAXNAMESPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">refIccMAX<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="d1/d20/a01813_1a0dfde7e786adbb11ce523c5a7b25a806" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d20/a01813_1a0dfde7e786adbb11ce523c5a7b25a806" kindref="member">CIccTagXmlUnknown::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;UnknownData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="d9/d39/a00257_1aac906ed45d63b044aa871d3366c05c6f" kindref="member">icXmlDumpHexData</ref>(xml,<sp/>blanks+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>m_pData,<sp/>m_nSize);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/UnknownData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="d1/d20/a01813_1aee9f44f9fd888c70919cb498f913b54f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d20/a01813_1aee9f44f9fd888c70919cb498f913b54f" kindref="member">CIccTagXmlUnknown::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tagType<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode-&gt;parent,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tagType)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nType<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref>)<ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>(tagType);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;UnknownData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode<sp/>&amp;&amp;<sp/>pNode-&gt;children<sp/>&amp;&amp;<sp/>pNode-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nSize<sp/>=<sp/><ref refid="d9/d39/a00257_1a4798bcdc271228ef7083a57412803e06" kindref="member">icXmlGetHexDataSize</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pData)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>m_pData;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_pData<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nSize)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_pData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref>[m_nSize];</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d9/d39/a00257_1a7e2e6f47df3c6baacbda01035dfbbbee" kindref="member">icXmlGetHexData</ref>(m_pData,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;children-&gt;content,<sp/>m_nSize)!=m_nSize)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="d0/d27/a00239_1a99866e7756870ecb09e429ab2233f691" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d27/a00239_1a99866e7756870ecb09e429ab2233f691" kindref="member">icXmlDumpTextData</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szText,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bConvert=</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(szText,<sp/></highlight><highlight class="stringliteral">&quot;]]&gt;&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;HexTextData&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1aac906ed45d63b044aa871d3366c05c6f" kindref="member">icXmlDumpHexData</ref>(xml,<sp/>blanks+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)szText,<sp/>(<ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref>)strlen(szText));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/HexTextData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>buf;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;TextData&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&lt;![CDATA[&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bConvert)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/><ref refid="d9/d39/a00257_1afb616c9224f7f0db7e412064a547dd42" kindref="member">icAnsiToUtf8</ref>(buf,<sp/>szText);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>szText;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;]]&gt;&lt;/TextData&gt;\n&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="d4/d29/a01817_1a688b7b93a2ecb5570694731062d95dd9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d29/a01817_1a688b7b93a2ecb5570694731062d95dd9" kindref="member">CIccTagXmlText::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d0/d27/a00239_1a99866e7756870ecb09e429ab2233f691" kindref="member">icXmlDumpTextData</ref>(xml,<sp/>blanks,<sp/>m_szText);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="de/d3d/a01821_1aa5c1dcf8aa1e84ca3ad2c7e72c26e197" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d3d/a01821_1aa5c1dcf8aa1e84ca3ad2c7e72c26e197" kindref="member">CIccTagXmlUtf8Text::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d0/d27/a00239_1a99866e7756870ecb09e429ab2233f691" kindref="member">icXmlDumpTextData</ref>(xml,<sp/>blanks,<sp/>(<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)m_szText,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="df/dee/a01825_1a99b62f8f9b01a7cc73b7ae61e22afd7e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/dee/a01825_1a99b62f8f9b01a7cc73b7ae61e22afd7e" kindref="member">CIccTagXmlZipUtf8Text::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;HexCompressedData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="d9/d39/a00257_1aac906ed45d63b044aa871d3366c05c6f" kindref="member">icXmlDumpHexData</ref>(xml,<sp/>blanks+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>m_pZipBuf,<sp/>m_nBufSize);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/HexCompressedData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="d6/dbd/a01829_1aaa6a624e24c433cb8334c73d9e700ac6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/dbd/a01829_1aaa6a624e24c433cb8334c73d9e700ac6" kindref="member">CIccTagXmlZipXml::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;HexCompressedData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><ref refid="d9/d39/a00257_1aac906ed45d63b044aa871d3366c05c6f" kindref="member">icXmlDumpHexData</ref>(xml,<sp/>blanks+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>m_pZipBuf,<sp/>m_nBufSize);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/HexCompressedData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="db/dd5/a01833_1addd353fa8cdf6589dea0c13d0f1d507e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/dd5/a01833_1addd353fa8cdf6589dea0c13d0f1d507e" kindref="member">CIccTagXmlUtf16Text::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>std::string<sp/>buf;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d0/d27/a00239_1a99866e7756870ecb09e429ab2233f691" kindref="member">icXmlDumpTextData</ref>(xml,<sp/>blanks,<sp/>GetText(buf),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="d0/d27/a00239_1a27a49e117d637e0073ff82ff83e0ed17" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d0/d27/a00239_1a27a49e117d637e0073ff82ff83e0ed17" kindref="member">icXmlParseTextString</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bConvert<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>std::string<sp/>str;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pNode)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type==XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;HexTextData&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>pNode-&gt;children<sp/>&amp;&amp;<sp/>pNode-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccUInt8Array</ref><sp/>buf;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buf.<ref refid="de/dd3/a01873_1a151862e8f9e6e5d7e3164fe2fe68ca97" kindref="member">SetSize</ref>(<ref refid="d9/d39/a00257_1a4798bcdc271228ef7083a57412803e06" kindref="member">icXmlGetHexDataSize</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;children-&gt;content)<sp/>||</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1a7e2e6f47df3c6baacbda01035dfbbbee" kindref="member">icXmlGetHexData</ref>(buf.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>(),<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;children-&gt;content,<sp/>buf.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>())!=buf.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()))</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)buf.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;TextData&quot;</highlight><highlight class="normal">)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>buf;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*filename<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;File&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filename[0])<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d2c/a00893" kindref="compound">CIccIO</ref><sp/>*file<sp/>=<sp/><ref refid="d9/dd6/a00272_1a1787be4d01fe1c357f48a2e8531622a6" kindref="member">IccOpenFileIO</ref>(filename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>File<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=</highlight><highlight class="stringliteral">&quot;&apos;<sp/>not<sp/>found.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>fileLength<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>();<sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ansiStr<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(fileLength+1);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ansiStr)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Memory<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="dc/d2c/a00893_1a95835f8ddc8b4e6915336b97268d0cba" kindref="member">ReadLine</ref>(ansiStr,<sp/>fileLength)!=fileLength)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>while<sp/>reading<sp/>file<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;.<sp/>Size<sp/>read<sp/>is<sp/>not<sp/>equal<sp/>to<sp/>file<sp/>length.<sp/>File<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(ansiStr);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>utf8<sp/>(xml<sp/>format)<sp/>to<sp/>ansi<sp/>(icc<sp/>format)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bConvert)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1a17f6cde39ef474623e3b1082566bb5d3" kindref="member">icUtf8ToAnsi</ref>(buf,<sp/>ansiStr);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>ansiStr;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(ansiStr);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>does<sp/>not<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;children<sp/>&amp;&amp;<sp/>pNode-&gt;children-&gt;content){</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bConvert)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1a17f6cde39ef474623e3b1082566bb5d3" kindref="member">icUtf8ToAnsi</ref>(buf,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;children-&gt;content);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;children-&gt;content;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/>buf;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>pNode<sp/>=<sp/>pNode-&gt;next;<sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="d4/d29/a01817_1a757fe0bdb33b7cbb0e9852c4437e01c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d29/a01817_1a757fe0bdb33b7cbb0e9852c4437e01c3" kindref="member">CIccTagXmlText::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>std::string<sp/>str<sp/>=<sp/><ref refid="d0/d27/a00239_1a27a49e117d637e0073ff82ff83e0ed17" kindref="member">icXmlParseTextString</ref>(pNode,<sp/>parseStr);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!str.empty()){<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>SetText(str.c_str());</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="de/d3d/a01821_1a592d4099cc73504f3e7ea7c36678ca20" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d3d/a01821_1a592d4099cc73504f3e7ea7c36678ca20" kindref="member">CIccTagXmlUtf8Text::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>std::string<sp/>str<sp/>=<sp/><ref refid="d0/d27/a00239_1a27a49e117d637e0073ff82ff83e0ed17" kindref="member">icXmlParseTextString</ref>(pNode,<sp/>parseStr,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!str.empty()){<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>SetText(str.c_str());</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="df/dee/a01825_1ab4d07b5329f5b3ce766c74386483f4aa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/dee/a01825_1ab4d07b5329f5b3ce766c74386483f4aa" kindref="member">CIccTagXmlZipUtf8Text::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pNode)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type==XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;HexCompressedData&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>pNode-&gt;children<sp/>&amp;&amp;<sp/>pNode-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccUInt8Array</ref><sp/>buf;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buf.<ref refid="de/dd3/a01873_1a151862e8f9e6e5d7e3164fe2fe68ca97" kindref="member">SetSize</ref>(<ref refid="d9/d39/a00257_1a4798bcdc271228ef7083a57412803e06" kindref="member">icXmlGetHexDataSize</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;children-&gt;content)<sp/>||</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1a7e2e6f47df3c6baacbda01035dfbbbee" kindref="member">icXmlGetHexData</ref>(buf.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>(),<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;children-&gt;content,<sp/>buf.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>())!=buf.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()))</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocBuffer(buf.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nBufSize<sp/>&amp;&amp;<sp/>m_pZipBuf)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(m_pZipBuf,<sp/>buf.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>(),<sp/>m_nBufSize);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>pNode<sp/>=<sp/>pNode-&gt;next;<sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>std::string<sp/>str<sp/>=<sp/><ref refid="d0/d27/a00239_1a27a49e117d637e0073ff82ff83e0ed17" kindref="member">icXmlParseTextString</ref>(pNode,<sp/>parseStr,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SetText(str.c_str());</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="d6/dbd/a01829_1aa486edc3eb28f3c08aaa29ccdf056f65" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/dbd/a01829_1aa486edc3eb28f3c08aaa29ccdf056f65" kindref="member">CIccTagXmlZipXml::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pNode)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type==XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;HexCompressedData&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>pNode-&gt;children<sp/>&amp;&amp;<sp/>pNode-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccUInt8Array</ref><sp/>buf;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buf.<ref refid="de/dd3/a01873_1a151862e8f9e6e5d7e3164fe2fe68ca97" kindref="member">SetSize</ref>(<ref refid="d9/d39/a00257_1a4798bcdc271228ef7083a57412803e06" kindref="member">icXmlGetHexDataSize</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;children-&gt;content)<sp/>||</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1a7e2e6f47df3c6baacbda01035dfbbbee" kindref="member">icXmlGetHexData</ref>(buf.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>(),<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;children-&gt;content,<sp/>buf.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>())!=buf.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()))</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocBuffer(buf.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nBufSize<sp/>&amp;&amp;<sp/>m_pZipBuf)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(m_pZipBuf,<sp/>buf.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>(),<sp/>m_nBufSize);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>pNode<sp/>=<sp/>pNode-&gt;next;<sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>std::string<sp/>str<sp/>=<sp/><ref refid="d0/d27/a00239_1a27a49e117d637e0073ff82ff83e0ed17" kindref="member">icXmlParseTextString</ref>(pNode,<sp/>parseStr,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SetText(str.c_str());</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="db/dd5/a01833_1a99102f508957658b71a65d2b3701dc35" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/dd5/a01833_1a99102f508957658b71a65d2b3701dc35" kindref="member">CIccTagXmlUtf16Text::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>std::string<sp/>str<sp/>=<sp/><ref refid="d0/d27/a00239_1a27a49e117d637e0073ff82ff83e0ed17" kindref="member">icXmlParseTextString</ref>(pNode,<sp/>parseStr,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!str.empty()){<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>SetText(str.c_str());</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="d7/db1/a01837_1a237b1ad09fe25ec7be340b0087a799ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d7/db1/a01837_1a237b1ad09fe25ec7be340b0087a799ed" kindref="member">CIccTagXmlTextDescription::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>fix;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>buf;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data[256];<sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>the<sp/>size<sp/>as<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>datastr;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d27/a00239_1a99866e7756870ecb09e429ab2233f691" kindref="member">icXmlDumpTextData</ref>(xml,<sp/>blanks,<sp/>m_szText);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Added<sp/>support<sp/>for<sp/>&lt;![CData[Insert<sp/>Text<sp/>here]]&gt;<sp/>for<sp/>Unicode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_uzUnicodeText[0])<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nUnicodeLanguageCode<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;Unicode&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(data,<sp/>m_nUnicodeLanguageCode);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/>data);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;Unicode<sp/>LanguageCode=\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>fix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1a9f320f9caf10d93233cccf39049a5992" kindref="member">icUtf16ToUtf8</ref>(datastr,<sp/>m_uzUnicodeText);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/>datastr.c_str());</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;![CDATA[&quot;</highlight><highlight class="normal"><sp/>+<sp/>fix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]]&gt;&lt;/Unicode&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nScriptSize)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;MacScript<sp/>ScriptCode=\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(m_nScriptCode)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_nScriptSize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>std::uppercase<sp/>&lt;&lt;<sp/>std::setw(2)<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_szScriptText[i]));</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>ss.str();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&lt;/MacScript&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="d7/db1/a01837_1a90eeefd13346d44fe87970c91ca28287" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d7/db1/a01837_1a90eeefd13346d44fe87970c91ca28287" kindref="member">CIccTagXmlTextDescription::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;TextData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>support<sp/>for<sp/>reading<sp/>desc,<sp/>dmmd,<sp/>and<sp/>dmnd<sp/>tags<sp/>from<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(!pNode<sp/>||<sp/>!pNode-&gt;children)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pNode)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>search<sp/>for<sp/>&quot;file&quot;<sp/>attribute<sp/>in<sp/>&lt;TextDescription/&gt;<sp/>tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*filename<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;File&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filename[0])<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d2c/a00893" kindref="compound">CIccIO</ref><sp/>*file<sp/>=<sp/><ref refid="d9/dd6/a00272_1a1787be4d01fe1c357f48a2e8531622a6" kindref="member">IccOpenFileIO</ref>(filename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file){</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>File<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=</highlight><highlight class="stringliteral">&quot;&apos;<sp/>not<sp/>found.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>fileLength<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>();<sp/><sp/></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(fileLength);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buf)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Memory<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="dc/d2c/a00893_1a95835f8ddc8b4e6915336b97268d0cba" kindref="member">ReadLine</ref>(buf,<sp/>fileLength)!=fileLength)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>while<sp/>reading<sp/>file<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;.<sp/>Size<sp/>read<sp/>is<sp/>not<sp/>equal<sp/>to<sp/>file<sp/>length.<sp/>File<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(buf);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>ANSII<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>ansiStr;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1a17f6cde39ef474623e3b1082566bb5d3" kindref="member">icUtf8ToAnsi</ref>(ansiStr,<sp/>buf);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>nStrSize<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref>)ansiStr.size();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>GetBuffer(nStrSize);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nStrSize)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(m_szText,<sp/>ansiStr.c_str(),<sp/>nStrSize);<sp/><sp/></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nASCIISize<sp/>=<sp/>nStrSize<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_szText[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>Unicode<sp/>String</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089" kindref="compound">CIccUTF16String</ref><sp/>wstr(buf);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>nStrSize<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref>)wstr.<ref refid="db/ddd/a02089_1ae2ca9e6072ed8f9d6df5c73653128d73" kindref="member">Size</ref>();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>m_uzUnicodeText<sp/>=<sp/>GetUnicodeBuffer(nStrSize);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nStrSize)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assign<sp/>each<sp/>entry<sp/>in<sp/>wstr<sp/>to<sp/>m_uzUnicodeText</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>(int)<sp/>nStrSize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_uzUnicodeText[i]<sp/>=<sp/>wstr[i];</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>include<sp/>the<sp/>null<sp/>termintor<sp/>in<sp/>the<sp/>string<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nUnicodeSize<sp/>=<sp/>nStrSize<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_uzUnicodeText[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>ScriptCode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nScriptCode=0;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nScriptSize<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref>)<sp/>fileLength<sp/>+<sp/>1;<sp/><sp/></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(m_szScriptText,<sp/>buf,<sp/>67);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>does<sp/>not<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str<sp/>=<sp/><ref refid="d0/d27/a00239_1a27a49e117d637e0073ff82ff83e0ed17" kindref="member">icXmlParseTextString</ref>(pNode,<sp/>parseStr);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>nSize<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref>)str.size();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*pBuf<sp/>=<sp/>GetBuffer(nSize);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSize)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(m_szText,<sp/>str.c_str(),<sp/>nSize);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>include<sp/>the<sp/>null<sp/>termintor<sp/>in<sp/>the<sp/>string<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nASCIISize<sp/>=<sp/>nSize<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_szText[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>Release();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>support<sp/>for<sp/>automatically<sp/>generating<sp/>unicode<sp/>and<sp/>scriptcode<sp/>tags<sp/>if<sp/>these<sp/>do<sp/>not<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exist<sp/>in<sp/>the<sp/>XML<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>unicodeExists<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scriptcodeExists<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;pNode;<sp/>pNode<sp/>=<sp/>pNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type==XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;Unicode&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*pRegion<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;LanguageCode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*pRegion<sp/>may<sp/>not<sp/>have<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pRegion<sp/>&amp;&amp;<sp/></highlight><highlight class="comment">/*<sp/>*pRegion<sp/>&amp;&amp;<sp/>*/</highlight><highlight class="normal">pNode-&gt;children<sp/>&amp;&amp;<sp/>pNode-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089" kindref="compound">CIccUTF16String</ref><sp/>wstr((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSize<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref>)wstr.<ref refid="db/ddd/a02089_1ae2ca9e6072ed8f9d6df5c73653128d73" kindref="member">Size</ref>();</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>size<sp/>of<sp/>m_uzUnicodeText</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_uzUnicodeText<sp/>=<sp/>GetUnicodeBuffer(nSize);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSize)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assign<sp/>each<sp/>entry<sp/>in<sp/>wstr<sp/>to<sp/>m_uzUnicodeText</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>(int)<sp/>nSize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_uzUnicodeText[i]<sp/>=<sp/>wstr[i];</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>include<sp/>the<sp/>null<sp/>termintor<sp/>in<sp/>the<sp/>string<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nUnicodeSize<sp/>=<sp/>nSize<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unicodeExists<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_uzUnicodeText[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;MacScript&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*pScript<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;ScriptCode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pScript<sp/>&amp;&amp;<sp/>*pScript)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>nCode=0;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(pScript,<sp/></highlight><highlight class="stringliteral">&quot;%x&quot;</highlight><highlight class="normal">,<sp/>&amp;nCode);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nScriptCode<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)nCode;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;children<sp/>&amp;&amp;<sp/>pNode-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>m_nScriptSize<sp/>as<sp/>receiver<sp/>the<sp/>return<sp/>value<sp/>of<sp/>icXmlGetHexData</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>need<sp/>to<sp/>add<sp/>1<sp/>since<sp/>the<sp/>return<sp/>value<sp/>is<sp/>already<sp/>exact.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nScriptSize<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref>)<sp/><ref refid="d9/d39/a00257_1a7e2e6f47df3c6baacbda01035dfbbbee" kindref="member">icXmlGetHexData</ref>(m_szScriptText,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_szScriptText));</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptcodeExists<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_szScriptText[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>automatically<sp/>generate<sp/>unicode<sp/>tag<sp/>in<sp/>the<sp/>profile<sp/>if<sp/>it<sp/>does<sp/>not<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!unicodeExists){<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_uzUnicodeText<sp/>=<sp/>GetUnicodeBuffer(nSize);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSize)<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assign<sp/>each<sp/>entry<sp/>in<sp/>wstr<sp/>to<sp/>m_uzUnicodeText</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>(int)<sp/>nSize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_uzUnicodeText[i]<sp/>=<sp/>str[i];</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>include<sp/>the<sp/>null<sp/>termintor<sp/>in<sp/>the<sp/>string<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nUnicodeSize<sp/>=<sp/>nSize<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_uzUnicodeText[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>automatically<sp/>generate<sp/>scriptcode<sp/>tag<sp/>in<sp/>the<sp/>profile<sp/>if<sp/>it<sp/>does<sp/>not<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!scriptcodeExists){</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nScriptCode=0;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nScriptSize<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref>)m_nASCIISize;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(m_szScriptText,<sp/>m_szText,<sp/>67);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="d2/d5b/a01841_1a7c57572003c894b3bdbf12ef6dcd7c83" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d5b/a01841_1a7c57572003c894b3bdbf12ef6dcd7c83" kindref="member">CIccTagXmlSignature::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="569"><highlight class="normal">{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fix[40];</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[40];</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;Signature&gt;%s&lt;/Signature&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>m_nSig)));</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581" refid="d2/d5b/a01841_1a9b1f2dbf0af9bb05e4c92e5c6615ba56" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d5b/a01841_1a9b1f2dbf0af9bb05e4c92e5c6615ba56" kindref="member">CIccTagXmlSignature::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Signature&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;SetValue(<ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>(pNode-&gt;children<sp/>?<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;children-&gt;content<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592" refid="d9/d90/a01909_1a2aaf089230461749006fb254d588fb86" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d90/a01909_1a2aaf089230461749006fb254d588fb86" kindref="member">CIccTagXmlSpectralDataInfo::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fix[40];</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[40];</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;SpectralSpace&gt;%s&lt;/SpectralSpace&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1afba0058b0369309aa83134b2437ce717" kindref="member">icGetColorSigStr</ref>(buf,<sp/>m_nSig)));</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;SpectralRange&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;Wavelengths<sp/>start=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>end=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>steps=\&quot;%d\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_spectralRange.start),<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_spectralRange.end),<sp/>m_spectralRange.steps);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/SpectralRange&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_biSpectralRange.steps)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=blanks<sp/>+<sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;BiSpectralRange&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;Wavelengths<sp/>start=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>end=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>steps=\&quot;%d\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_biSpectralRange.start),<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_biSpectralRange.end),<sp/>m_biSpectralRange.steps);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/BiSpectralRange&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617" refid="d9/d90/a01909_1a8de3d30fbcc00445ce544ae23fc47607" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d90/a01909_1a8de3d30fbcc00445ce544ae23fc47607" kindref="member">CIccTagXmlSpectralDataInfo::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="618"><highlight class="normal">{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pChild;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;SpectralSpace&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>SpectralSpace<sp/>section<sp/>found\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>m_nSig<sp/>=<sp/><ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>(pChild-&gt;children<sp/>?<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pChild-&gt;children-&gt;content<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;SpectralRange&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>SpectralRange<sp/>section<sp/>found\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pChild-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;Wavelengths&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;SpectralRange<sp/>missing<sp/>Wavelengths\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>m_spectralRange.start<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>((<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>m_spectralRange.end<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>((<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>m_spectralRange.steps<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;steps&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;BiSpectralRange&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild)<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pChild-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;Wavelengths&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_biSpectralRange.start<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>((<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_biSpectralRange.end<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>((<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_biSpectralRange.steps<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;steps&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655" refid="da/d8c/a01845_1ac311b1efcaa76a914e7e1f8f077dd828" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d8c/a01845_1ac311b1efcaa76a914e7e1f8f077dd828" kindref="member">CIccTagXmlNamedColor2::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fix[256];</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>std::string<sp/>str;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;NamedColors<sp/>VendorFlag=\&quot;%08x\&quot;<sp/>CountOfDeviceCoords=\&quot;%d\&quot;<sp/>DeviceEncoding=\&quot;int16\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nVendorFlags,<sp/>m_nDeviceCoords);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Prefix=\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d9/d39/a00257_1afb616c9224f7f0db7e412064a547dd42" kindref="member">icAnsiToUtf8</ref>(str,<sp/>m_szPrefix)));</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Suffix=\&quot;%s\&quot;&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d9/d39/a00257_1afb616c9224f7f0db7e412064a547dd42" kindref="member">icAnsiToUtf8</ref>(str,<sp/>m_szSufix)));</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_nSize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d06/a01005" kindref="compound">SIccNamedColorEntry</ref><sp/>*pEntry=<sp/>GetEntry(i);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szNodeName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntry)<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_csPCS==<ref refid="d7/d46/a00002_1a61e8bac86860cdefe93533feac126917a0925d8599ecad36e7cc572c5ba1cd07f" kindref="member">icSigLabData</ref>)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>lab[3];</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lab2ToLab4(lab,<sp/>pEntry-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/dce/a00143_1ac5de02865f572ea243f6da8c144c02fa" kindref="member">icLabFromPcs</ref>(lab);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szNodeName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;LabNamedColor&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;%s<sp/>Name=\&quot;%s\&quot;<sp/>L=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>a=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>b=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">,<sp/>szNodeName,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d9/d39/a00257_1afb616c9224f7f0db7e412064a547dd42" kindref="member">icAnsiToUtf8</ref>(str,<sp/>pEntry-&gt;<ref refid="d7/d06/a01005_1a64d25f228c0e30737feb7a8eda485a41" kindref="member">rootName</ref>)),<sp/>lab[0],<sp/>lab[1],<sp/>lab[2]);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>xyz[3];</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(xyz,<sp/>pEntry-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>,<sp/>3*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>));</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/dce/a00143_1a78841df2e0aea059520ce71944c4c3bb" kindref="member">icXyzFromPcs</ref>(xyz);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szNodeName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;XYZNamedColor&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;%s<sp/>Name=\&quot;%s\&quot;<sp/>X=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Y=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Z=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">,<sp/>szNodeName,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d9/d39/a00257_1afb616c9224f7f0db7e412064a547dd42" kindref="member">icAnsiToUtf8</ref>(str,<sp/>pEntry-&gt;<ref refid="d7/d06/a01005_1a64d25f228c0e30737feb7a8eda485a41" kindref="member">rootName</ref>)),<sp/>xyz[0],<sp/>xyz[1],<sp/>xyz[2]);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_nDeviceCoords)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;(int)m_nDeviceCoords;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j)</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml+=</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(pEntry-&gt;<ref refid="d7/d06/a01005_1a0a9b0ffa6221220cf476616062b5c928" kindref="member">deviceCoords</ref>[j]<sp/>*<sp/>65535.0<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>szNodeName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;/NamedColors&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721" refid="da/d8c/a01845_1afc82bcf77ee741c29ea0679efa73cbdd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d8c/a01845_1afc82bcf77ee741c29ea0679efa73cbdd" kindref="member">CIccTagXmlNamedColor2::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="722"><highlight class="normal">{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;NamedColors&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode)<sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*szVendorFlags<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;VendorFlag&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*szDeviceCoords<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;CountOfDeviceCoords&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*szDeviceEncoding<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;DeviceEncoding&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*szPrefix<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Prefix&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*szSufix<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Suffix&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(szVendorFlags<sp/>&amp;&amp;<sp/>*szVendorFlags<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>szDeviceCoords<sp/>&amp;&amp;<sp/>*szDeviceCoords<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>szDeviceEncoding<sp/>&amp;&amp;<sp/>*szDeviceEncoding<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>szPrefix<sp/>&amp;&amp;<sp/>szSufix)<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>str;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(szVendorFlags,<sp/></highlight><highlight class="stringliteral">&quot;%x&quot;</highlight><highlight class="normal">,<sp/>&amp;m_nVendorFlags);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(m_szPrefix,<sp/><ref refid="d9/d39/a00257_1a17f6cde39ef474623e3b1082566bb5d3" kindref="member">icUtf8ToAnsi</ref>(str,<sp/>szPrefix),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_szPrefix));</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_szPrefix[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_szPrefix)-1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(m_szSufix,<sp/><ref refid="d9/d39/a00257_1a17f6cde39ef474623e3b1082566bb5d3" kindref="member">icUtf8ToAnsi</ref>(str,<sp/>szSufix),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_szSufix));</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_szSufix[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_szSufix)-1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nDeviceCoords<sp/>=<sp/>atoi(szDeviceCoords);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>n<sp/>=<sp/><ref refid="d9/d39/a00257_1a2a556605d5fd8e4ff5ab461f13e64c55" kindref="member">icXmlNodeCount3</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;NamedColor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LabNamedColor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;XYZNamedColor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(n,<sp/>m_nDeviceCoords);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d06/a01005" kindref="compound">SIccNamedColorEntry</ref><sp/>*pNamedColor<sp/>=<sp/>m_NamedColor;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0,<sp/>pNode=pNode-&gt;children;<sp/>pNode;<sp/>pNode=pNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*szName<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;NamedColor&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i&lt;n)<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szName<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*L<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;L&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*a<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*b<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(L<sp/>&amp;&amp;<sp/>a<sp/>&amp;&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNamedColor-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>[0]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(L));</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNamedColor-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>[1]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(a));</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNamedColor-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>[2]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(b));</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/dce/a00143_1a5768271d491af79a433e52722ed0a189" kindref="member">icLabToPcs</ref>(pNamedColor-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lab4ToLab2(pNamedColor-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>,<sp/>pNamedColor-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*x<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*y<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*z<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&amp;&amp;<sp/>y<sp/>&amp;&amp;<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNamedColor-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>[0]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(x));</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNamedColor-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>[1]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(y));</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNamedColor-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>[2]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(z));</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/dce/a00143_1a4b4cfb7788c3a780f19f2f104677a5b8" kindref="member">icXyzToPcs</ref>(pNamedColor-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;LabNamedColor&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szName<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*L<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;L&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*a<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*b<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(L<sp/>&amp;&amp;<sp/>a<sp/>&amp;&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNamedColor-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>[0]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(L));</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNamedColor-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>[1]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(a));</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNamedColor-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>[2]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(b));</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/dce/a00143_1a5768271d491af79a433e52722ed0a189" kindref="member">icLabToPcs</ref>(pNamedColor-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lab4ToLab2(pNamedColor-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>,<sp/>pNamedColor-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;XYZNamedColor&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szName<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*x<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*y<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*z<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&amp;&amp;<sp/>y<sp/>&amp;&amp;<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNamedColor-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>[0]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(x));</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNamedColor-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>[1]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(y));</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNamedColor-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>[2]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(z));</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/dce/a00143_1a4b4cfb7788c3a780f19f2f104677a5b8" kindref="member">icXyzToPcs</ref>(pNamedColor-&gt;<ref refid="d7/d06/a01005_1ad4725f789754651c67c722de12f52936" kindref="member">pcsCoords</ref>);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(szName)<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(pNamedColor-&gt;<ref refid="d7/d06/a01005_1a64d25f228c0e30737feb7a8eda485a41" kindref="member">rootName</ref>,<sp/><ref refid="d9/d39/a00257_1a17f6cde39ef474623e3b1082566bb5d3" kindref="member">icUtf8ToAnsi</ref>(str,<sp/>szName),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pNamedColor-&gt;<ref refid="d7/d06/a01005_1a64d25f228c0e30737feb7a8eda485a41" kindref="member">rootName</ref>));</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNamedColor-&gt;<ref refid="d7/d06/a01005_1a64d25f228c0e30737feb7a8eda485a41" kindref="member">rootName</ref>[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pNamedColor-&gt;<ref refid="d7/d06/a01005_1a64d25f228c0e30737feb7a8eda485a41" kindref="member">rootName</ref>)<sp/>-<sp/>1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nDeviceCoords<sp/>&amp;&amp;<sp/>pNode-&gt;children)<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szDeviceEncoding,<sp/></highlight><highlight class="stringliteral">&quot;int8&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccUInt8Array</ref><sp/>coords;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords.<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">ParseArray</ref>(pNode-&gt;children);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*pBuf<sp/>=<sp/>coords.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>j;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>m_nDeviceCoords<sp/>&amp;&amp;<sp/>j<sp/>&lt;<sp/>coords.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNamedColor-&gt;<ref refid="d7/d06/a01005_1a0a9b0ffa6221220cf476616062b5c928" kindref="member">deviceCoords</ref>[j]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)pBuf[i]<sp/>/<sp/>255.0f;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szDeviceEncoding,<sp/></highlight><highlight class="stringliteral">&quot;int16&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccUInt16Array</ref><sp/>coords;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords.<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">ParseArray</ref>(pNode-&gt;children);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>*pBuf<sp/>=<sp/>coords.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>j;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>m_nDeviceCoords<sp/>&amp;&amp;<sp/>j<sp/>&lt;<sp/>coords.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNamedColor-&gt;<ref refid="d7/d06/a01005_1a0a9b0ffa6221220cf476616062b5c928" kindref="member">deviceCoords</ref>[j]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)pBuf[i]<sp/>/<sp/>65535.0f;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szDeviceEncoding,<sp/></highlight><highlight class="stringliteral">&quot;float&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccFloatArray</ref><sp/>coords;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords.<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">ParseArray</ref>(pNode-&gt;children);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*pBuf<sp/>=<sp/>coords.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>j;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>m_nDeviceCoords<sp/>&amp;&amp;<sp/>j<sp/>&lt;<sp/>coords.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNamedColor-&gt;<ref refid="d7/d06/a01005_1a0a9b0ffa6221220cf476616062b5c928" kindref="member">deviceCoords</ref>[j]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)pBuf[i];</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNamedColor<sp/>=<sp/>(<ref refid="d7/d06/a01005" kindref="compound">SIccNamedColorEntry</ref>*)((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNamedColor<sp/>+<sp/>m_nColorEntrySize);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i==n;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880" refid="db/dd4/a01849_1a66ea1e1bb45e3b2623c22b301424cd85" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/dd4/a01849_1a66ea1e1bb45e3b2623c22b301424cd85" kindref="member">CIccTagXmlXYZ::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="881"><highlight class="normal">{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_nSize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;XYZNumber<sp/>X=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Y=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Z=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="d7/dce/a00143_1a52fc751ce015924f9655f8288813a02c" kindref="member">icFtoD</ref>(m_XYZ[i].X),</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="d7/dce/a00143_1a52fc751ce015924f9655f8288813a02c" kindref="member">icFtoD</ref>(m_XYZ[i].Y),</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="d7/dce/a00143_1a52fc751ce015924f9655f8288813a02c" kindref="member">icFtoD</ref>(m_XYZ[i].Z));</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="892"><highlight class="normal">}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895" refid="db/dd4/a01849_1ad1128c315377cd9d17f38fb32f6a221d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/dd4/a01849_1ad1128c315377cd9d17f38fb32f6a221d" kindref="member">CIccTagXmlXYZ::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="896"><highlight class="normal">{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>n<sp/>=<sp/><ref refid="d9/d39/a00257_1a4020a24172a2a573879d8cb257522a72" kindref="member">icXmlNodeCount</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;XYZNumber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>SetSize(n);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>pNode;<sp/>pNode=pNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;XYZNumber&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i&lt;n)<sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*x<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*y<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*z<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&amp;&amp;<sp/>y<sp/>&amp;&amp;<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_XYZ[i].X<sp/>=<sp/><ref refid="d7/dce/a00143_1a4a143eb09493d53cb1f7252819615498" kindref="member">icDtoF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(x)));</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_XYZ[i].Y<sp/>=<sp/><ref refid="d7/dce/a00143_1a4a143eb09493d53cb1f7252819615498" kindref="member">icDtoF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(y)));</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_XYZ[i].Z<sp/>=<sp/><ref refid="d7/dce/a00143_1a4a143eb09493d53cb1f7252819615498" kindref="member">icDtoF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(z)));</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i==n;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="924"><highlight class="normal">}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927" refid="db/d6b/a01853_1a4651f6e4b37317d021eb814da704ad1d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/d6b/a01853_1a4651f6e4b37317d021eb814da704ad1d" kindref="member">CIccTagXmlChromaticity::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="928"><highlight class="normal">{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><ref refid="dc/d2f/a00425" kindref="compound">CIccInfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;Colorant&gt;%s&lt;/Colorant&gt;\n&quot;</highlight><highlight class="normal">,info.<ref refid="dc/d2f/a00425_1a1db3c9bc71c0972a0d9d147b17a34ee9" kindref="member">GetColorantEncoding</ref>((<ref refid="d7/d46/a00002_1a2b2782f9ad3719ac6197c1f3d9816132" kindref="member">icColorantEncoding</ref>)m_nColorantType));</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_nChannels;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;Channel<sp/>x=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;f\&quot;<sp/>y=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="d7/dce/a00143_1acff132c5f00fb71997980443159e779a" kindref="member">icUFtoD</ref>(m_xy[i].x),</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="d7/dce/a00143_1acff132c5f00fb71997980443159e779a" kindref="member">icUFtoD</ref>(m_xy[i].y));</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946" refid="db/d6b/a01853_1a49d8593f3fb56d4d0d418ede2184fa79" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/d6b/a01853_1a49d8593f3fb56d4d0d418ede2184fa79" kindref="member">CIccTagXmlChromaticity::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="947"><highlight class="normal">{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Colorant&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nColorantType<sp/>=<sp/><ref refid="d9/d39/a00257_1a2e2198cd437d3c36ae2040acba4a07e7" kindref="member">icGetColorantValue</ref>(pNode-&gt;children<sp/>?<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;children-&gt;content<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>n<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)<ref refid="d9/d39/a00257_1a4020a24172a2a573879d8cb257522a72" kindref="member">icXmlNodeCount</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Channel&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>SetSize(n);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>pNode;<sp/>pNode=pNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;Channel&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i&lt;n)<sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*x<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*y<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&amp;&amp;<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_xy[i].x<sp/>=<sp/><ref refid="d7/dce/a00143_1abfd4ddeca69a5b9e5d78747e0e4d9459" kindref="member">icDtoUF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(x)));</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_xy[i].y<sp/>=<sp/><ref refid="d7/dce/a00143_1abfd4ddeca69a5b9e5d78747e0e4d9459" kindref="member">icDtoUF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(y)));</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i==n;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983" refid="de/d51/a01857_1a826e3dc8fb437c8986735a8e20d44f00" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d51/a01857_1a826e3dc8fb437c8986735a8e20d44f00" kindref="member">CIccTagXmlCicp::ToXml</ref>(std::string&amp;<sp/>xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="984"><highlight class="normal">{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><ref refid="dc/d2f/a00425" kindref="compound">CIccInfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;cicpFields<sp/>ColorPrimaries=\&quot;%d\&quot;<sp/>TransferCharacteristics=\&quot;%d\&quot;<sp/>MatrixCoefficients=\&quot;%d\&quot;<sp/>VideoFullRangeFlag=\&quot;%d\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nColorPrimaries,<sp/>m_nTransferCharacteristics,<sp/>m_nMatrixCoefficients,<sp/>m_nVideoFullRangeFlag);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996" refid="de/d51/a01857_1a01fdca7df355b1fd4f8d322d5e15ba47" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d51/a01857_1a01fdca7df355b1fd4f8d322d5e15ba47" kindref="member">CIccTagXmlCicp::ParseXml</ref>(xmlNode*<sp/>pNode,<sp/>std::string&amp;<sp/>parseStr)</highlight></codeline>
<codeline lineno="997"><highlight class="normal">{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;cicpFields&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode)<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlAttr*<sp/>attr;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;ColorPrimaries&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nColorPrimaries<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nColorPrimaries<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;TransferCharacteristics&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nTransferCharacteristics<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nTransferCharacteristics<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;MatrixCoefficients&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nMatrixCoefficients<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nMatrixCoefficients<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;VideoFullRangeFlag&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nVideoFullRangeFlag<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nVideoFullRangeFlag<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030" refid="d6/d56/a01861_1a103631f02382398c41ef89b5990b5334" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d56/a01861_1a103631f02382398c41ef89b5990b5334" kindref="member">CIccTagXmlSparseMatrixArray::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1031"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>n;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;SparseMatrixArray<sp/>outputChannels=\&quot;%d\&quot;<sp/>matrixType=\&quot;%d\&quot;&gt;\n&quot;</highlight><highlight class="normal">,<sp/>m_nChannelsPerMatrix,<sp/>m_nMatrixType);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><ref refid="d6/dad/a00941" kindref="compound">CIccSparseMatrix</ref><sp/>mtx;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>bytesPerMatrix<sp/>=<sp/>GetBytesPerMatrix();</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_nSize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>mtx.<ref refid="d6/dad/a00941_1a6affd3e211b39352e223bc2794a1b8ef" kindref="member">Reset</ref>(m_RawData+i*bytesPerMatrix,<sp/>bytesPerMatrix,<sp/><ref refid="d7/d46/a00002_1a5bc58d64df71e86546c9f40fe5fefa06" kindref="member">icSparseMatrixFloatNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;SparseMatrix<sp/>rows=\&quot;%d\&quot;<sp/>cols=\&quot;%d\&quot;&gt;\n&quot;</highlight><highlight class="normal">,<sp/>mtx.<ref refid="d6/dad/a00941_1a614d8c78f05d62ec2614f277df172fb8" kindref="member">Rows</ref>(),<sp/>mtx.<ref refid="d6/dad/a00941_1a3de766a6e294bbe66b14e123d2dde4d9" kindref="member">Cols</ref>());</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;(int)mtx.<ref refid="d6/dad/a00941_1a614d8c78f05d62ec2614f277df172fb8" kindref="member">Rows</ref>();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;SparseRow&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n=mtx.<ref refid="d6/dad/a00941_1a2273cbd70a01743ba1cac6d9928fcb0c" kindref="member">GetNumRowColumns</ref>(j);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&lt;ColIndices&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873_1a96583e68ac3216ec93072a15f30e8029" kindref="member">CIccUInt16Array::DumpArray</ref>(xml,<sp/>blanks+</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>mtx.<ref refid="d6/dad/a00941_1a322c6c08b316ecfa334868b4da03e217" kindref="member">GetColumnsForRow</ref>(j),<sp/>n,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&lt;/ColIndices&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&lt;ColData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873_1a96583e68ac3216ec93072a15f30e8029" kindref="member">CIccFloatArray::DumpArray</ref>(xml,<sp/>blanks+</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>*)(mtx.<ref refid="d6/dad/a00941_1a3c6d52ca31c0ba29a9b5427dc164e973" kindref="member">GetData</ref>()-&gt;<ref refid="d9/dfb/a00913_1af2f75fb97a626f7e2d33aa365f9541c4" kindref="member">getPtr</ref>(mtx.<ref refid="d6/dad/a00941_1a30e835c6d790541bb901707125fa3786" kindref="member">GetRowOffset</ref>(j))),<sp/>n,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&lt;/ColData&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/SparseRow&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;/SparseMatrix&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/SparseMatrixArray&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070" refid="d6/d56/a01861_1ad1bd79a785003f26fbaa470222c12ea7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d56/a01861_1ad1bd79a785003f26fbaa470222c12ea7" kindref="member">CIccTagXmlSparseMatrixArray::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="1071"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;SparseMatrixArray&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode)<sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlAttr<sp/>*outputChan<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;outputChannels&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlAttr<sp/>*matrixType<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;matrixType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outputChan<sp/>&amp;&amp;<sp/>matrixType)<sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>nChannelsPerMatrix<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(outputChan));</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0e2018f5694557b3208beb5fc6a7d017" kindref="member">icSparseMatrixType</ref><sp/>nMatrixType<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a0e2018f5694557b3208beb5fc6a7d017" kindref="member">icSparseMatrixType</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(matrixType));</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlNode<sp/>*pChild;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=0;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pChild<sp/>=<sp/>pNode-&gt;children;<sp/>pChild;<sp/>pChild=pChild-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pChild-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;SparseMatrix&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pChild-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;FullMatrix&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Reset(n,<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)nChannelsPerMatrix);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nMatrixType<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a0e2018f5694557b3208beb5fc6a7d017" kindref="member">icSparseMatrixType</ref>)nMatrixType;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>bytesPerMatrix<sp/>=<sp/>GetBytesPerMatrix();</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/dad/a00941" kindref="compound">CIccSparseMatrix</ref><sp/>mtx;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pChild<sp/>=<sp/>pNode-&gt;children;<sp/>pChild;<sp/>pChild=pChild-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pChild-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;SparseMatrix&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtx.<ref refid="d6/dad/a00941_1a6affd3e211b39352e223bc2794a1b8ef" kindref="member">Reset</ref>(m_RawData<sp/>+<sp/>i*bytesPerMatrix,<sp/>bytesPerMatrix,<sp/><ref refid="d7/d46/a00002_1a5bc58d64df71e86546c9f40fe5fefa06" kindref="member">icSparseMatrixFloatNum</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*rows<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;rows&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*cols<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;cols&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rows<sp/>&amp;&amp;<sp/>cols)<sp/>{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nRows,<sp/>nCols;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nRows<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(rows));</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nCols<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(cols));</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtx.<ref refid="d6/dad/a00941_1af2a042d2c98a1abef4fd9f9c3d026ea6" kindref="member">Init</ref>(nRows,<sp/>nCols,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>*rowstart<sp/>=<sp/>mtx.<ref refid="d6/dad/a00941_1a959a13335b4751975e32a019b1e984b7" kindref="member">GetRowStart</ref>();</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>nMaxEntries<sp/>=<sp/>mtx.<ref refid="d6/dad/a00941_1a402208f179874b8cea43004c41cb2675" kindref="member">GetMaxEntries</ref>();</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNode<sp/>*pRow;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iRow=0;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pRow=pChild-&gt;children;<sp/>pRow;<sp/>pRow=pRow-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pRow-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;<sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pRow-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;SparseRow&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNode<sp/>*pIdx<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pRow-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;ColIndices&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNode<sp/>*pData<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pRow-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;ColData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pIdx<sp/>&amp;&amp;<sp/>pData)<sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccUInt16Array</ref><sp/>idx;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccFloatArray</ref><sp/>data;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!idx.<ref refid="de/dd3/a01873_1a08565a80ff28d6a32a14a2dd33e7325c" kindref="member">ParseTextArray</ref>(pIdx)<sp/>||<sp/>!data.<ref refid="de/dd3/a01873_1a08565a80ff28d6a32a14a2dd33e7325c" kindref="member">ParseTextArray</ref>(pData))<sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>SparseRow<sp/>index<sp/>or<sp/>data<sp/>values\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()<sp/>!=<sp/>data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Mismatch<sp/>between<sp/>SparseRow<sp/>index<sp/>and<sp/>data<sp/>lengths\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos+idx.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()<sp/>&gt;<sp/>nMaxEntries)<sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Exceeded<sp/>maximum<sp/>number<sp/>of<sp/>sparse<sp/>matrix<sp/>entries\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rowstart[iRow]<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)pos;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(mtx.<ref refid="d6/dad/a00941_1a322c6c08b316ecfa334868b4da03e217" kindref="member">GetColumnsForRow</ref>(iRow),<sp/>idx.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>(),<sp/>idx.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>));</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(mtx.<ref refid="d6/dad/a00941_1a3c6d52ca31c0ba29a9b5427dc164e973" kindref="member">GetData</ref>()-&gt;<ref refid="d9/dfb/a00913_1af2f75fb97a626f7e2d33aa365f9541c4" kindref="member">getPtr</ref>(pos),<sp/>data.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>(),<sp/>data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>));</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>+=<sp/>idx.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iRow++;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(iRow&lt;nRows)<sp/>{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rowstart[iRow]<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)pos;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iRow++;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rowstart[iRow]<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)pos;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>SparseMatrix<sp/>rows<sp/>and<sp/>cols\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pChild-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;FullMatrix&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtx.<ref refid="d6/dad/a00941_1a6affd3e211b39352e223bc2794a1b8ef" kindref="member">Reset</ref>(m_RawData<sp/>+<sp/>i*bytesPerMatrix,<sp/>bytesPerMatrix,<sp/><ref refid="d7/d46/a00002_1a5bc58d64df71e86546c9f40fe5fefa06" kindref="member">icSparseMatrixFloatNum</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*rows<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;rows&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*cols<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;cols&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rows<sp/>&amp;&amp;<sp/>cols)<sp/>{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nRows,<sp/>nCols;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nRows<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(rows));</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nCols<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(cols));</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtx.<ref refid="d6/dad/a00941_1af2a042d2c98a1abef4fd9f9c3d026ea6" kindref="member">Init</ref>(nRows,<sp/>nCols,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccFloatArray</ref><sp/>data;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.<ref refid="de/dd3/a01873_1a08565a80ff28d6a32a14a2dd33e7325c" kindref="member">ParseTextArray</ref>(pChild);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()==nRows*nCols)<sp/>{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mtx.<ref refid="d6/dad/a00941_1a11d18378291acc9661a0f4ae6d44fd41" kindref="member">FillFromFullMatrix</ref>(data.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>()))</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Exceeded<sp/>maximum<sp/>number<sp/>of<sp/>sparse<sp/>matrix<sp/>entries\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>FullMatrix<sp/>data<sp/>dimensions\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>FullMatrix<sp/>rows<sp/>and<sp/>cols\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>outputChannels<sp/>and<sp/>matrixType<sp/>members\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>SparseMatrixArray<sp/>node\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="1208" refid="d5/da8/a01865_1a987c5b435d6827bf0898435333241348" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*<sp/><ref refid="d5/da8/a01865_1a987c5b435d6827bf0898435333241348" kindref="member">CIccTagXmlFixedNum&lt;T, Tsig&gt;::GetClassName</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1209"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Tsig==<ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417ddea6e14fa1c5ecc1f51851d0eba0154a4fe" kindref="member">icSigS15Fixed16ArrayType</ref>)</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;CIccTagXmlS15Fixed16&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;CIccTagXmlU16Fixed16&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>multi-platform<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>added<sp/>&quot;this-&gt;&quot;<sp/>modifier<sp/>to<sp/>data<sp/>members.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="1219" refid="d5/da8/a01865_1a06d30463ba5b1e685c93922eaa3092fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/da8/a01865_1a06d30463ba5b1e685c93922eaa3092fb" kindref="member">CIccTagXmlFixedNum&lt;T, Tsig&gt;::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Tsig==<ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417ddea6e14fa1c5ecc1f51851d0eba0154a4fe" kindref="member">icSigS15Fixed16ArrayType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;Array&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)this-&gt;m_nSize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(i%n))<sp/>{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i)</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>blanks;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="d7/dce/a00143_1a52fc751ce015924f9655f8288813a02c" kindref="member">icFtoD</ref>(this-&gt;m_Num[i]));</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((i%n)!=1)<sp/>{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)this-&gt;m_nSize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(i%8))<sp/>{</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i)</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>blanks;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="d7/dce/a00143_1acff132c5f00fb71997980443159e779a" kindref="member">icUFtoD</ref>(this-&gt;m_Num[i]));</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((i%8)!=1)<sp/>{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/Array&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>multi-platform<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight><highlight class="comment">//<sp/>added<sp/>&quot;this-&gt;&quot;<sp/>modifier<sp/>to<sp/>data<sp/>members.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="1270" refid="d5/da8/a01865_1a7f4971e529abcc48dd78c99d0eea5852" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/da8/a01865_1a7f4971e529abcc48dd78c99d0eea5852" kindref="member">CIccTagXmlFixedNum&lt;T, Tsig&gt;::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="1271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Array&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/>pNode-&gt;children;<sp/><sp/></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccFloatArray</ref><sp/>a;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!a.<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">ParseArray</ref>(pNode)<sp/>||<sp/>!a.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>())<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i,<sp/>n<sp/>=<sp/>a.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*buf<sp/>=<sp/>a.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/>this-&gt;SetSize(n);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Tsig==<ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417ddea6e14fa1c5ecc1f51851d0eba0154a4fe" kindref="member">icSigS15Fixed16ArrayType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_Num[i]<sp/>=<sp/><ref refid="d7/dce/a00143_1a4a143eb09493d53cb1f7252819615498" kindref="member">icDtoF</ref>(buf[i]);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_Num[i]<sp/>=<sp/><ref refid="d7/dce/a00143_1abfd4ddeca69a5b9e5d78747e0e4d9459" kindref="member">icDtoUF</ref>(buf[i]);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight><highlight class="comment">//Make<sp/>sure<sp/>typedef<sp/>classes<sp/>get<sp/>built</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d5/da8/a01865" kindref="compound">CIccTagXmlFixedNum&lt;icS15Fixed16Number, icSigS15Fixed16ArrayType&gt;</ref>;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d5/da8/a01865" kindref="compound">CIccTagXmlFixedNum&lt;icU16Fixed16Number, icSigU16Fixed16ArrayType&gt;</ref>;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="1304" refid="d8/d3a/a01869_1a272bf01a34f5ee0d39aafa86847eda2e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*<ref refid="d8/d3a/a01869_1a272bf01a34f5ee0d39aafa86847eda2e" kindref="member">CIccTagXmlNum&lt;T, A, Tsig&gt;::GetClassName</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1305"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)==</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref>))</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;CIccTagXmlUInt8&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)==</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>))</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;CIccTagXmlUInt16&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)==</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref>))</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;CIccTagXmlUInt32&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)==</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a7d5ef7f224b316dacc02ba0bce6d3110" kindref="member">icUInt64Number</ref>))</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;CIccTagXmlUInt64&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;CIccTagXmlNum&lt;&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>multi-platform<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight><highlight class="comment">//<sp/>added<sp/>&quot;this-&gt;&quot;<sp/>modifier<sp/>to<sp/>data<sp/>members.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="1321" refid="d8/d3a/a01869_1aa5c5e55362b34e1456020ba4945fbfc9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d3a/a01869_1aa5c5e55362b34e1456020ba4945fbfc9" kindref="member">CIccTagXmlNum&lt;T, A, Tsig&gt;::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[512];</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;Array&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)this-&gt;m_nSize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(i%16))<sp/>{</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i)</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>blanks;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)==16)</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;%llu&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="d7/d46/a00002_1a7d5ef7f224b316dacc02ba0bce6d3110" kindref="member">icUInt64Number</ref>)this-&gt;m_Num[i]);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref>)this-&gt;m_Num[i]);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((i%16)!=1)<sp/>{</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/Array&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>multi-platform<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight><highlight class="comment">//<sp/>added<sp/>&quot;this-&gt;&quot;<sp/>modifier<sp/>to<sp/>data<sp/>members.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="1355" refid="d8/d3a/a01869_1a62090daf2e66d15845d7f561e59df6b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d3a/a01869_1a62090daf2e66d15845d7f561e59df6b8" kindref="member">CIccTagXmlNum&lt;T, A, Tsig&gt;::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="1356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pDataNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pDataNode)<sp/>{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>pDataNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Array&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pDataNode)<sp/>{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/>pDataNode-&gt;children;<sp/><sp/></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/>A<sp/>a;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!a.ParseArray(pNode)<sp/>||<sp/>!a.GetSize())<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i,<sp/>n<sp/>=<sp/>a.GetSize();</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/>T<sp/>*buf<sp/>=<sp/>a.GetBuf();</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/>this-&gt;SetSize(n);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;m_Num[i]<sp/>=<sp/>buf[i];</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="comment">//Make<sp/>sure<sp/>typedef<sp/>classes<sp/>get<sp/>built</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d8/d3a/a01869" kindref="compound">CIccTagXmlNum&lt;icUInt8Number, CIccUInt8Array, icSigUInt8ArrayType&gt;</ref>;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d8/d3a/a01869" kindref="compound">CIccTagXmlNum&lt;icUInt16Number, CIccUInt16Array, icSigUInt16ArrayType&gt;</ref>;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d8/d3a/a01869" kindref="compound">CIccTagXmlNum&lt;icUInt32Number, CIccUInt32Array, icSigUInt32ArrayType&gt;</ref>;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d8/d3a/a01869" kindref="compound">CIccTagXmlNum&lt;icUInt64Number, CIccUInt64Array, icSigUInt64ArrayType&gt;</ref>;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="1393" refid="d9/d63/a01877_1ae82d07078bb254802820c1dfafc9c800" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*<ref refid="d9/d63/a01877_1ae82d07078bb254802820c1dfafc9c800" kindref="member">CIccTagXmlFloatNum&lt;T, A, Tsig&gt;::GetClassName</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1394"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Tsig==<ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417ddea530de0674970862d1cb29d7a3d8f342c" kindref="member">icSigFloat16ArrayType</ref>)</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;CIccTagXmlFloat32&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Tsig==<ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417ddeae17f065e92dd0ee43aeef1f18c6e0db0" kindref="member">icSigFloat32ArrayType</ref>)</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;CIccTagXmlFloat32&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Tsig==<ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417ddea9d1705d00ee5bd14f2ac2b0109eb901d" kindref="member">icSigFloat64ArrayType</ref>)</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;CIccTagXmlFloat64&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;CIccTagXmlFloatNum&lt;&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>multi-platform<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight><highlight class="comment">//<sp/>added<sp/>&quot;this-&gt;&quot;<sp/>modifier<sp/>to<sp/>data<sp/>members.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="1408" refid="d9/d63/a01877_1a38f6a3581ecdf4a6c435416e4f460b7c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d63/a01877_1a38f6a3581ecdf4a6c435416e4f460b7c" kindref="member">CIccTagXmlFloatNum&lt;T, A, Tsig&gt;::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[512];</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;m_nSize==1)<sp/>{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)==</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a087042fc82a070c4afebf2e05e708f5b" kindref="member">icFloat32Number</ref>))</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;Data&gt;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;&lt;/Data&gt;\n&quot;</highlight><highlight class="normal">,<sp/>this-&gt;m_Num[0]);</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)==</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a5aa02bcb66891d8c8496a1cf2f181ae2" kindref="member">icFloat64Number</ref>))</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;Data&gt;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1a1140748eceaf6e3b854e9d9c62f05370" kindref="member">icXmlDoubleFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;&lt;/Data&gt;\n&quot;</highlight><highlight class="normal">,<sp/>this-&gt;m_Num[0]);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;Data&gt;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;&lt;/Data&gt;&quot;</highlight><highlight class="normal">,<sp/>this-&gt;m_Num[0]);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;Data&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)this-&gt;m_nSize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(i%n))<sp/>{</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i)</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>blanks;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)==</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a087042fc82a070c4afebf2e05e708f5b" kindref="member">icFloat32Number</ref>))</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>this-&gt;m_Num[i]);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)==</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a087042fc82a070c4afebf2e05e708f5b" kindref="member">icFloat32Number</ref>))</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/><ref refid="d7/d03/a00254_1a1140748eceaf6e3b854e9d9c62f05370" kindref="member">icXmlDoubleFmt</ref>,<sp/>this-&gt;m_Num[i]);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>this-&gt;m_Num[i]);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((i%n)!=1)<sp/>{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/Data&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;/Data&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>multi-platform<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight><highlight class="comment">//<sp/>added<sp/>&quot;this-&gt;&quot;<sp/>modifier<sp/>to<sp/>data<sp/>members.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A,<sp/>icTagTypeSignature<sp/>Tsig&gt;</highlight></codeline>
<codeline lineno="1463" refid="d9/d63/a01877_1aef548e5ab696b113bf1158b5bbf36f0b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d63/a01877_1aef548e5ab696b113bf1158b5bbf36f0b" kindref="member">CIccTagXmlFloatNum&lt;T, A, Tsig&gt;::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="1464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Filename&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!filename[0])<sp/>{</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/>filename<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;File&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/>A<sp/>a;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filename[0])<sp/>{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d2c/a00893" kindref="compound">CIccIO</ref><sp/>*file<sp/>=<sp/><ref refid="d9/dd6/a00272_1a1787be4d01fe1c357f48a2e8531622a6" kindref="member">IccOpenFileIO</ref>(filename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file){</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>File<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=</highlight><highlight class="stringliteral">&quot;&apos;<sp/>not<sp/>found.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>len<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>();</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d5/d16/a00029_1a4e0be90a3757e352f42612d09a7d1aa5" kindref="member">stricmp</ref>(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Format&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fbuf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(len+1);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fbuf[len]=0;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fbuf)<sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>error!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="dc/d2c/a00893_1a3a42fb785255dda8609fc46c83fe4f2c" kindref="member">Read8</ref>(fbuf,<sp/>len)!=len)<sp/>{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>error<sp/>of<sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;)!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(fbuf);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!a.ParseTextArray(fbuf)<sp/>||<sp/>!a.GetSize())<sp/>{</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Parse<sp/>error<sp/>of<sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;)!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(fbuf);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(fbuf);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Tsig==<ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417ddea530de0674970862d1cb29d7a3d8f342c" kindref="member">icSigFloat16ArrayType</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)==</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a4b80b2685c65dca8044d9dff9e173f93" kindref="member">icFloat16Number</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>n<sp/>=<sp/>len/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a4b80b2685c65dca8044d9dff9e173f93" kindref="member">icFloat16Number</ref>);</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;SetSize(n);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="dc/d2c/a00893_1a460f7d82e1daf63f867d7cbca8db2ac4" kindref="member">Read16</ref>(&amp;this-&gt;m_Num[0],<sp/>n)!=n)<sp/>{</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Tsig==<ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417ddea530de0674970862d1cb29d7a3d8f342c" kindref="member">icSigFloat16ArrayType</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)==</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a087042fc82a070c4afebf2e05e708f5b" kindref="member">icFloat32Number</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>n<sp/>=<sp/>len/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a087042fc82a070c4afebf2e05e708f5b" kindref="member">icFloat32Number</ref>);</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;SetSize(n);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="dc/d2c/a00893_1a05eb65f9187a4c84eec42ba30334ed69" kindref="member">ReadFloat16Float</ref>(&amp;this-&gt;m_Num[0],<sp/>n)!=n)<sp/>{</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Tsig==<ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417ddeae17f065e92dd0ee43aeef1f18c6e0db0" kindref="member">icSigFloat32ArrayType</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)==</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a087042fc82a070c4afebf2e05e708f5b" kindref="member">icFloat32Number</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>n<sp/>=<sp/>len/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a087042fc82a070c4afebf2e05e708f5b" kindref="member">icFloat32Number</ref>);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;SetSize(n);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="dc/d2c/a00893_1a1399dc6dcf7aefe36b78ad96fc117d17" kindref="member">ReadFloat32Float</ref>(&amp;this-&gt;m_Num[0],<sp/>n)!=n)<sp/>{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Tsig==<ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417ddea9d1705d00ee5bd14f2ac2b0109eb901d" kindref="member">icSigFloat64ArrayType</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)==</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a5aa02bcb66891d8c8496a1cf2f181ae2" kindref="member">icFloat64Number</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>n<sp/>=<sp/>len/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a5aa02bcb66891d8c8496a1cf2f181ae2" kindref="member">icFloat64Number</ref>);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;SetSize(n);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="dc/d2c/a00893_1abce317a3e29ef016c9b72f0022aef53d" kindref="member">Read64</ref>(&amp;this-&gt;m_Num[0],<sp/>n)!=n)<sp/>{</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>file<sp/>parsing<sp/>type!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/>pNode<sp/>=<sp/>pNode-&gt;children;<sp/><sp/></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!a.ParseArray(pNode)<sp/>||<sp/>!a.GetSize())<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i,<sp/>n<sp/>=<sp/>a.GetSize();</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/>T<sp/>*buf<sp/>=<sp/>a.GetBuf();</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/>this-&gt;SetSize(n);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;m_Num[i]<sp/>=<sp/>buf[i];</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight><highlight class="comment">//Make<sp/>sure<sp/>typedef<sp/>classes<sp/>get<sp/>built</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d9/d63/a01877" kindref="compound">CIccTagXmlFloatNum&lt;icFloat32Number, CIccFloat32Array, icSigFloat16ArrayType&gt;</ref>;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d9/d63/a01877" kindref="compound">CIccTagXmlFloatNum&lt;icFloat32Number, CIccFloat32Array, icSigFloat32ArrayType&gt;</ref>;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d9/d63/a01877" kindref="compound">CIccTagXmlFloatNum&lt;icFloat64Number, CIccFloat64Array, icSigFloat64ArrayType&gt;</ref>;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight></codeline>
<codeline lineno="1587" refid="de/d9f/a01881_1a943c0e19163087a7e59350c75b14491c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d9f/a01881_1a943c0e19163087a7e59350c75b14491c" kindref="member">CIccTagXmlMeasurement::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><ref refid="dc/d2f/a00425" kindref="compound">CIccInfo</ref><sp/>info;<sp/><sp/></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/>sprintf(buf,</highlight><highlight class="stringliteral">&quot;&lt;StandardObserver&gt;%s&lt;/StandardObserver&gt;\n&quot;</highlight><highlight class="normal">,<ref refid="d9/d39/a00257_1a9c8f67b712d7d370a26c759e8afbce2d" kindref="member">icGetStandardObserverName</ref>(m_Data.stdObserver));</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;MeasurementBacking<sp/>X=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Y=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Z=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/dce/a00143_1a52fc751ce015924f9655f8288813a02c" kindref="member">icFtoD</ref>(m_Data.backing.X),</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/dce/a00143_1a52fc751ce015924f9655f8288813a02c" kindref="member">icFtoD</ref>(m_Data.backing.Y),<sp/><ref refid="d7/dce/a00143_1a52fc751ce015924f9655f8288813a02c" kindref="member">icFtoD</ref>(m_Data.backing.Z));</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/>sprintf(buf,</highlight><highlight class="stringliteral">&quot;&lt;Geometry&gt;%s&lt;/Geometry&gt;\n&quot;</highlight><highlight class="normal">,info.<ref refid="dc/d2f/a00425_1a92f692bd1bdb86c0d5c4def767006159" kindref="member">GetMeasurementGeometryName</ref>(m_Data.geometry));</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;<sp/><sp/></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/>sprintf(buf,</highlight><highlight class="stringliteral">&quot;&lt;Flare&gt;%s&lt;/Flare&gt;\n&quot;</highlight><highlight class="normal">,info.<ref refid="dc/d2f/a00425_1a96530a87f3c7b95a05376bd1e2535818" kindref="member">GetMeasurementFlareName</ref>(m_Data.flare));</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/>sprintf(buf,</highlight><highlight class="stringliteral">&quot;&lt;StandardIlluminant&gt;%s&lt;/StandardIlluminant&gt;\n&quot;</highlight><highlight class="normal">,info.<ref refid="dc/d2f/a00425_1a5888e31c43ad13b788e08eb21ab9cca4" kindref="member">GetIlluminantName</ref>(m_Data.illuminant));</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;<sp/><sp/></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1612" refid="de/d9f/a01881_1a157b1263fdf8de283af4d229d2e4bd94" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d9f/a01881_1a157b1263fdf8de283af4d229d2e4bd94" kindref="member">CIccTagXmlMeasurement::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="1613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/>memset(&amp;m_Data,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_Data));</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;StandardObserver&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode)<sp/>{</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Data.stdObserver<sp/>=<sp/><ref refid="d9/d39/a00257_1ac10624d354a483abc82f31013e78a4cd" kindref="member">icGetNamedStandardObserverValue</ref>(pNode-&gt;children<sp/>?<sp/>(<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;children-&gt;content:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;MeasurementBacking&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode){</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlAttr<sp/>*attr;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Data.backing.X<sp/>=<sp/><ref refid="d7/dce/a00143_1a4a143eb09493d53cb1f7252819615498" kindref="member">icDtoF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr)));</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Data.backing.Y<sp/>=<sp/><ref refid="d7/dce/a00143_1a4a143eb09493d53cb1f7252819615498" kindref="member">icDtoF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr)));</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Data.backing.Z<sp/>=<sp/><ref refid="d7/dce/a00143_1a4a143eb09493d53cb1f7252819615498" kindref="member">icDtoF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr)));</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Geometry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode){</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Data.geometry<sp/>=<sp/><ref refid="d9/d39/a00257_1a15a2a61f96267fe65a6e79e413f6e88a" kindref="member">icGeNamedtMeasurementGeometryValue</ref>(pNode-&gt;children<sp/>?<sp/>(<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;children-&gt;content<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Flare&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode){</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Data.flare<sp/>=<sp/><ref refid="d9/d39/a00257_1a9a9b1edaba3b35fb7beecc1ff5ec5ac1" kindref="member">icGetNamedMeasurementFlareValue</ref>(pNode-&gt;children<sp/>?<sp/>(<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;children-&gt;content<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;StandardIlluminant&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode){</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Data.illuminant<sp/>=<sp/><ref refid="d9/d39/a00257_1abfaa8c68f9f1ae46bf1f4578eb06d0f1" kindref="member">icGetIlluminantValue</ref>(pNode-&gt;children<sp/>?<sp/>(<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;children-&gt;content<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="1658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660" refid="d7/d9c/a01885_1a38e9548763954f73c29b8bc8ce0f5b5d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d7/d9c/a01885_1a38e9548763954f73c29b8bc8ce0f5b5d" kindref="member">CIccTagXmlMultiLocalizedUnicode::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/>std::string<sp/>xmlbuf;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data[256];</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/>std::string<sp/>bufstr;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/>CIccMultiLocalizedUnicode::iterator<sp/>i;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_Strings)</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=m_Strings-&gt;begin();<sp/>i!=m_Strings-&gt;end();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;LocalizedText<sp/>LanguageCountry=\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(xmlbuf,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(data,<sp/>(i-&gt;m_nLanguageCode&lt;&lt;16)<sp/>+<sp/>i-&gt;m_nCountryCode));</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&gt;&lt;![CDATA[&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(xmlbuf,<sp/><ref refid="d9/d39/a00257_1a9f320f9caf10d93233cccf39049a5992" kindref="member">icUtf16ToUtf8</ref>(bufstr,<sp/>i-&gt;GetBuf(),<sp/>i-&gt;GetLength()));</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;]]&gt;&lt;/LocalizedText&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681" refid="d7/d9c/a01885_1adcb1238d1761fc5a61a03df9bcdfa18e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d7/d9c/a01885_1adcb1238d1761fc5a61a03df9bcdfa18e" kindref="member">CIccTagXmlMultiLocalizedUnicode::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="1682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/>xmlAttr<sp/>*langCode;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;LocalizedText&quot;</highlight><highlight class="normal">);<sp/>pNode;<sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;next,<sp/></highlight><highlight class="stringliteral">&quot;LocalizedText&quot;</highlight><highlight class="normal">))<sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((langCode<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;LanguageCountry&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlNode<sp/>*pText;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pText<sp/>=<sp/>pNode-&gt;children;<sp/>pText;<sp/>pText<sp/>=<sp/>pText-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pText-&gt;type<sp/>==<sp/>XML_TEXT_NODE<sp/>||<sp/>pText-&gt;type<sp/>==<sp/>XML_CDATA_SECTION_NODE)</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pText)<sp/>{</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>lc<sp/>=<sp/><ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(langCode));</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089" kindref="compound">CIccUTF16String</ref><sp/>str((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pText-&gt;content);</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetText(str.<ref refid="db/ddd/a02089_1ac7629e2161d7ada902d83eb93945ebcd" kindref="member">c_str</ref>(),<sp/>(<ref refid="d7/d46/a00002_1a6932e8c6b1b1c25deca7414cce0de15e" kindref="member">icLanguageCode</ref>)(lc&gt;&gt;16),<sp/>(<ref refid="d7/d46/a00002_1a4070271a82e5bdce1b44e378ae108fa2" kindref="member">icCountryCode</ref>)(lc<sp/>&amp;<sp/>0xffff));</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetText(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n&gt;0;<sp/><sp/></highlight><highlight class="comment">//We<sp/>succeed<sp/>if<sp/>we<sp/>parsed<sp/>at<sp/>least<sp/>one<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight></codeline>
<codeline lineno="1712" refid="d9/d9b/a01889_1a2f318f2c6da32de6933c397be1042eb4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d9b/a01889_1a2f318f2c6da32de6933c397be1042eb4" kindref="member">CIccTagXmlTagData::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1713"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*ptr<sp/>=<sp/>m_pData;<sp/><sp/></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[60];</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/>std::string<sp/>szFlag(</highlight><highlight class="stringliteral">&quot;ASCII&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nDataFlag<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/>szFlag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;binary&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/>sprintf<sp/>(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;Data<sp/>Flag=\&quot;%s\&quot;&gt;\n&quot;</highlight><highlight class="normal">,<sp/>szFlag.c_str());</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><ref refid="d9/d39/a00257_1aac906ed45d63b044aa871d3366c05c6f" kindref="member">icXmlDumpHexData</ref>(xml,<sp/>blanks+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>m_pData,<sp/>m_nSize);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/Data&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight></codeline>
<codeline lineno="1729" refid="d9/d9b/a01889_1add635b1bc955516c006c481659c53aed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d9b/a01889_1add635b1bc955516c006c481659c53aed" kindref="member">CIccTagXmlTagData::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="1730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode<sp/>&amp;&amp;<sp/>pNode-&gt;children<sp/>&amp;&amp;<sp/>pNode-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*szFlag<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Flag&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nDataFlag<sp/>=<sp/><ref refid="d7/d46/a00002_1a7b3d116f0b5846902d1f4df44c196b27a4bebc8405bc4a3304aa9bd8bd84775de" kindref="member">icAsciiData</ref>;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szFlag,</highlight><highlight class="stringliteral">&quot;binary&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nDataFlag<sp/>=<sp/><ref refid="d7/d46/a00002_1a7b3d116f0b5846902d1f4df44c196b27a486f52b1de9c24b90976cc2ffe9c8adb" kindref="member">icBinaryData</ref>;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>nSize<sp/>=<sp/><ref refid="d9/d39/a00257_1a4798bcdc271228ef7083a57412803e06" kindref="member">icXmlGetHexDataSize</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)pNode-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/>SetSize(nSize,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSize)<sp/>{</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1a7e2e6f47df3c6baacbda01035dfbbbee" kindref="member">icXmlGetHexData</ref>(m_pData,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content,<sp/>nSize);</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1750" refid="dd/d80/a01893_1a0cb011716b6eee5d7503f2402dcbced7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/d80/a01893_1a0cb011716b6eee5d7503f2402dcbced7" kindref="member">CIccTagXmlDateTime::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1751"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;DateTime&gt;%d-%02d-%02dT%02d:%02d:%02d&lt;/DateTime&gt;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/>m_DateTime.year,<sp/>m_DateTime.month,<sp/>m_DateTime.day,<sp/>m_DateTime.hours,<sp/>m_DateTime.minutes,<sp/>m_DateTime.seconds);</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight></codeline>
<codeline lineno="1760" refid="dd/d80/a01893_1ad5de92490a23f29b1f636918923cf281" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/d80/a01893_1ad5de92490a23f29b1f636918923cf281" kindref="member">CIccTagXmlDateTime::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="1761"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/>memset(&amp;m_DateTime,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_DateTime));</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;DateTime&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/>m_DateTime<sp/>=<sp/><ref refid="d9/d39/a00257_1a522c038996d47b04a3b404b85133e78c" kindref="member">icGetDateTimeValue</ref>(pNode-&gt;children<sp/>?<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773" refid="d9/d0c/a01897_1a20943ac4c05b59f420bab3e44c9993b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d0c/a01897_1a20943ac4c05b59f420bab3e44c9993b0" kindref="member">CIccTagXmlColorantOrder::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1774"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[40];</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;ColorantOrder&gt;\n&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//+<sp/>blanks<sp/>+<sp/>&quot;<sp/><sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_nCount;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;n&gt;%d&lt;/n&gt;\n&quot;</highlight><highlight class="normal">,<sp/>m_pData[i]);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/ColorantOrder&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight></codeline>
<codeline lineno="1789" refid="d9/d0c/a01897_1abb3915ff834b197b005e3314225bcdde" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d0c/a01897_1abb3915ff834b197b005e3314225bcdde" kindref="member">CIccTagXmlColorantOrder::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="1790"><highlight class="normal">{<sp/><sp/></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;ColorantOrder&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode)<sp/>{</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="d9/d39/a00257_1a4020a24172a2a573879d8cb257522a72" kindref="member">icXmlNodeCount</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/>{</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(n);</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pData)<sp/>{</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">CIccUInt8Array::ParseArray</ref>(m_pData,<sp/>n,<sp/>pNode-&gt;children))</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight></codeline>
<codeline lineno="1809" refid="d5/d99/a01901_1a9cb804649f0ae9f4d2dba8463840a532" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d99/a01901_1a9cb804649f0ae9f4d2dba8463840a532" kindref="member">CIccTagXmlColorantTable::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1810"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fix[256];</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/>std::string<sp/>str;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;ColorantTable&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_nCount;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>lab[3];</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/>lab[0]<sp/>=<sp/><ref refid="d7/dce/a00143_1aaa4f6d1ac0ca5b3c3dcf8fcb01e8da78" kindref="member">icU16toF</ref>(m_pData[i].data[0]);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/>lab[1]<sp/>=<sp/><ref refid="d7/dce/a00143_1aaa4f6d1ac0ca5b3c3dcf8fcb01e8da78" kindref="member">icU16toF</ref>(m_pData[i].data[1]);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/>lab[2]<sp/>=<sp/><ref refid="d7/dce/a00143_1aaa4f6d1ac0ca5b3c3dcf8fcb01e8da78" kindref="member">icU16toF</ref>(m_pData[i].data[2]);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/dce/a00143_1ac5de02865f572ea243f6da8c144c02fa" kindref="member">icLabFromPcs</ref>(lab);</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;Colorant<sp/>Name=\&quot;%s\&quot;<sp/>Channel1=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Channel2=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Channel3=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d9/d39/a00257_1afb616c9224f7f0db7e412064a547dd42" kindref="member">icAnsiToUtf8</ref>(str,<sp/>m_pData[i].name)),<sp/>lab[0],<sp/>lab[1],<sp/>lab[2]);</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//xml<sp/>+=<sp/>&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/ColorantTable&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight></codeline>
<codeline lineno="1834" refid="d5/d99/a01901_1a1433cb8568d5b783eee6628c539a9097" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d99/a01901_1a1433cb8568d5b783eee6628c539a9097" kindref="member">CIccTagXmlColorantTable::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="1835"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;ColorantTable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode<sp/>&amp;&amp;<sp/>pNode-&gt;children)<sp/>{</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/>pNode<sp/>=<sp/>pNode-&gt;children;</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>n<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)<ref refid="d9/d39/a00257_1a4020a24172a2a573879d8cb257522a72" kindref="member">icXmlNodeCount</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Colorant&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/>{</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(n);</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>pNode;<sp/>pNode=pNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;Colorant&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i&lt;n)<sp/>{</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>str;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*name<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*L<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Channel1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*a<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Channel2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*b<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Channel3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>&amp;&amp;<sp/>L<sp/>&amp;&amp;<sp/>a<sp/>&amp;&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(m_pData[i].name,<sp/><ref refid="d9/d39/a00257_1a17f6cde39ef474623e3b1082566bb5d3" kindref="member">icUtf8ToAnsi</ref>(str,<sp/>name),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_pData[i].name));</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pData[i].name[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_pData[i].name)-1]=0;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>lab[3];</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lab[0]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(L));</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lab[1]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(a));</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lab[2]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(b));</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/dce/a00143_1a5768271d491af79a433e52722ed0a189" kindref="member">icLabToPcs</ref>(lab);</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pData[i].data[0]<sp/>=<sp/><ref refid="d7/dce/a00143_1a77b4912bd2106eaef10d32571c23a58a" kindref="member">icFtoU16</ref>(lab[0]);</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pData[i].data[1]<sp/>=<sp/><ref refid="d7/dce/a00143_1a77b4912bd2106eaef10d32571c23a58a" kindref="member">icFtoU16</ref>(lab[1]);</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pData[i].data[2]<sp/>=<sp/><ref refid="d7/dce/a00143_1a77b4912bd2106eaef10d32571c23a58a" kindref="member">icFtoU16</ref>(lab[2]);</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i==n;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight></codeline>
<codeline lineno="1886" refid="d9/d65/a01905_1aaa3491f669708fecb38fce323bd54882" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d65/a01905_1aaa3491f669708fecb38fce323bd54882" kindref="member">CIccTagXmlViewingConditions::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1887"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;IlluminantXYZ<sp/>X=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Y=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Z=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/dce/a00143_1a52fc751ce015924f9655f8288813a02c" kindref="member">icFtoD</ref>(m_XYZIllum.X),<sp/><ref refid="d7/dce/a00143_1a52fc751ce015924f9655f8288813a02c" kindref="member">icFtoD</ref>(m_XYZIllum.Y),<sp/><ref refid="d7/dce/a00143_1a52fc751ce015924f9655f8288813a02c" kindref="member">icFtoD</ref>(m_XYZIllum.Z));</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;SurroundXYZ<sp/>X=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Y=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Z=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/dce/a00143_1a52fc751ce015924f9655f8288813a02c" kindref="member">icFtoD</ref>(m_XYZSurround.X),<sp/><ref refid="d7/dce/a00143_1a52fc751ce015924f9655f8288813a02c" kindref="member">icFtoD</ref>(m_XYZSurround.Y),<sp/><ref refid="d7/dce/a00143_1a52fc751ce015924f9655f8288813a02c" kindref="member">icFtoD</ref>(m_XYZSurround.Z));</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><ref refid="dc/d2f/a00425" kindref="compound">CIccInfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;IllumType&gt;%s&lt;/IllumType&gt;\n&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="dc/d2f/a00425_1a5888e31c43ad13b788e08eb21ab9cca4" kindref="member">GetIlluminantName</ref>(m_illumType));</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight></codeline>
<codeline lineno="1905" refid="d9/d65/a01905_1a506a0dfd74a95a70e8ac7eb805aff014" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d65/a01905_1a506a0dfd74a95a70e8ac7eb805aff014" kindref="member">CIccTagXmlViewingConditions::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="1906"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/>xmlAttr<sp/>*attr;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pChild;</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/>memset(&amp;m_XYZIllum,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_XYZIllum));</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/>memset(&amp;m_XYZSurround,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_XYZSurround));</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/>m_illumType<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17" kindref="member">icIlluminant</ref>)0;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;IlluminantXYZ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild)<sp/>{</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_XYZIllum.X<sp/>=<sp/><ref refid="d7/dce/a00143_1a4a143eb09493d53cb1f7252819615498" kindref="member">icDtoF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr)));</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_XYZIllum.Y<sp/>=<sp/><ref refid="d7/dce/a00143_1a4a143eb09493d53cb1f7252819615498" kindref="member">icDtoF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr)));</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_XYZIllum.Z<sp/>=<sp/><ref refid="d7/dce/a00143_1a4a143eb09493d53cb1f7252819615498" kindref="member">icDtoF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr)));</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;SurroundXYZ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild)<sp/>{</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_XYZSurround.X<sp/>=<sp/><ref refid="d7/dce/a00143_1a4a143eb09493d53cb1f7252819615498" kindref="member">icDtoF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr)));</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_XYZSurround.Y<sp/>=<sp/><ref refid="d7/dce/a00143_1a4a143eb09493d53cb1f7252819615498" kindref="member">icDtoF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr)));</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_XYZSurround.Z<sp/>=<sp/><ref refid="d7/dce/a00143_1a4a143eb09493d53cb1f7252819615498" kindref="member">icDtoF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr)));</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;IllumType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild<sp/>&amp;&amp;<sp/>pChild-&gt;children<sp/>&amp;&amp;<sp/>pChild-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/>m_illumType<sp/>=<sp/><ref refid="d9/d39/a00257_1abfaa8c68f9f1ae46bf1f4578eb06d0f1" kindref="member">icGetIlluminantValue</ref>((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pChild-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1957"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight></codeline>
<codeline lineno="1959" refid="d4/d07/a01913_1ac5db89bfc7ab38c5ce925ea17819aa8c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d07/a01913_1ac5db89bfc7ab38c5ce925ea17819aa8c" kindref="member">CIccTagXmlSpectralViewingConditions::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1960"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*ptr;</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><ref refid="dc/d2f/a00425" kindref="compound">CIccInfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;StdObserver&gt;%s&lt;/StdObserver&gt;\n&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="dc/d2f/a00425_1ac11d399114783d07a4594e018a78cf10" kindref="member">GetStandardObserverName</ref>(m_stdObserver));</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;IlluminantXYZ<sp/>X=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Y=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Z=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/>m_illuminantXYZ.X,<sp/>m_illuminantXYZ.Y,<sp/>m_illuminantXYZ.Z);</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_observer)<sp/>{</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;ObserverFuncs<sp/>start=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>end=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>steps=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_observerRange.start),<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_observerRange.end),<sp/>m_observerRange.steps);</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_reserved2)<sp/>{</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_reserved2);</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>&amp;m_observer[0];</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;3;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;m_observerRange.steps;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&amp;&amp;<sp/>!(i%8))<sp/>{</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks;</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>*ptr);</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/ObserverFuncs&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;StdIlluminant&gt;%s&lt;/StdIlluminant&gt;\n&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="dc/d2f/a00425_1a5888e31c43ad13b788e08eb21ab9cca4" kindref="member">GetIlluminantName</ref>(m_stdIlluminant));</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;ColorTemperature&gt;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;&lt;/ColorTemperature&gt;\n&quot;</highlight><highlight class="normal">,<sp/>m_colorTemperature);</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_illuminant)<sp/>{</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;IlluminantSPD<sp/>start=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>end=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1ab447e050014084b7a8826a44ac620564" kindref="member">icXmlHalfFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>steps=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_illuminantRange.start),<sp/><ref refid="d7/dce/a00143_1af29908d138da11b5eb2b6174fb9020e2" kindref="member">icF16toF</ref>(m_illuminantRange.end),<sp/>m_illuminantRange.steps);</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_reserved3)<sp/>{</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_reserved3);</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>&amp;m_illuminant[0];</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;m_illuminantRange.steps;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&amp;&amp;<sp/>!(i%8))<sp/>{</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>*ptr);</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/IlluminantSPD&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;SurroundXYZ<sp/>X=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Y=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Z=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/>m_surroundXYZ.X,<sp/>m_surroundXYZ.Y,<sp/>m_surroundXYZ.Z);</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2042"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"></highlight></codeline>
<codeline lineno="2044" refid="d4/d07/a01913_1a0117e79492f9a25f32df61b4beba6ebb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d07/a01913_1a0117e79492f9a25f32df61b4beba6ebb" kindref="member">CIccTagXmlSpectralViewingConditions::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="2045"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pChild;</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/>xmlAttr<sp/>*attr;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/>memset(&amp;m_illuminantXYZ,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_illuminantXYZ));</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/>memset(&amp;m_surroundXYZ,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_surroundXYZ));</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/>m_stdIlluminant<sp/>=<sp/><ref refid="d7/d46/a00002_1a2146034a274143b2ffbb868845d93e17ab1c241e8a8bf7f4843c929227113ac84" kindref="member">icIlluminantUnknown</ref>;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/>m_stdObserver<sp/>=<sp/><ref refid="d7/d46/a00002_1af513aa5d6844f10ca9aa78ad5fa7859ba363218b26c81ee65a62869b50aae371e" kindref="member">icStdObsUnknown</ref>;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/>m_colorTemperature<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/>m_reserved2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/>m_reserved3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;StdObserver&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild<sp/>&amp;&amp;<sp/>pChild-&gt;children<sp/>&amp;&amp;<sp/>pChild-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stdObserver<sp/>=<sp/><ref refid="d9/d39/a00257_1ac10624d354a483abc82f31013e78a4cd" kindref="member">icGetNamedStandardObserverValue</ref>((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pChild-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;IlluminantXYZ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild)<sp/>{</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_illuminantXYZ.X<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_illuminantXYZ.Y<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_illuminantXYZ.Z<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;ObserverFuncs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild)<sp/>{</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_observerRange.start<sp/>=<ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr)));</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_observerRange.end<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr)));</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;steps&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_observerRange.steps<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;reserved&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_reserved2<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild-&gt;children<sp/>&amp;&amp;<sp/>pChild-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccFloatArray</ref><sp/>vals;</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vals.<ref refid="de/dd3/a01873_1a08565a80ff28d6a32a14a2dd33e7325c" kindref="member">ParseTextArray</ref>((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pChild-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vals.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()!=m_observerRange.steps*3)</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_observer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>[m_observerRange.steps*3];</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_observer)</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*pBuf<sp/>=<sp/>vals.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(m_observer,<sp/>pBuf,<sp/>m_observerRange.steps*3*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>));</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;StdIlluminant&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild<sp/>&amp;&amp;<sp/>pChild-&gt;children<sp/>&amp;&amp;<sp/>pChild-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stdIlluminant<sp/>=<sp/><ref refid="d9/d39/a00257_1abfaa8c68f9f1ae46bf1f4578eb06d0f1" kindref="member">icGetIlluminantValue</ref>((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pChild-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;ColorTemperature&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild<sp/>&amp;&amp;<sp/>pChild-&gt;children<sp/>&amp;&amp;<sp/>pChild-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/>m_colorTemperature<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pChild-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;IlluminantSPD&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild)<sp/>{</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_illuminantRange.start<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr)));</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_illuminantRange.end<sp/>=<sp/><ref refid="d7/dce/a00143_1a7f49bd1c3d34a4dd4199f6bb0a674f96" kindref="member">icFtoF16</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr)));</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;steps&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_illuminantRange.steps<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;reserved&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_reserved3<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild-&gt;children<sp/>&amp;&amp;<sp/>pChild-&gt;children-&gt;content<sp/>&amp;&amp;<sp/>m_illuminantRange.steps)<sp/>{</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccFloatArray</ref><sp/>vals;</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vals.<ref refid="de/dd3/a01873_1a08565a80ff28d6a32a14a2dd33e7325c" kindref="member">ParseTextArray</ref>((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pChild-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vals.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()!=m_illuminantRange.steps)</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_illuminant<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>[m_illuminantRange.steps];</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_illuminant)</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*pBuf<sp/>=<sp/>vals.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(m_illuminant,<sp/>pBuf,<sp/>m_illuminantRange.steps<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>));</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setIlluminant(m_stdIlluminant,<sp/>m_illuminantRange,<sp/>NULL,<sp/>m_colorTemperature);</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/>pChild<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;SurroundXYZ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild)<sp/>{</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_surroundXYZ.X<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_surroundXYZ.Y<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_surroundXYZ.Z<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight></codeline>
<codeline lineno="2181" refid="d0/d27/a00239_1a5e18ab5a318311f6b8e807ae44b7ed45" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d27/a00239_1a5e18ab5a318311f6b8e807ae44b7ed45" kindref="member">icProfDescToXml</ref>(std::string<sp/>&amp;xml,<sp/><ref refid="d2/df3/a01085" kindref="compound">CIccProfileDescStruct</ref><sp/>&amp;p,<sp/>std::string<sp/>blanks<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fix[256];</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data[256];</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;ProfileDesc&gt;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;DeviceManufacturerSignature&gt;%s&lt;/DeviceManufacturerSignature&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(data,<sp/>p.<ref refid="d2/df3/a01085_1a4daa3327f9b8127b5affb40f62440ae4" kindref="member">m_deviceMfg</ref>)));</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;DeviceModelSignature&gt;%s&lt;/DeviceModelSignature&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(data,<sp/>p.<ref refid="d2/df3/a01085_1a5c93d165339af67e85a09fdbfad051c2" kindref="member">m_deviceModel</ref>)));</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/>std::string<sp/>szAttributes<sp/>=<sp/><ref refid="d9/d39/a00257_1a29395cadeb827a6be39833c934c84074" kindref="member">icGetDeviceAttrName</ref>(p.<ref refid="d2/df3/a01085_1affae9212a7c184c302f80f09386188d5" kindref="member">m_attributes</ref>);</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//sprintf(buf,<sp/>&quot;&lt;DeviceAttributes&gt;\&quot;%016lX\&quot;<sp/>technology=\&quot;%s\&quot;&gt;\n&quot;,<sp/>p.m_attributes,<sp/>icFixXml(fix,<sp/>icGetSigStr(data,<sp/>p.m_technology)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//xml<sp/>+=<sp/>buf;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>blanks<sp/>+<sp/><ref refid="d9/d39/a00257_1a29395cadeb827a6be39833c934c84074" kindref="member">icGetDeviceAttrName</ref>(p.<ref refid="d2/df3/a01085_1affae9212a7c184c302f80f09386188d5" kindref="member">m_attributes</ref>);</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;Technology&gt;%s&lt;/Technology&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(data,<sp/>p.<ref refid="d2/df3/a01085_1a99f7828bc265a46c705e56f2156bf3d9" kindref="member">m_technology</ref>)));</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><ref refid="d7/dfd/a00969" kindref="compound">CIccTag</ref><sp/>*pTag<sp/>=<sp/>p.<ref refid="d2/df3/a01085_1a3c90a3b1e99c920e5ca48dbc8ce2cab7" kindref="member">m_deviceMfgDesc</ref>.<ref refid="dd/dee/a01081_1aa4678e864f3f11cf1cfb3ff583b79b95" kindref="member">GetTag</ref>();</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref><sp/>*pExt;</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTag)<sp/>{</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/>pExt<sp/>=<sp/>(<ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref>*)(pTag-&gt;<ref refid="d7/dfd/a00969_1aa4cc7f1dd04e9b537738d1dfa96a9790" kindref="member">GetExtension</ref>());</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pExt<sp/>||<sp/>!pExt-&gt;<ref refid="de/d3c/a01809_1a67786e088d1e0f900a3aa28bb3499d2b" kindref="member">GetExtClassName</ref>()<sp/>||<sp/>strcmp(pExt-&gt;<ref refid="de/d3c/a01809_1a67786e088d1e0f900a3aa28bb3499d2b" kindref="member">GetExtClassName</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;CIccTagXml&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;DeviceManufacturer&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*<sp/>tagSig<sp/>=<sp/><ref refid="d9/d39/a00257_1a9df441a57e3659e7ae404779feaea9a3" kindref="member">icGetTagSigTypeName</ref>(pTag-&gt;<ref refid="d7/dfd/a00969_1a0d6f4b6f857134bd87bfb0cd54025208" kindref="member">GetType</ref>());</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;%s&gt;\n&quot;</highlight><highlight class="normal">,<sp/>tagSig);</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>blanks<sp/>+<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pExt-&gt;<ref refid="de/d3c/a01809_1a759cbaed8a0553bb035b9ff749052309" kindref="member">ToXml</ref>(xml,<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;/%s&gt;\n&quot;</highlight><highlight class="normal">,<sp/>tagSig);</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>blanks<sp/>+<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>blanks<sp/>+</highlight><highlight class="stringliteral">&quot;&lt;/DeviceManufacturer&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"></highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/>pTag<sp/>=<sp/>p.<ref refid="d2/df3/a01085_1ac85e36485dd846b824a87f31eb7da3f0" kindref="member">m_deviceModelDesc</ref>.<ref refid="dd/dee/a01081_1aa4678e864f3f11cf1cfb3ff583b79b95" kindref="member">GetTag</ref>();</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTag)<sp/>{</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/>pExt<sp/>=<sp/>(<ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref>*)(pTag-&gt;<ref refid="d7/dfd/a00969_1aa4cc7f1dd04e9b537738d1dfa96a9790" kindref="member">GetExtension</ref>());</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pExt<sp/>||<sp/>!pExt-&gt;<ref refid="de/d3c/a01809_1a67786e088d1e0f900a3aa28bb3499d2b" kindref="member">GetExtClassName</ref>()<sp/>||<sp/>strcmp(pExt-&gt;<ref refid="de/d3c/a01809_1a67786e088d1e0f900a3aa28bb3499d2b" kindref="member">GetExtClassName</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;CIccTagXml&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;DeviceModel&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"></highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*<sp/>tagSig<sp/>=<sp/><ref refid="d9/d39/a00257_1a9df441a57e3659e7ae404779feaea9a3" kindref="member">icGetTagSigTypeName</ref>(pTag-&gt;<ref refid="d7/dfd/a00969_1a0d6f4b6f857134bd87bfb0cd54025208" kindref="member">GetType</ref>());</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;%s&gt;\n&quot;</highlight><highlight class="normal">,<sp/>tagSig);</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>blanks<sp/>+<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pExt-&gt;<ref refid="de/d3c/a01809_1a759cbaed8a0553bb035b9ff749052309" kindref="member">ToXml</ref>(xml,<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;/%s&gt;\n&quot;</highlight><highlight class="normal">,<sp/>tagSig);</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>blanks<sp/>+<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/DeviceModel&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/ProfileDesc&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight></codeline>
<codeline lineno="2257" refid="d0/d27/a00239_1a0f0f9f2d4fbf03932c3a2512b8d63410" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d27/a00239_1a0f0f9f2d4fbf03932c3a2512b8d63410" kindref="member">icXmlParseProfDesc</ref>(xmlNode<sp/>*pNode,<sp/><ref refid="d2/df3/a01085" kindref="compound">CIccProfileDescStruct</ref><sp/>&amp;p,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="2258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type==XML_ELEMENT_NODE<sp/>&amp;&amp;<sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;ProfileDesc&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlNode<sp/>*pDescNode;<sp/><sp/></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pDescNode<sp/>=<sp/>pNode-&gt;children;<sp/>pDescNode;<sp/>pDescNode=pDescNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDescNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pDescNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;DeviceManufacturerSignature&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.<ref refid="d2/df3/a01085_1a4daa3327f9b8127b5affb40f62440ae4" kindref="member">m_deviceMfg</ref><sp/>=<sp/><ref refid="d9/d39/a00257_1aeb7c91622f164201b2a5a0afe9cd3848" kindref="member">icXmlStrToSig</ref>(pDescNode-&gt;children<sp/>?<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pDescNode-&gt;children-&gt;content:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pDescNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;DeviceModelSignature&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.<ref refid="d2/df3/a01085_1a5c93d165339af67e85a09fdbfad051c2" kindref="member">m_deviceModel</ref><sp/>=<sp/><ref refid="d9/d39/a00257_1aeb7c91622f164201b2a5a0afe9cd3848" kindref="member">icXmlStrToSig</ref>(pDescNode-&gt;children<sp/>?<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pDescNode-&gt;children-&gt;content<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pDescNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;DeviceAttributes&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.<ref refid="d2/df3/a01085_1affae9212a7c184c302f80f09386188d5" kindref="member">m_attributes</ref><sp/>=<sp/><ref refid="d9/d39/a00257_1ab515209dc98599451e8def16c2cdee32" kindref="member">icGetDeviceAttrValue</ref>(pDescNode);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pDescNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;Technology&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.<ref refid="d2/df3/a01085_1a99f7828bc265a46c705e56f2156bf3d9" kindref="member">m_technology</ref><sp/>=<sp/>(<ref refid="d7/d46/a00002_1a1a76cbaf039288333b1f83838e83c4df" kindref="member">icTechnologySignature</ref>)<ref refid="d9/d39/a00257_1aeb7c91622f164201b2a5a0afe9cd3848" kindref="member">icXmlStrToSig</ref>(pDescNode-&gt;children<sp/>?<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pDescNode-&gt;children-&gt;content<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pDescNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;DeviceManufacturer&quot;</highlight><highlight class="normal">))<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNode<sp/>*pDevManNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pDescNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;multiLocalizedUnicodeType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pDevManNode){</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDevManNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pDescNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;textDescriptionType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDevManNode){</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref><sp/>tagSig<sp/>=<sp/><ref refid="d9/d39/a00257_1a7e4a8379f29fbaded2a4dd75b6222e55" kindref="member">icGetTypeNameTagSig</ref><sp/>((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)<sp/>pDevManNode-&gt;name);</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p.<ref refid="d2/df3/a01085_1a3c90a3b1e99c920e5ca48dbc8ce2cab7" kindref="member">m_deviceMfgDesc</ref>.<ref refid="dd/dee/a01081_1a810b999f96989574608c3502a6fa2f35" kindref="member">SetType</ref>(tagSig)){</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/dfd/a00969" kindref="compound">CIccTag</ref><sp/>*pTag<sp/>=<sp/>p.<ref refid="d2/df3/a01085_1a3c90a3b1e99c920e5ca48dbc8ce2cab7" kindref="member">m_deviceMfgDesc</ref>.<ref refid="dd/dee/a01081_1aa4678e864f3f11cf1cfb3ff583b79b95" kindref="member">GetTag</ref>();</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pTag)</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref><sp/>*pExt<sp/>=<sp/>(<ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref>*)(pTag-&gt;<ref refid="d7/dfd/a00969_1aa4cc7f1dd04e9b537738d1dfa96a9790" kindref="member">GetExtension</ref>());</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pExt<sp/>||<sp/>!pExt-&gt;<ref refid="de/d3c/a01809_1a67786e088d1e0f900a3aa28bb3499d2b" kindref="member">GetExtClassName</ref>()<sp/>||<sp/>strcmp(pExt-&gt;<ref refid="de/d3c/a01809_1a67786e088d1e0f900a3aa28bb3499d2b" kindref="member">GetExtClassName</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;CIccTagXml&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"></highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pExt-&gt;<ref refid="de/d3c/a01809_1ab389ac02038775bf0a198ae68847d8a1" kindref="member">ParseXml</ref>(pDevManNode-&gt;children,<sp/>parseStr);</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pDescNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;DeviceModel&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNode<sp/>*pDevModNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pDescNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;multiLocalizedUnicodeType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pDevModNode){</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDevModNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pDescNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;textDescriptionType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDevModNode){</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref><sp/>tagSig<sp/>=<sp/><ref refid="d9/d39/a00257_1a7e4a8379f29fbaded2a4dd75b6222e55" kindref="member">icGetTypeNameTagSig</ref><sp/>((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)<sp/>pDevModNode-&gt;name);</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p.<ref refid="d2/df3/a01085_1ac85e36485dd846b824a87f31eb7da3f0" kindref="member">m_deviceModelDesc</ref>.<ref refid="dd/dee/a01081_1a810b999f96989574608c3502a6fa2f35" kindref="member">SetType</ref>(tagSig))<sp/>{</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/dfd/a00969" kindref="compound">CIccTag</ref><sp/>*pTag<sp/>=<sp/>p.<ref refid="d2/df3/a01085_1ac85e36485dd846b824a87f31eb7da3f0" kindref="member">m_deviceModelDesc</ref>.<ref refid="dd/dee/a01081_1aa4678e864f3f11cf1cfb3ff583b79b95" kindref="member">GetTag</ref>();</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pTag)</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref><sp/>*pExt<sp/>=<sp/>(<ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref>*)(pTag-&gt;<ref refid="d7/dfd/a00969_1aa4cc7f1dd04e9b537738d1dfa96a9790" kindref="member">GetExtension</ref>());</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pExt<sp/>||<sp/>!pExt-&gt;<ref refid="de/d3c/a01809_1a67786e088d1e0f900a3aa28bb3499d2b" kindref="member">GetExtClassName</ref>()<sp/>||<sp/>strcmp(pExt-&gt;<ref refid="de/d3c/a01809_1a67786e088d1e0f900a3aa28bb3499d2b" kindref="member">GetExtClassName</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;CIccTagXml&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pExt-&gt;<ref refid="de/d3c/a01809_1ab389ac02038775bf0a198ae68847d8a1" kindref="member">ParseXml</ref>(pDevModNode-&gt;children,<sp/>parseStr);</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"></highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p.<ref refid="d2/df3/a01085_1a3c90a3b1e99c920e5ca48dbc8ce2cab7" kindref="member">m_deviceMfgDesc</ref>.<ref refid="dd/dee/a01081_1aa4678e864f3f11cf1cfb3ff583b79b95" kindref="member">GetTag</ref>()<sp/>||<sp/>!p.<ref refid="d2/df3/a01085_1ac85e36485dd846b824a87f31eb7da3f0" kindref="member">m_deviceModelDesc</ref>.<ref refid="dd/dee/a01081_1aa4678e864f3f11cf1cfb3ff583b79b95" kindref="member">GetTag</ref>())</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"></highlight></codeline>
<codeline lineno="2341" refid="d2/d54/a01917_1a61095812b67f06dc8269cd6db81e5cd0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d54/a01917_1a61095812b67f06dc8269cd6db81e5cd0" kindref="member">CIccTagXmlProfileSeqDesc::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/>CIccProfileSeqDesc::iterator<sp/>i;</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_Descriptions)<sp/></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;ProfileSequence&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=m_Descriptions-&gt;begin();<sp/>i!=m_Descriptions-&gt;end();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d0/d27/a00239_1a5e18ab5a318311f6b8e807ae44b7ed45" kindref="member">icProfDescToXml</ref>(xml,<sp/>*i,<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/ProfileSequence&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"></highlight></codeline>
<codeline lineno="2357" refid="d2/d54/a01917_1a0b8bea51eaf695cd51933826c97e342f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d54/a01917_1a0b8bea51eaf695cd51933826c97e342f" kindref="member">CIccTagXmlProfileSeqDesc::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="2358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;ProfileSequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"></highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_Descriptions)</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"></highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/>m_Descriptions-&gt;clear();</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode)<sp/>{</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pNode<sp/>=<sp/>pNode-&gt;children;<sp/>pNode;<sp/>pNode=pNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type==XML_ELEMENT_NODE<sp/>&amp;&amp;<sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;ProfileDesc&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/df3/a01085" kindref="compound">CIccProfileDescStruct</ref><sp/>ProfileDescStruct;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d0/d27/a00239_1a0f0f9f2d4fbf03932c3a2512b8d63410" kindref="member">icXmlParseProfDesc</ref>(pNode,<sp/>ProfileDescStruct,<sp/>parseStr))</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Descriptions-&gt;push_back(ProfileDescStruct);</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"></highlight></codeline>
<codeline lineno="2382" refid="da/d6c/a01921_1a96a45c1c394648ad89e8c34ad56ccd67" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d6c/a01921_1a96a45c1c394648ad89e8c34ad56ccd67" kindref="member">CIccTagXmlResponseCurveSet16::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2383"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[80];<sp/></highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"></highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><ref refid="dc/d2f/a00425" kindref="compound">CIccInfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;CountOfChannels&gt;%d&lt;/CountOfChannels&gt;\n&quot;</highlight><highlight class="normal">,<sp/>m_nChannels);</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"></highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><ref refid="de/d1c/a01093" kindref="compound">CIccResponseCurveStruct</ref><sp/>*pCurves=GetFirstCurves();</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pCurves)<sp/>{</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;ResponseCurve<sp/>MeasUnitSignature=\&quot;%s\&quot;&gt;\n&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="dc/d2f/a00425_1a6a30f40247f6ad22584608fbd00ff89a" kindref="member">GetMeasurementUnit</ref>(pCurves-&gt;<ref refid="de/d1c/a01093_1a14218873625632bb9d5d2a7d1422d4a6" kindref="member">GetMeasurementType</ref>()));</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;pCurves-&gt;<ref refid="de/d1c/a01093_1ae49e756975ef40f6335a1862f4e689bc" kindref="member">GetNumChannels</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dec/a00080_1a13727bdb7c5f46cc4c23c7ecf04902ef" kindref="member">CIccResponse16List</ref><sp/>*pResponseList<sp/>=<sp/>pCurves-&gt;<ref refid="de/d1c/a01093_1a46df36e8173cd120753669bd1992c2ba" kindref="member">GetResponseList</ref>(i);</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/dc7/a00517" kindref="compound">icXYZNumber</ref><sp/>*pXYZ<sp/>=<sp/>pCurves-&gt;<ref refid="de/d1c/a01093_1af82534216bfb33915324e785168bcf41" kindref="member">GetXYZ</ref>(i);</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;ChannelResponses<sp/>X=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Y=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>Z=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/dce/a00143_1a52fc751ce015924f9655f8288813a02c" kindref="member">icFtoD</ref>(pXYZ-&gt;<ref refid="d8/dc7/a00517_1a8a82647ad953c198665aee9e3b659ea7" kindref="member">X</ref>),<sp/><ref refid="d7/dce/a00143_1a52fc751ce015924f9655f8288813a02c" kindref="member">icFtoD</ref>(pXYZ-&gt;<ref refid="d8/dc7/a00517_1a3e75b8d208a5e4c55eac077643bc7689" kindref="member">Y</ref>),<sp/><ref refid="d7/dce/a00143_1a52fc751ce015924f9655f8288813a02c" kindref="member">icFtoD</ref>(pXYZ-&gt;<ref refid="d8/dc7/a00517_1a8753b09e8d550ace7d30a0af5d0e7ab3" kindref="member">Z</ref>));</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CIccResponse16List::iterator<sp/>j;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=pResponseList-&gt;begin();<sp/>j!=pResponseList-&gt;end();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>&lt;Measurement<sp/>DeviceCode=\&quot;%d\&quot;<sp/>MeasValue=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">,<sp/>j-&gt;deviceCode,<sp/><ref refid="d7/dce/a00143_1a52fc751ce015924f9655f8288813a02c" kindref="member">icFtoD</ref>(j-&gt;measurementValue));</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;reserved)<sp/>{</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>j-&gt;reserved);</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;/ChannelResponses&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/ResponseCurve&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/>pCurves<sp/>=<sp/>GetNextCurves();</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"></highlight></codeline>
<codeline lineno="2423"><highlight class="normal"></highlight></codeline>
<codeline lineno="2424" refid="da/d6c/a01921_1a28ee8a1b0496d7c25a3f4ad7d2f95331" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d6c/a01921_1a28ee8a1b0496d7c25a3f4ad7d2f95331" kindref="member">CIccTagXmlResponseCurveSet16::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="2425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;CountOfChannels&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pNode)</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChannels<sp/>=<sp/>atoi((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pNode-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/>SetNumChannels(nChannels);</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"></highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_ResponseCurves)</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"></highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_ResponseCurves-&gt;empty())</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/>m_ResponseCurves-&gt;clear();</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pNode<sp/>=<sp/>pNode-&gt;next;<sp/>pNode;<sp/>pNode<sp/>=<sp/>pNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type==XML_ELEMENT_NODE<sp/>&amp;&amp;<sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;ResponseCurve&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*szMeasurmentType<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;MeasUnitSignature&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"></highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nChannels<sp/>!=<sp/><ref refid="d9/d39/a00257_1a4020a24172a2a573879d8cb257522a72" kindref="member">icXmlNodeCount</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;ChannelResponses&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d1c/a01093" kindref="compound">CIccResponseCurveStruct</ref><sp/>curves(<ref refid="d9/d39/a00257_1abfd91744aadc29c59db098931ce63ffa" kindref="member">icGetMeasurementValue</ref>(szMeasurmentType),<sp/>nChannels);</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlNode<sp/>*pChild,<sp/>*pMeasurement;</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0,<sp/>pChild<sp/>=<sp/>pNode-&gt;children;<sp/>pChild;<sp/>pChild<sp/>=<sp/>pChild-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;<sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pChild-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;ChannelResponses&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dec/a00080_1a13727bdb7c5f46cc4c23c7ecf04902ef" kindref="member">CIccResponse16List</ref><sp/>*pResponseList<sp/>=<sp/>curves.<ref refid="de/d1c/a01093_1a46df36e8173cd120753669bd1992c2ba" kindref="member">GetResponseList</ref>(i);</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/dc7/a00517" kindref="compound">icXYZNumber</ref><sp/>*pXYZ<sp/>=<sp/>curves.<ref refid="de/d1c/a01093_1af82534216bfb33915324e785168bcf41" kindref="member">GetXYZ</ref>(i);</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d44/a00533" kindref="compound">icResponse16Number</ref><sp/>response;</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*szX<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*szY<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*szZ<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!szX<sp/>||<sp/>!szY<sp/>||<sp/>!szZ<sp/>||<sp/>!*szX<sp/>||<sp/>!*szY<sp/>||<sp/>!*szZ)</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pXYZ-&gt;<ref refid="d8/dc7/a00517_1a8a82647ad953c198665aee9e3b659ea7" kindref="member">X</ref><sp/>=<sp/><ref refid="d7/dce/a00143_1a4a143eb09493d53cb1f7252819615498" kindref="member">icDtoF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(szX));</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pXYZ-&gt;<ref refid="d8/dc7/a00517_1a3e75b8d208a5e4c55eac077643bc7689" kindref="member">Y</ref><sp/>=<sp/><ref refid="d7/dce/a00143_1a4a143eb09493d53cb1f7252819615498" kindref="member">icDtoF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(szY));</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pXYZ-&gt;<ref refid="d8/dc7/a00517_1a8753b09e8d550ace7d30a0af5d0e7ab3" kindref="member">Z</ref><sp/>=<sp/><ref refid="d7/dce/a00143_1a4a143eb09493d53cb1f7252819615498" kindref="member">icDtoF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(szZ));</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"></highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pMeasurement<sp/>=<sp/>pChild-&gt;children;<sp/>pMeasurement;<sp/>pMeasurement<sp/>=<sp/>pMeasurement-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMeasurement-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;<sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pMeasurement-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;Measurement&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*szDeviceCode<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pMeasurement,<sp/></highlight><highlight class="stringliteral">&quot;DeviceCode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*szValue<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pMeasurement,<sp/></highlight><highlight class="stringliteral">&quot;MeasValue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*szReserved<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pMeasurement,<sp/></highlight><highlight class="stringliteral">&quot;Reserved&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!szDeviceCode<sp/>||<sp/>!szValue<sp/>||<sp/>!*szDeviceCode<sp/>||<sp/>!*szValue)</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"></highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.<ref refid="db/d44/a00533_1a7e80d3e501c149262e93c696609d23c6" kindref="member">deviceCode</ref><sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atoi(szDeviceCode);</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.<ref refid="db/d44/a00533_1a80d52a40abb50f8226588744a177b4dd" kindref="member">measurementValue</ref><sp/>=<sp/><ref refid="d7/dce/a00143_1a4a143eb09493d53cb1f7252819615498" kindref="member">icDtoF</ref>((<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(szValue));</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(szReserved<sp/>&amp;&amp;<sp/>*szReserved)</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.<ref refid="db/d44/a00533_1ae2252761c8b3a171992a3ed7054fc7d4" kindref="member">reserved</ref><sp/>=<sp/>atoi(szReserved);</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pResponseList-&gt;push_back(response);</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_ResponseCurves-&gt;push_back(curves);</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"></highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"></highlight></codeline>
<codeline lineno="2497" refid="dc/dc8/a01929_1a3fbc9e622da8972f78c557c29c9619e8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/dc8/a01929_1a3fbc9e622da8972f78c557c29c9619e8" kindref="member">CIccTagXmlCurve::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ToXml(xml,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref>,<sp/>blanks);</highlight></codeline>
<codeline lineno="2500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"></highlight></codeline>
<codeline lineno="2503" refid="dc/dc8/a01929_1a746b5bc777c1ef5ce1643db6d69d1db4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/dc8/a01929_1a3fbc9e622da8972f78c557c29c9619e8" kindref="member">CIccTagXmlCurve::ToXml</ref>(std::string<sp/>&amp;xml,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref><sp/>nType,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[40];</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_nSize)<sp/>{</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;Curve/&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsIdentity())<sp/>{</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;Curve<sp/>IdentitySize=\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>m_nSize);</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;/&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType==<ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" kindref="member">icConvert8Bit</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;Curve&gt;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/>blanks;<sp/><sp/></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_nSize;<sp/>i++)<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>&amp;&amp;<sp/>!(i%16))<sp/>{</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks;<sp/><sp/></highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%3u&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(m_Curve[i]<sp/>*<sp/>255.0<sp/>+<sp/>0.5));<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/Curve&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType==<ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref><sp/>||<sp/>nType==<ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8acf7f3d311a96b6529fb7b3ac82fd372b" kindref="member">icConvertVariable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;Curve&gt;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/>blanks;</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_nSize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&amp;&amp;<sp/>!(i%16))<sp/>{</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%5u&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(m_Curve[i]<sp/>*<sp/>65535.0<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/Curve&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType==<ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;Curve&gt;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_nSize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&amp;&amp;<sp/>!(i%16))<sp/>{</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%13.8f&quot;</highlight><highlight class="normal">,<sp/>m_Curve[i]);</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/Curve&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"></highlight></codeline>
<codeline lineno="2563" refid="dc/dc8/a01929_1aeda568a6539a8fe0a52dd7ad758b58f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/dc8/a01929_1aeda568a6539a8fe0a52dd7ad758b58f4" kindref="member">CIccTagXmlCurve::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr<sp/>)</highlight></codeline>
<codeline lineno="2564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseXml(pNode,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref>,<sp/>parseStr);</highlight></codeline>
<codeline lineno="2566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"></highlight></codeline>
<codeline lineno="2570" refid="dc/dc8/a01929_1a92fda6907dac46dc92bbafa9efa9d40b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/dc8/a01929_1aeda568a6539a8fe0a52dd7ad758b58f4" kindref="member">CIccTagXmlCurve::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref><sp/>nType,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="2571"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pCurveNode;</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/>pCurveNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Curve&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pCurveNode){</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pCurveNode,<sp/></highlight><highlight class="stringliteral">&quot;File&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filename[0])<sp/>{</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d2c/a00893" kindref="compound">CIccIO</ref><sp/>*file<sp/>=<sp/><ref refid="d9/dd6/a00272_1a1787be4d01fe1c357f48a2e8531622a6" kindref="member">IccOpenFileIO</ref>(filename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file){</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>File<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=</highlight><highlight class="stringliteral">&quot;&apos;<sp/>not<sp/>found.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pCurveNode,<sp/></highlight><highlight class="stringliteral">&quot;Format&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"></highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>format<sp/>is<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(format,<sp/></highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>();</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[num];</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"></highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buf)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Memory<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>buf;</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="dc/d2c/a00893_1a3a42fb785255dda8609fc46c83fe4f2c" kindref="member">Read8</ref>(buf,<sp/>num)<sp/>!=num)<sp/>{</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Read-File<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>buf;</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2615"><highlight class="normal"></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lut8type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" kindref="member">icConvert8Bit</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccUInt8Array</ref><sp/>data;</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"></highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(!data.ParseTextArray(buf))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.<ref refid="de/dd3/a01873_1a23e7980af4e5c740a54d8c23ec68acbb" kindref="member">ParseTextArrayNum</ref>(buf,<sp/>num,<sp/>parseStr)){</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(0);</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>buf;</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"></highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*src<sp/>=<sp/>data.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>GetData(0);</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"></highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();<sp/>i++)<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)(*src)<sp/>/<sp/>255.0f;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst++;</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src++;</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"></highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(i!=256)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Error!<sp/>-<sp/>Input/Output<sp/>table<sp/>does<sp/>not<sp/>have<sp/>256<sp/>entries.\n&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//SetSize(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2653"><highlight class="normal"></highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//lut16type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref><sp/>||<sp/>nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8acf7f3d311a96b6529fb7b3ac82fd372b" kindref="member">icConvertVariable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccUInt16Array</ref><sp/>data;</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"></highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(!data.ParseTextArray(buf))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.<ref refid="de/dd3/a01873_1a23e7980af4e5c740a54d8c23ec68acbb" kindref="member">ParseTextArrayNum</ref>(buf,<sp/>num,<sp/>parseStr)){</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(0);</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"></highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>*src<sp/>=<sp/>data.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>GetData(0);</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"></highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)(*src)<sp/>/<sp/>65535.0f;<sp/></highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst++;</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src++;</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"></highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//float<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>){</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccFloatArray</ref><sp/>data;</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(!data.ParseTextArray(buf))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.<ref refid="de/dd3/a01873_1a23e7980af4e5c740a54d8c23ec68acbb" kindref="member">ParseTextArrayNum</ref>(buf,<sp/>num,<sp/>parseStr)){</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(0);</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*src<sp/>=<sp/>data.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>GetData(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/>*src;<sp/></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst++;</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src++;</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>format<sp/>is<sp/>binary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(format,<sp/></highlight><highlight class="stringliteral">&quot;binary&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*order<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pCurveNode,<sp/></highlight><highlight class="stringliteral">&quot;Endian&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>little_endian<sp/>=<sp/>!strcmp(order,<sp/></highlight><highlight class="stringliteral">&quot;little&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2728"><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" kindref="member">icConvert8Bit</ref>){</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>();</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>value;</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"></highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(num);</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/><sp/>GetData(0);</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file-&gt;<ref refid="dc/d2c/a00893_1a3a42fb785255dda8609fc46c83fe4f2c" kindref="member">Read8</ref>(&amp;value))<sp/>{<sp/></highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Read-File<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>binary<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)value<sp/>/<sp/>255.0f;</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref><sp/>||<sp/>nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8acf7f3d311a96b6529fb7b3ac82fd372b" kindref="member">icConvertVariable</ref>){</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>()<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>);</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>value;</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*ptr<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref>*)&amp;value;</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"></highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(num);</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>GetData(0);</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file-&gt;<ref refid="dc/d2c/a00893_1a460f7d82e1daf63f867d7cbca8db2ac4" kindref="member">Read16</ref>(&amp;value))<sp/>{<sp/><sp/></highlight><highlight class="comment">//this<sp/>assumes<sp/>data<sp/>is<sp/>big<sp/>endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Read-File<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>binary<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ICC_BYTE_ORDER_LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(little_endian)<sp/>{</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!little_endian)<sp/>{</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>t<sp/>=<sp/>ptr[0];</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr[0]<sp/>=<sp/>ptr[1];</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr[1]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)value<sp/>/<sp/>65535.0f;</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>()/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a087042fc82a070c4afebf2e05e708f5b" kindref="member">icFloat32Number</ref>);</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a087042fc82a070c4afebf2e05e708f5b" kindref="member">icFloat32Number</ref><sp/>value;</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*ptr<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref>*)&amp;value;</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"></highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(num);</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>GetData(0);</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"></highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file-&gt;<ref refid="dc/d2c/a00893_1a1399dc6dcf7aefe36b78ad96fc117d17" kindref="member">ReadFloat32Float</ref>(&amp;value))<sp/>{<sp/></highlight><highlight class="comment">//assumes<sp/>data<sp/>is<sp/>big<sp/>endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Read-File<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>binary<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ICC_BYTE_ORDER_LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(little_endian)<sp/>{</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!little_endian)<sp/>{</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>ptr[0];<sp/>ptr[0]<sp/>=<sp/>ptr[3];<sp/>ptr[3]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>ptr[1];<sp/>ptr[1]<sp/>=<sp/>ptr[2];<sp/>ptr[2]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//not<sp/>8bit/16bit/float<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="comment">//not<sp/>text/binary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" kindref="member">icConvert8Bit</ref>){</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccUInt8Array</ref><sp/>data;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2827"><highlight class="normal"></highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">ParseArray</ref>(pCurveNode-&gt;children))<sp/>{</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szSize<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pCurveNode,<sp/></highlight><highlight class="stringliteral">&quot;IdentitySize&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"></highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(szSize<sp/>&amp;&amp;<sp/>*szSize)<sp/>{</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>nSize<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref>)atol(szSize);</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(nSize);</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nSize<sp/>==<sp/>nSize)<sp/>{</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>j;</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>GetData(0);</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;nSize;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)(j)<sp/>/<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)(nSize-1);<sp/></highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst++;</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//Identity<sp/>curve<sp/>with<sp/>size=0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(0);</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"></highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>j;</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*src<sp/>=<sp/>data.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>GetData(0);</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)(*src)<sp/>/<sp/>255.0f;<sp/></highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst++;</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src++;</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2861"><highlight class="normal"></highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(j!=256)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Error!<sp/>-<sp/>Input/Output<sp/>table<sp/>does<sp/>not<sp/>have<sp/>256<sp/>entries.\n&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//SetSize(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"></highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref><sp/>||<sp/>nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8acf7f3d311a96b6529fb7b3ac82fd372b" kindref="member">icConvertVariable</ref>){</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccUInt16Array</ref><sp/>data;</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"></highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">ParseArray</ref>(pCurveNode-&gt;children))<sp/>{</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szSize<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pCurveNode,<sp/></highlight><highlight class="stringliteral">&quot;IdentitySize&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"></highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(szSize<sp/>&amp;&amp;<sp/>*szSize)<sp/>{</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>nSize<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref>)atol(szSize);</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(nSize);</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"></highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nSize<sp/>==<sp/>nSize)<sp/>{</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>j;</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>GetData(0);</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;nSize;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)(j)<sp/>/<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)(nSize-1);<sp/></highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst++;</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//Identity<sp/>curve<sp/>with<sp/>size=0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(0);</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"></highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>j;</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>*src<sp/>=<sp/>data.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>GetData(0);</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)(*src)<sp/>/<sp/>65535.0f;<sp/></highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst++;</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src++;</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>){</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccFloatArray</ref><sp/>data;</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"></highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">ParseArray</ref>(pCurveNode-&gt;children))<sp/>{</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szSize<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pCurveNode,<sp/></highlight><highlight class="stringliteral">&quot;IdentitySize&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"></highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(szSize<sp/>&amp;&amp;<sp/>*szSize)<sp/>{</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>nSize<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref>)atol(szSize);</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(nSize);</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"></highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nSize<sp/>==<sp/>nSize)<sp/>{</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>j;</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>GetData(0);</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;nSize;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)(j)<sp/>/<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)(nSize-1);<sp/></highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst++;</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//Identity<sp/>curve<sp/>with<sp/>size=0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(0);</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"></highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>j;</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*src<sp/>=<sp/>data.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>GetData(0);</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/>*src;<sp/></highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst++;</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src++;</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unsupported<sp/>encoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2956"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"></highlight></codeline>
<codeline lineno="2958"><highlight class="normal"></highlight></codeline>
<codeline lineno="2959" refid="dc/da7/a01933_1ab0aa2a962ac70c2b83ec9903521d71f1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/da7/a01933_1ab0aa2a962ac70c2b83ec9903521d71f1" kindref="member">CIccTagXmlParametricCurve::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2960"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[80];</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;ParametricCurve<sp/>FunctionType=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nFunctionType);</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"></highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nReserved2)<sp/>{</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Reserved=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nReserved2);</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"></highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_nNumParam;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref>,<sp/>m_dParam[i]);</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"></highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;/ParametricCurve&gt;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"></highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2984"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"></highlight></codeline>
<codeline lineno="2986" refid="dc/da7/a01933_1a6b6729ffca76b311fe0e88c42a957f22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/da7/a01933_1ab0aa2a962ac70c2b83ec9903521d71f1" kindref="member">CIccTagXmlParametricCurve::ToXml</ref>(std::string<sp/>&amp;xml,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref><sp/>nType,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2987"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ToXml(xml,<sp/>blanks);</highlight></codeline>
<codeline lineno="2989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"></highlight></codeline>
<codeline lineno="2991" refid="dc/da7/a01933_1ae4339eda4a0931961f278852fbad162c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/da7/a01933_1a3ac52dc4008e07a54f88b930fa0365c8" kindref="member">CIccTagXmlParametricCurve::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref><sp/>nType,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="2992"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseXml<sp/>(pNode,<sp/>parseStr);</highlight></codeline>
<codeline lineno="2994"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"></highlight></codeline>
<codeline lineno="2996" refid="dc/da7/a01933_1a3ac52dc4008e07a54f88b930fa0365c8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/da7/a01933_1a3ac52dc4008e07a54f88b930fa0365c8" kindref="member">CIccTagXmlParametricCurve::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="2997"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pCurveNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;ParametricCurve&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"></highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pCurveNode<sp/>=<sp/>pNode;<sp/>pCurveNode;<sp/>pCurveNode=pCurveNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCurveNode-&gt;type==XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pCurveNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;ParametricCurve&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"></highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionType<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pCurveNode,<sp/></highlight><highlight class="stringliteral">&quot;FunctionType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"></highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!functionType)</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3008"><highlight class="normal"></highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetFunctionType(atoi(functionType))){</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccFloatArray</ref><sp/>data;</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"></highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">ParseArray</ref>(pCurveNode-&gt;children)){</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"></highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()!=GetNumParam()){</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"></highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>j;</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dParams<sp/>=<sp/>GetParams();</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dataBuf<sp/>=<sp/>data.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dParams[j]<sp/>=<sp/>dataBuf[j];<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"></highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*reserved2<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pCurveNode,<sp/></highlight><highlight class="stringliteral">&quot;Reserved&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"></highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reserved2)<sp/>{</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nReserved2<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(reserved2));</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3039"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"></highlight></codeline>
<codeline lineno="3041"><highlight class="normal"></highlight></codeline>
<codeline lineno="3042" refid="d0/d27/a00239_1a0487825d4241d4ed1b2ad5825ba72cd9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d27/a00239_1a0487825d4241d4ed1b2ad5825ba72cd9" kindref="member">icCurvesToXml</ref>(std::string<sp/>&amp;xml,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szName,<sp/><ref refid="dd/de4/a01121" kindref="compound">CIccCurve</ref><sp/>**pCurves,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCurve,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref><sp/>nType,<sp/>std::string<sp/>blanks)</highlight></codeline>
<codeline lineno="3043"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCurves)<sp/>{</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"></highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>szName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;numCurve;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/dcd/a00965" kindref="compound">IIccExtensionTag</ref><sp/>*pTag<sp/>=<sp/>pCurves[i]-&gt;<ref refid="d7/dfd/a00969_1aa4cc7f1dd04e9b537738d1dfa96a9790" kindref="member">GetExtension</ref>();</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pTag<sp/>||<sp/>strcmp(pTag-&gt;<ref refid="d3/dcd/a00965_1ac7bb0a319f913857a32f13d31df189c8" kindref="member">GetExtDerivedClassName</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;CIccCurveXml&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"></highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!((<ref refid="d6/d18/a01925" kindref="compound">CIccCurveXml</ref><sp/>*)pTag)-&gt;ToXml(xml,<sp/>nType,<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>szName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3059"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"></highlight></codeline>
<codeline lineno="3061"><highlight class="normal"></highlight></codeline>
<codeline lineno="3062" refid="d9/d17/a01937_1a83d7b02083d56a963254256e31d138b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d17/a01937_1a83d7b02083d56a963254256e31d138b1" kindref="member">CIccTagXmlSegmentedCurve::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3063"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pCurve)</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="d8/d24/a02001" kindref="compound">CIccSegmentedCurveXml</ref>*)m_pCurve)-&gt;ToXml(xml,<sp/>blanks);</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"></highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"></highlight></codeline>
<codeline lineno="3070"><highlight class="normal"></highlight></codeline>
<codeline lineno="3071" refid="d9/d17/a01937_1ac436f406544d0c080ac25b2107a0da1c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d17/a01937_1a83d7b02083d56a963254256e31d138b1" kindref="member">CIccTagXmlSegmentedCurve::ToXml</ref>(std::string<sp/>&amp;xml,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref><sp/>nType,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3072"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ToXml(xml,<sp/>blanks);</highlight></codeline>
<codeline lineno="3074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"></highlight></codeline>
<codeline lineno="3076"><highlight class="normal"></highlight></codeline>
<codeline lineno="3077" refid="d9/d17/a01937_1a00dfc958c87aaf5c7840028fbba29959" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d17/a01937_1a00dfc958c87aaf5c7840028fbba29959" kindref="member">CIccTagXmlSegmentedCurve::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr<sp/>)</highlight></codeline>
<codeline lineno="3078"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pCurveNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;SegmentedCurve&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCurveNode)<sp/>{</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d24/a02001" kindref="compound">CIccSegmentedCurveXml</ref><sp/>*pCurve<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d8/d24/a02001" kindref="compound">CIccSegmentedCurveXml</ref>();</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCurve)<sp/>{</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCurve-&gt;<ref refid="d8/d24/a02001_1a2bc340753a906c5ac56b9c546359f436" kindref="member">ParseXml</ref>(pCurveNode,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetCurve(pCurve);</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCurve;</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>allocate<sp/>Segmented<sp/>Curve\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>find<sp/>Segmented<sp/>Curve\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3098"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"></highlight></codeline>
<codeline lineno="3100"><highlight class="normal"></highlight></codeline>
<codeline lineno="3101" refid="d9/d17/a01937_1a88313380d8ce5b23fdf80d9fb76e5364" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d17/a01937_1a00dfc958c87aaf5c7840028fbba29959" kindref="member">CIccTagXmlSegmentedCurve::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref><sp/>nType,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="3102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseXml(pNode,<sp/>parseStr);</highlight></codeline>
<codeline lineno="3104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"></highlight></codeline>
<codeline lineno="3106"><highlight class="normal"></highlight></codeline>
<codeline lineno="3107" refid="d0/d27/a00239_1aa3783dbcb8b73337e1975908b9d7c4e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d27/a00239_1aa3783dbcb8b73337e1975908b9d7c4e1" kindref="member">icMatrixToXml</ref>(std::string<sp/>&amp;xml,<sp/><ref refid="d6/d6e/a01137" kindref="compound">CIccMatrix</ref><sp/>*pMatrix,<sp/>std::string<sp/>blanks)</highlight></codeline>
<codeline lineno="3108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[128];</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;Matrix\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"></highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>e1=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>e2=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>e3=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;\n&quot;</highlight><highlight class="normal">,<sp/>pMatrix-&gt;<ref refid="d6/d6e/a01137_1a69dfaeb08457336b51f559f484aa178a" kindref="member">m_e</ref>[0],<sp/>pMatrix-&gt;<ref refid="d6/d6e/a01137_1a69dfaeb08457336b51f559f484aa178a" kindref="member">m_e</ref>[1],<sp/>pMatrix-&gt;<ref refid="d6/d6e/a01137_1a69dfaeb08457336b51f559f484aa178a" kindref="member">m_e</ref>[2]);</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"></highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>e4=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>e5=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>e6=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;\n&quot;</highlight><highlight class="normal">,<sp/>pMatrix-&gt;<ref refid="d6/d6e/a01137_1a69dfaeb08457336b51f559f484aa178a" kindref="member">m_e</ref>[3],<sp/>pMatrix-&gt;<ref refid="d6/d6e/a01137_1a69dfaeb08457336b51f559f484aa178a" kindref="member">m_e</ref>[4],<sp/>pMatrix-&gt;<ref refid="d6/d6e/a01137_1a69dfaeb08457336b51f559f484aa178a" kindref="member">m_e</ref>[5]);</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"></highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>e7=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>e8=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>e9=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">,<sp/>pMatrix-&gt;<ref refid="d6/d6e/a01137_1a69dfaeb08457336b51f559f484aa178a" kindref="member">m_e</ref>[6],<sp/>pMatrix-&gt;<ref refid="d6/d6e/a01137_1a69dfaeb08457336b51f559f484aa178a" kindref="member">m_e</ref>[7],<sp/>pMatrix-&gt;<ref refid="d6/d6e/a01137_1a69dfaeb08457336b51f559f484aa178a" kindref="member">m_e</ref>[8]);</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"></highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMatrix-&gt;<ref refid="d6/d6e/a01137_1ae60e859fa2d9eb58ae46c1d78eb7b8e2" kindref="member">m_bUseConstants</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>e10=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>e11=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>e12=\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="d7/d03/a00254_1adad2d4530f9ddd52a2027362d3a7caf9" kindref="member">icXmlFloatFmt</ref><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">,<sp/>pMatrix-&gt;<ref refid="d6/d6e/a01137_1a69dfaeb08457336b51f559f484aa178a" kindref="member">m_e</ref>[9],<sp/>pMatrix-&gt;<ref refid="d6/d6e/a01137_1a69dfaeb08457336b51f559f484aa178a" kindref="member">m_e</ref>[10],<sp/>pMatrix-&gt;<ref refid="d6/d6e/a01137_1a69dfaeb08457336b51f559f484aa178a" kindref="member">m_e</ref>[11]);</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"></highlight></codeline>
<codeline lineno="3130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>luts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3131" refid="d0/d27/a00239_1a2637faf66e8480a8e4b3b1ebfcb3d491" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d27/a00239_1a2637faf66e8480a8e4b3b1ebfcb3d491" kindref="member">icMBBToXml</ref>(std::string<sp/>&amp;xml,<sp/><ref refid="dc/d06/a01153" kindref="compound">CIccMBB</ref><sp/>*pMBB,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref><sp/>nType,<sp/>std::string<sp/>blanks=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSaveGridPoints=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//blanks<sp/>+=<sp/>&quot;<sp/><sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"></highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;Channels<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1a27d1df6b700c896a7a6da12562d09018" kindref="member">InputChannels</ref>(),<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1a33d94042166c1b9c6f3059785ca0d3aa" kindref="member">OutputChannels</ref>());</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"></highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMBB-&gt;<ref refid="dc/d06/a01153_1a278bcf1ad325db815d90b99a6b5996e1" kindref="member">IsInputMatrix</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMBB-&gt;<ref refid="dc/d06/a01153_1a4ce9ee842d19e4eee3ca02db0de16eb8" kindref="member">SwapMBCurves</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMBB-&gt;<ref refid="dc/d06/a01153_1abcc4f998a96b263bf0f6c6c742e449cb" kindref="member">GetMatrix</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>if-statement<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d0/d27/a00239_1aa3783dbcb8b73337e1975908b9d7c4e1" kindref="member">icMatrixToXml</ref>(xml,<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1abcc4f998a96b263bf0f6c6c742e449cb" kindref="member">GetMatrix</ref>(),<sp/>blanks))<sp/>{</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"></highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMBB-&gt;<ref refid="dc/d06/a01153_1a437dcc750cc7a9fe1d7f9799e13c9879" kindref="member">GetCurvesB</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>if-statement<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d0/d27/a00239_1a0487825d4241d4ed1b2ad5825ba72cd9" kindref="member">icCurvesToXml</ref>(xml,<sp/></highlight><highlight class="stringliteral">&quot;BCurves&quot;</highlight><highlight class="normal">,<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1a16f6c9361bf92779117b0479003cd6bd" kindref="member">GetCurvesM</ref>(),<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1a27d1df6b700c896a7a6da12562d09018" kindref="member">InputChannels</ref>(),<sp/>nType,<sp/>blanks))<sp/>{</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMBB-&gt;<ref refid="dc/d06/a01153_1a437dcc750cc7a9fe1d7f9799e13c9879" kindref="member">GetCurvesB</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>if-statement<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d0/d27/a00239_1a0487825d4241d4ed1b2ad5825ba72cd9" kindref="member">icCurvesToXml</ref>(xml,<sp/></highlight><highlight class="stringliteral">&quot;BCurves&quot;</highlight><highlight class="normal">,<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1a437dcc750cc7a9fe1d7f9799e13c9879" kindref="member">GetCurvesB</ref>(),<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1a27d1df6b700c896a7a6da12562d09018" kindref="member">InputChannels</ref>(),<sp/>nType,<sp/>blanks))<sp/>{</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"></highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMBB-&gt;<ref refid="dc/d06/a01153_1abcc4f998a96b263bf0f6c6c742e449cb" kindref="member">GetMatrix</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>if-statement<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d0/d27/a00239_1aa3783dbcb8b73337e1975908b9d7c4e1" kindref="member">icMatrixToXml</ref>(xml,<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1abcc4f998a96b263bf0f6c6c742e449cb" kindref="member">GetMatrix</ref>(),<sp/>blanks))<sp/>{</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"></highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMBB-&gt;<ref refid="dc/d06/a01153_1a16f6c9361bf92779117b0479003cd6bd" kindref="member">GetCurvesM</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>if-statement<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d0/d27/a00239_1a0487825d4241d4ed1b2ad5825ba72cd9" kindref="member">icCurvesToXml</ref>(xml,<sp/></highlight><highlight class="stringliteral">&quot;MCurves&quot;</highlight><highlight class="normal">,<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1a16f6c9361bf92779117b0479003cd6bd" kindref="member">GetCurvesM</ref>(),<sp/>3,<sp/>nType,<sp/>blanks)){</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"></highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMBB-&gt;<ref refid="dc/d06/a01153_1abc6ae335b33f73d1ab5f95105d2d38ef" kindref="member">GetCLUT</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>if-statement<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a8e60807f7d16227a24f22ad32623bf98" kindref="member">icCLUTToXml</ref>(xml,<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1abc6ae335b33f73d1ab5f95105d2d38ef" kindref="member">GetCLUT</ref>(),<sp/>nType,<sp/>blanks,<sp/>bSaveGridPoints)){</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"></highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMBB-&gt;<ref refid="dc/d06/a01153_1acd1f128ac57344954a4f3232da3f78c6" kindref="member">GetCurvesA</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>if-statement<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d0/d27/a00239_1a0487825d4241d4ed1b2ad5825ba72cd9" kindref="member">icCurvesToXml</ref>(xml,<sp/></highlight><highlight class="stringliteral">&quot;ACurves&quot;</highlight><highlight class="normal">,<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1acd1f128ac57344954a4f3232da3f78c6" kindref="member">GetCurvesA</ref>(),<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1a33d94042166c1b9c6f3059785ca0d3aa" kindref="member">OutputChannels</ref>(),<sp/>nType,<sp/>blanks)){</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMBB-&gt;<ref refid="dc/d06/a01153_1acd1f128ac57344954a4f3232da3f78c6" kindref="member">GetCurvesA</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>if-statement<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d0/d27/a00239_1a0487825d4241d4ed1b2ad5825ba72cd9" kindref="member">icCurvesToXml</ref>(xml,<sp/></highlight><highlight class="stringliteral">&quot;ACurves&quot;</highlight><highlight class="normal">,<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1acd1f128ac57344954a4f3232da3f78c6" kindref="member">GetCurvesA</ref>(),<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1a27d1df6b700c896a7a6da12562d09018" kindref="member">InputChannels</ref>(),<sp/>nType,<sp/>blanks)){</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"></highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMBB-&gt;<ref refid="dc/d06/a01153_1abc6ae335b33f73d1ab5f95105d2d38ef" kindref="member">GetCLUT</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>if-statement<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a8e60807f7d16227a24f22ad32623bf98" kindref="member">icCLUTToXml</ref>(xml,<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1abc6ae335b33f73d1ab5f95105d2d38ef" kindref="member">GetCLUT</ref>(),<sp/>nType,<sp/>blanks,<sp/>bSaveGridPoints)){</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"></highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMBB-&gt;<ref refid="dc/d06/a01153_1a16f6c9361bf92779117b0479003cd6bd" kindref="member">GetCurvesM</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>if-statement<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d0/d27/a00239_1a0487825d4241d4ed1b2ad5825ba72cd9" kindref="member">icCurvesToXml</ref>(xml,<sp/></highlight><highlight class="stringliteral">&quot;MCurves&quot;</highlight><highlight class="normal">,<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1a16f6c9361bf92779117b0479003cd6bd" kindref="member">GetCurvesM</ref>(),<sp/>3,<sp/>nType,<sp/>blanks)){</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"></highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMBB-&gt;<ref refid="dc/d06/a01153_1abcc4f998a96b263bf0f6c6c742e449cb" kindref="member">GetMatrix</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>if-statement<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d0/d27/a00239_1aa3783dbcb8b73337e1975908b9d7c4e1" kindref="member">icMatrixToXml</ref>(xml,<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1abcc4f998a96b263bf0f6c6c742e449cb" kindref="member">GetMatrix</ref>(),<sp/>blanks))<sp/>{</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"></highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMBB-&gt;<ref refid="dc/d06/a01153_1a437dcc750cc7a9fe1d7f9799e13c9879" kindref="member">GetCurvesB</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>if-statement<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d0/d27/a00239_1a0487825d4241d4ed1b2ad5825ba72cd9" kindref="member">icCurvesToXml</ref>(xml,<sp/></highlight><highlight class="stringliteral">&quot;BCurves&quot;</highlight><highlight class="normal">,<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1a437dcc750cc7a9fe1d7f9799e13c9879" kindref="member">GetCurvesB</ref>(),<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1a33d94042166c1b9c6f3059785ca0d3aa" kindref="member">OutputChannels</ref>(),<sp/>nType,<sp/>blanks)){</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"></highlight></codeline>
<codeline lineno="3231"><highlight class="normal"></highlight></codeline>
<codeline lineno="3232" refid="d0/d27/a00239_1ab2ad4f9d9730453002176b26c0899dab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d27/a00239_1ab2ad4f9d9730453002176b26c0899dab" kindref="member">icCurvesFromXml</ref>(<ref refid="dd/de4/a01121" kindref="compound">LPIccCurve</ref><sp/>*pCurve,<sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>nChannels,<sp/>xmlNode<sp/>*pNode,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref><sp/>nType,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="3233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pCurveNode;</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"></highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0,<sp/>pCurveNode<sp/>=<sp/>pNode;<sp/>i&lt;nChannels<sp/>&amp;&amp;<sp/>pCurveNode;<sp/>pCurveNode=pCurveNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCurveNode-&gt;type==XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/de4/a01121" kindref="compound">CIccCurve</ref><sp/>*pCurveTag<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pCurveNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;Curve&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCurveTag<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dc/dc8/a01929" kindref="compound">CIccTagXmlCurve</ref>;</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pCurveNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;ParametricCurve&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCurveTag<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dc/da7/a01933" kindref="compound">CIccTagXmlParametricCurve</ref>();</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"></highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCurveTag)<sp/>{</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/dcd/a00965" kindref="compound">IIccExtensionTag</ref><sp/>*pExt<sp/>=<sp/>pCurveTag-&gt;<ref refid="d7/dfd/a00969_1aa4cc7f1dd04e9b537738d1dfa96a9790" kindref="member">GetExtension</ref>();</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"></highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pExt)<sp/>{</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(pExt-&gt;<ref refid="d3/dcd/a00965_1ac7bb0a319f913857a32f13d31df189c8" kindref="member">GetExtDerivedClassName</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;CIccCurveXml&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d18/a01925" kindref="compound">CIccCurveXml</ref><sp/>*pCurveXml<sp/>=<sp/>(<ref refid="d6/d18/a01925" kindref="compound">CIccCurveXml</ref><sp/>*)pExt;</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"></highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCurveXml-&gt;<ref refid="d6/d18/a01925_1a077bbe4f80ab0ea8f83328361c5dc6cf" kindref="member">ParseXml</ref>(pCurveNode,<sp/>nType,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCurve[i]<sp/>=<sp/>pCurveTag;</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>else<sp/>statement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>num[40];</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>curve<sp/>at<sp/>Line&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(num,<sp/></highlight><highlight class="stringliteral">&quot;%d\n&quot;</highlight><highlight class="normal">,<sp/>pCurveNode-&gt;line);</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>num;</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"></highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCurveTag;</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(pExt-&gt;<ref refid="d3/dcd/a00965_1afc77445123182ddaec413f6353c719be" kindref="member">GetExtClassName</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;CIccTagXml&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref><sp/>*pXmlTag<sp/>=<sp/>(<ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref><sp/>*)pExt;</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"></highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pXmlTag-&gt;<ref refid="de/d3c/a01809_1ab389ac02038775bf0a198ae68847d8a1" kindref="member">ParseXml</ref>(pCurveNode,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCurve[i]<sp/>=<sp/>pCurveTag;</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>else<sp/>statement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>num[40];</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>curve<sp/>tag<sp/>at<sp/>Line&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(num,<sp/></highlight><highlight class="stringliteral">&quot;%d\n&quot;</highlight><highlight class="normal">,<sp/>pCurveNode-&gt;line);</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>num;</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"></highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCurveTag;</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCurveTag;</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!i<sp/>!=<sp/>nChannels)<sp/>{</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>number<sp/>mismatch!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i==nChannels;</highlight></codeline>
<codeline lineno="3299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"></highlight></codeline>
<codeline lineno="3301" refid="d0/d27/a00239_1ac1a584ae1478d58b3578ae2b7c3dc10c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d27/a00239_1ac1a584ae1478d58b3578ae2b7c3dc10c" kindref="member">icMatrixFromXml</ref>(<ref refid="d6/d6e/a01137" kindref="compound">CIccMatrix</ref><sp/>*pMatrix,<sp/>xmlNode<sp/>*pNode)</highlight></codeline>
<codeline lineno="3302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/>memset(pMatrix-&gt;<ref refid="d6/d6e/a01137_1a69dfaeb08457336b51f559f484aa178a" kindref="member">m_e</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pMatrix-&gt;<ref refid="d6/d6e/a01137_1a69dfaeb08457336b51f559f484aa178a" kindref="member">m_e</ref>));</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/>pMatrix-&gt;<ref refid="d6/d6e/a01137_1ae60e859fa2d9eb58ae46c1d78eb7b8e2" kindref="member">m_bUseConstants</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"></highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>attrName[15];</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"></highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;9;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(attrName,<sp/></highlight><highlight class="stringliteral">&quot;e%d&quot;</highlight><highlight class="normal">,<sp/>i+1);</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlAttr<sp/>*attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/>attrName);</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pMatrix-&gt;<ref refid="d6/d6e/a01137_1a69dfaeb08457336b51f559f484aa178a" kindref="member">m_e</ref>[i]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=9;<sp/>i&lt;12;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(attrName,<sp/></highlight><highlight class="stringliteral">&quot;e%d&quot;</highlight><highlight class="normal">,<sp/>i+1);</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlAttr<sp/>*attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/>attrName);</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr)<sp/>{</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pMatrix-&gt;<ref refid="d6/d6e/a01137_1a69dfaeb08457336b51f559f484aa178a" kindref="member">m_e</ref>[i]<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pMatrix-&gt;<ref refid="d6/d6e/a01137_1ae60e859fa2d9eb58ae46c1d78eb7b8e2" kindref="member">m_bUseConstants</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"></highlight></codeline>
<codeline lineno="3327" refid="dd/dd7/a00260_1a7c5a7e91d27be931c8067c38c7f17ea6" refkind="member"><highlight class="normal"><ref refid="d8/d02/a01149" kindref="compound">CIccCLUT</ref><sp/>*<ref refid="dd/dd7/a00260_1a7c5a7e91d27be931c8067c38c7f17ea6" kindref="member">icCLutFromXml</ref>(xmlNode<sp/>*pNode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nOut,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref><sp/>nType,<sp/><sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="3328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><ref refid="d8/d02/a01149" kindref="compound">CIccCLUT</ref><sp/>*pCLUT<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"></highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPrecision<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" kindref="member">icConvert8Bit</ref>)</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/>nPrecision<sp/>=<sp/>1;<sp/><sp/></highlight></codeline>
<codeline lineno="3334"><highlight class="normal"></highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>nInput<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref>)nIn;</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>nOutput<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>)nOut;</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"></highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/>pCLUT<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d8/d02/a01149" kindref="compound">CIccCLUT</ref>(nInput,<sp/>nOutput,<sp/>nPrecision);</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"></highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pCLUT){</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>creating<sp/>CLUT<sp/>Table.<sp/>Check<sp/>values<sp/>of<sp/>Precision,<sp/>InputChannel,<sp/>or<sp/>OutputChannels.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"></highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*grid<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;GridPoints&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grid)<sp/>{</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccUInt8Array</ref><sp/>points;</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"></highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(points.<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">ParseArray</ref>(grid-&gt;children))<sp/>{</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pCLUT-&gt;<ref refid="d8/d02/a01149_1afaacdd60037b3ebf7682d55a45009a31" kindref="member">Init</ref>(points.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>setting<sp/>the<sp/>size<sp/>of<sp/>GridPoints.<sp/>Check<sp/>values<sp/>of<sp/>GridPoints,<sp/>InputChannel,<sp/>or<sp/>OutputChannels.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>parsing<sp/>GridPoints.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>nGridGranularity;</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"></highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlAttr<sp/>*gridGranularity<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;GridGranularity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"></highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gridGranularity)<sp/>{</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nGridGranularity<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(gridGranularity));</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pCLUT-&gt;<ref refid="d8/d02/a01149_1afaacdd60037b3ebf7682d55a45009a31" kindref="member">Init</ref>(nGridGranularity))<sp/>{</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>setting<sp/>the<sp/>size<sp/>of<sp/>GridGranularity.<sp/>Check<sp/>values<sp/>of<sp/>GridGranularity,<sp/>InputChannel,<sp/>or<sp/>OutputChannels.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"></highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*table<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;TableData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"></highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table)<sp/>{</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8acf7f3d311a96b6529fb7b3ac82fd372b" kindref="member">icConvertVariable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*precision<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(table,<sp/></highlight><highlight class="stringliteral">&quot;Precision&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(precision<sp/>&amp;&amp;<sp/>atoi(precision)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nType<sp/>=<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" kindref="member">icConvert8Bit</ref>;</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCLUT-&gt;<ref refid="d8/d02/a01149_1aa33a2b8078f4408eb02918676992f686" kindref="member">SetPrecision</ref>(1);</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nType<sp/>=<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref>;</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCLUT-&gt;<ref refid="d8/d02/a01149_1aa33a2b8078f4408eb02918676992f686" kindref="member">SetPrecision</ref>(2);</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"></highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(table,<sp/></highlight><highlight class="stringliteral">&quot;Filename&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!filename<sp/>||<sp/>!filename[0])<sp/>{</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filename<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(table,<sp/></highlight><highlight class="stringliteral">&quot;File&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"></highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filename[0])<sp/>{</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d2c/a00893" kindref="compound">CIccIO</ref><sp/>*file<sp/>=<sp/><ref refid="d9/dd6/a00272_1a1787be4d01fe1c357f48a2e8531622a6" kindref="member">IccOpenFileIO</ref>(filename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file)<sp/>{</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>error<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>File<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=</highlight><highlight class="stringliteral">&quot;&apos;<sp/>not<sp/>found.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"></highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(table,<sp/></highlight><highlight class="stringliteral">&quot;Format&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"></highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(format,<sp/></highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>();</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(num);</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"></highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buf)<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Memory<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"></highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allow<sp/>for<sp/>different<sp/>encoding<sp/>in<sp/>text<sp/>file<sp/>than<sp/>implied<sp/>by<sp/>the<sp/>table<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encoding<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(table,<sp/></highlight><highlight class="stringliteral">&quot;FileEncoding&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"></highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(encoding,<sp/></highlight><highlight class="stringliteral">&quot;int8&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nType<sp/>=<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" kindref="member">icConvert8Bit</ref>;</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(encoding,<sp/></highlight><highlight class="stringliteral">&quot;int16&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nType<sp/>=<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref>;</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(encoding,<sp/></highlight><highlight class="stringliteral">&quot;float&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nType<sp/>=<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>;</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(encoding[0])<sp/>{</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr+=<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>encoding<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr+=<sp/>encoding;</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>-<sp/>using<sp/>default<sp/>encoding\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"></highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="dc/d2c/a00893_1a3a42fb785255dda8609fc46c83fe4f2c" kindref="member">Read8</ref>(buf,<sp/>num)!=num)<sp/>{<sp/></highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Read-File<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buf);</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"></highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" kindref="member">icConvert8Bit</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccUInt8Array</ref><sp/>data;</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"></highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.<ref refid="de/dd3/a01873_1a23e7980af4e5c740a54d8c23ec68acbb" kindref="member">ParseTextArrayNum</ref>(buf,<sp/>num,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buf);</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"></highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()!=pCLUT-&gt;<ref refid="d8/d02/a01149_1a815d091583440220135b3e99fed15f08" kindref="member">NumPoints</ref>()*pCLUT-&gt;<ref refid="d8/d02/a01149_1a11c1f0a6f3f878840eaed3e00d1ce74e" kindref="member">GetOutputChannels</ref>())<sp/>{<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>Number<sp/>of<sp/>entries<sp/>in<sp/>file<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;is<sp/>not<sp/>equal<sp/>to<sp/>the<sp/>size<sp/>of<sp/>the<sp/>CLUT<sp/>Table.\n&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>a.<sp/>Check<sp/>values<sp/>of<sp/>GridGranularity/GridPoints,<sp/>InputChannel,<sp/>or<sp/>OutputChannels.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>b.<sp/>File<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buf);</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*src<sp/>=<sp/>data.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>pCLUT-&gt;<ref refid="d8/d02/a01149_1aa42861bdf83a889cb2bb7dc8940ba325" kindref="member">GetData</ref>(0);</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"></highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)(*src++)<sp/>/<sp/>255.0f;</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccUInt16Array</ref><sp/>data;</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"></highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.<ref refid="de/dd3/a01873_1a23e7980af4e5c740a54d8c23ec68acbb" kindref="member">ParseTextArrayNum</ref>(buf,<sp/>num,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buf);</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"></highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()!=pCLUT-&gt;<ref refid="d8/d02/a01149_1a815d091583440220135b3e99fed15f08" kindref="member">NumPoints</ref>()*pCLUT-&gt;<ref refid="d8/d02/a01149_1a11c1f0a6f3f878840eaed3e00d1ce74e" kindref="member">GetOutputChannels</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>Number<sp/>of<sp/>entries<sp/>in<sp/>file<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;is<sp/>not<sp/>equal<sp/>to<sp/>the<sp/>size<sp/>of<sp/>the<sp/>CLUT<sp/>Table.\n&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>a.<sp/>Check<sp/>values<sp/>of<sp/>GridGranularity/GridPoints,<sp/>InputChannel,<sp/>or<sp/>OutputChannels.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>b.<sp/>File<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buf);</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>*src<sp/>=<sp/>data.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>pCLUT-&gt;<ref refid="d8/d02/a01149_1aa42861bdf83a889cb2bb7dc8940ba325" kindref="member">GetData</ref>(0);</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"></highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)(*src++)<sp/>/<sp/>65535.0f;</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccFloatArray</ref><sp/>data;</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"></highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.<ref refid="de/dd3/a01873_1a23e7980af4e5c740a54d8c23ec68acbb" kindref="member">ParseTextArrayNum</ref>(buf,<sp/>num,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buf);</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"></highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()!=pCLUT-&gt;<ref refid="d8/d02/a01149_1a815d091583440220135b3e99fed15f08" kindref="member">NumPoints</ref>()*pCLUT-&gt;<ref refid="d8/d02/a01149_1a11c1f0a6f3f878840eaed3e00d1ce74e" kindref="member">GetOutputChannels</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>Number<sp/>of<sp/>entries<sp/>in<sp/>file<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;is<sp/>not<sp/>equal<sp/>to<sp/>the<sp/>size<sp/>of<sp/>the<sp/>CLUT<sp/>Table.\n&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>a.<sp/>Check<sp/>values<sp/>of<sp/>GridGranularity/GridPoints,<sp/>InputChannel,<sp/>or<sp/>OutputChannels.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>b.<sp/>File<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>text<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buf);</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*src<sp/>=<sp/>data.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>pCLUT-&gt;<ref refid="d8/d02/a01149_1aa42861bdf83a889cb2bb7dc8940ba325" kindref="member">GetData</ref>(0);</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"></highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>*src++;</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>Unknown<sp/>text<sp/>data<sp/>type.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buf);</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buf);</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(format,<sp/></highlight><highlight class="stringliteral">&quot;binary&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*order<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(table,<sp/></highlight><highlight class="stringliteral">&quot;Endian&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>little_endian<sp/>=<sp/>!strcmp(order,<sp/></highlight><highlight class="stringliteral">&quot;little&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"></highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType==<ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8acf7f3d311a96b6529fb7b3ac82fd372b" kindref="member">icConvertVariable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allow<sp/>encoding<sp/>to<sp/>be<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encoding<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(table,<sp/></highlight><highlight class="stringliteral">&quot;FileEncoding&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"></highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(encoding,<sp/></highlight><highlight class="stringliteral">&quot;int8&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nType<sp/>=<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" kindref="member">icConvert8Bit</ref>;</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(encoding,<sp/></highlight><highlight class="stringliteral">&quot;int16&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nType<sp/>=<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref>;</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(encoding,<sp/></highlight><highlight class="stringliteral">&quot;float&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nType<sp/>=<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>;</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(encoding[0])<sp/>{</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr+=<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>encoding<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr+=<sp/>encoding;</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>-<sp/>using<sp/>int16.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nType<sp/>=<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref>;</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr+=<sp/></highlight><highlight class="stringliteral">&quot;CLUT<sp/>TableData<sp/>Encoding<sp/>type<sp/>not<sp/>specified.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"></highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" kindref="member">icConvert8Bit</ref>){</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>();</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>value;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>number<sp/>of<sp/>entries<sp/>in<sp/>file<sp/>is<sp/>not<sp/>equal<sp/>to<sp/>size<sp/>of<sp/>CLUT<sp/>table,<sp/>flag<sp/>as<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num!=pCLUT-&gt;<ref refid="d8/d02/a01149_1a815d091583440220135b3e99fed15f08" kindref="member">NumPoints</ref>()*pCLUT-&gt;<ref refid="d8/d02/a01149_1a11c1f0a6f3f878840eaed3e00d1ce74e" kindref="member">GetOutputChannels</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>Number<sp/>of<sp/>entries<sp/>in<sp/>file<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;is<sp/>not<sp/>equal<sp/>to<sp/>the<sp/>size<sp/>of<sp/>the<sp/>CLUT<sp/>Table.\n&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>a.<sp/>Check<sp/>values<sp/>of<sp/>GridGranularity/GridPoints,<sp/>InputChannel,<sp/>or<sp/>OutputChannels.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>b.<sp/>File<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>binary<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>pCLUT-&gt;<ref refid="d8/d02/a01149_1aa42861bdf83a889cb2bb7dc8940ba325" kindref="member">GetData</ref>(0);</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file-&gt;<ref refid="dc/d2c/a00893_1a3a42fb785255dda8609fc46c83fe4f2c" kindref="member">Read8</ref>(&amp;value))<sp/>{</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Read-File<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>binary<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)value<sp/>/<sp/>255.0f;</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref>){</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>()<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>);</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>value;</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*ptr<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref>*)&amp;value;</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"></highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num&lt;pCLUT-&gt;NumPoints()*pCLUT-&gt;<ref refid="d8/d02/a01149_1a11c1f0a6f3f878840eaed3e00d1ce74e" kindref="member">GetOutputChannels</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>Number<sp/>of<sp/>entries<sp/>in<sp/>file<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;is<sp/>not<sp/>equal<sp/>to<sp/>the<sp/>size<sp/>of<sp/>the<sp/>CLUT<sp/>Table.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>a.<sp/>Check<sp/>values<sp/>of<sp/>GridGranularity/GridPoints,<sp/>InputChannel,<sp/>or<sp/>OutputChannels.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>b.<sp/>File<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>binary<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>pCLUT-&gt;<ref refid="d8/d02/a01149_1aa42861bdf83a889cb2bb7dc8940ba325" kindref="member">GetData</ref>(0);</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"></highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file-&gt;<ref refid="dc/d2c/a00893_1a460f7d82e1daf63f867d7cbca8db2ac4" kindref="member">Read16</ref>(&amp;value))<sp/>{<sp/><sp/></highlight><highlight class="comment">//this<sp/>assumes<sp/>data<sp/>is<sp/>big<sp/>endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Read-File<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>binary<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ICC_BYTE_ORDER_LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(little_endian)<sp/>{</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!little_endian)<sp/>{</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>t<sp/>=<sp/>ptr[0];</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr[0]<sp/>=<sp/>ptr[1];</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr[1]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)value<sp/>/<sp/>65535.0f;</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>){</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>()/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d7/d46/a00002_1a087042fc82a070c4afebf2e05e708f5b" kindref="member">icFloat32Number</ref>);</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a087042fc82a070c4afebf2e05e708f5b" kindref="member">icFloat32Number</ref><sp/>value;</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*ptr<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref>*)&amp;value;</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"></highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num&lt;pCLUT-&gt;NumPoints()*pCLUT-&gt;<ref refid="d8/d02/a01149_1a11c1f0a6f3f878840eaed3e00d1ce74e" kindref="member">GetOutputChannels</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>Number<sp/>of<sp/>entries<sp/>in<sp/>file<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;is<sp/>not<sp/>equal<sp/>to<sp/>the<sp/>size<sp/>of<sp/>the<sp/>CLUT<sp/>Table.\n&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>a.<sp/>Check<sp/>values<sp/>of<sp/>GridGranularity/GridPoints,<sp/>InputChannel,<sp/>or<sp/>OutputChannels.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>b.<sp/>File<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>binary<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>pCLUT-&gt;<ref refid="d8/d02/a01149_1aa42861bdf83a889cb2bb7dc8940ba325" kindref="member">GetData</ref>(0);</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"></highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file-&gt;<ref refid="dc/d2c/a00893_1a1399dc6dcf7aefe36b78ad96fc117d17" kindref="member">ReadFloat32Float</ref>(&amp;value))<sp/>{<sp/><sp/></highlight><highlight class="comment">//this<sp/>assumes<sp/>data<sp/>is<sp/>big<sp/>endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Read-File<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>binary<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ICC_BYTE_ORDER_LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(little_endian)<sp/>{</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!little_endian)<sp/>{</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>ptr[0];<sp/>ptr[0]<sp/>=<sp/>ptr[3];<sp/>ptr[3]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>ptr[1];<sp/>ptr[1]<sp/>=<sp/>ptr[2];<sp/>ptr[2]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>Unknown<sp/>binary<sp/>data<sp/>type.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"></highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>Unknown<sp/>Format<sp/>type.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"></highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>no<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" kindref="member">icConvert8Bit</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccUInt8Array</ref><sp/>data;</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"></highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">ParseArray</ref>(table-&gt;children))<sp/>{</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>unable<sp/>to<sp/>parse<sp/>data<sp/>in<sp/>CLUT.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"></highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()!=pCLUT-&gt;<ref refid="d8/d02/a01149_1a815d091583440220135b3e99fed15f08" kindref="member">NumPoints</ref>()*pCLUT-&gt;<ref refid="d8/d02/a01149_1a11c1f0a6f3f878840eaed3e00d1ce74e" kindref="member">GetOutputChannels</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>Number<sp/>of<sp/>entries<sp/>is<sp/>not<sp/>equal<sp/>to<sp/>the<sp/>size<sp/>of<sp/>the<sp/>CLUT<sp/>Table.\n&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*src<sp/>=<sp/>data.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>pCLUT-&gt;<ref refid="d8/d02/a01149_1aa42861bdf83a889cb2bb7dc8940ba325" kindref="member">GetData</ref>(0);</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"></highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)(*src++)<sp/>/<sp/>255.0f;</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref><sp/>||<sp/>nType==<ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8acf7f3d311a96b6529fb7b3ac82fd372b" kindref="member">icConvertVariable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccUInt16Array</ref><sp/>data;</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"></highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">ParseArray</ref>(table-&gt;children))<sp/>{</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>unable<sp/>to<sp/>parse<sp/>data<sp/>in<sp/>CLUT.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"></highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()!=pCLUT-&gt;<ref refid="d8/d02/a01149_1a815d091583440220135b3e99fed15f08" kindref="member">NumPoints</ref>()*pCLUT-&gt;<ref refid="d8/d02/a01149_1a11c1f0a6f3f878840eaed3e00d1ce74e" kindref="member">GetOutputChannels</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>Number<sp/>of<sp/>entries<sp/>is<sp/>not<sp/>equal<sp/>to<sp/>the<sp/>size<sp/>of<sp/>the<sp/>CLUT<sp/>Table.\n&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref><sp/>*src<sp/>=<sp/>data.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>pCLUT-&gt;<ref refid="d8/d02/a01149_1aa42861bdf83a889cb2bb7dc8940ba325" kindref="member">GetData</ref>(0);</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)(*src++)<sp/>/<sp/>65535.0f;</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nType<sp/>==<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>){</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccFloatArray</ref><sp/>data;</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"></highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">ParseArray</ref>(table-&gt;children))<sp/>{</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>unable<sp/>to<sp/>parse<sp/>data<sp/>in<sp/>CLUT.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"></highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()!=pCLUT-&gt;<ref refid="d8/d02/a01149_1a815d091583440220135b3e99fed15f08" kindref="member">NumPoints</ref>()*pCLUT-&gt;<ref refid="d8/d02/a01149_1a11c1f0a6f3f878840eaed3e00d1ce74e" kindref="member">GetOutputChannels</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>Number<sp/>of<sp/>entries<sp/>is<sp/>not<sp/>equal<sp/>to<sp/>the<sp/>size<sp/>of<sp/>the<sp/>CLUT<sp/>Table.\n&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*src<sp/>=<sp/>data.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref><sp/>*dst<sp/>=<sp/>pCLUT-&gt;<ref refid="d8/d02/a01149_1aa42861bdf83a889cb2bb7dc8940ba325" kindref="member">GetData</ref>(0);</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"></highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>i;</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;data.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>*src++;</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>Unknown<sp/>table<sp/>data<sp/>type.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>Cannot<sp/>find<sp/>table<sp/>data.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"></highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pCLUT;</highlight></codeline>
<codeline lineno="3791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"></highlight></codeline>
<codeline lineno="3793" refid="d0/d27/a00239_1abb2a2c1c6eec43dfdc6cea84fe88a77f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d27/a00239_1abb2a2c1c6eec43dfdc6cea84fe88a77f" kindref="member">icMBBFromXml</ref>(<ref refid="dc/d06/a01153" kindref="compound">CIccMBB</ref><sp/>*pMBB,<sp/>xmlNode<sp/>*pNode,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8" kindref="member">icConvertType</ref><sp/>nType,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="3794"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pChannels<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Channels&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"></highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pChannels)</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"></highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/>xmlAttr<sp/>*in<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChannels,<sp/></highlight><highlight class="stringliteral">&quot;InputChannels&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/>xmlAttr<sp/>*out<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChannels,<sp/></highlight><highlight class="stringliteral">&quot;OutputChannels&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"></highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!in<sp/>||<sp/>!out)</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"></highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIn<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(in));</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nOut<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(out));</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"></highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1afc8280be7ae2a52c626da5072f2042aa" kindref="member">Init</ref>(nIn,<sp/>nOut);</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"></highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>pNode;<sp/>pNode<sp/>=<sp/>pNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;ACurves&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>!pMBB-&gt;<ref refid="dc/d06/a01153_1acd1f128ac57344954a4f3232da3f78c6" kindref="member">GetCurvesA</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/de4/a01121" kindref="compound">LPIccCurve</ref><sp/>*pCurves<sp/>=<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1a8009ad10a01ed3003cdef16a3463aab1" kindref="member">NewCurvesA</ref>();</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d0/d27/a00239_1ab2ad4f9d9730453002176b26c0899dab" kindref="member">icCurvesFromXml</ref>(pCurves,<sp/>!pMBB-&gt;<ref refid="dc/d06/a01153_1a0c1b65e2769f4a85dbdac46626cdc22a" kindref="member">IsInputB</ref>()<sp/>?<sp/>nIn<sp/>:<sp/>nOut,<sp/>pNode-&gt;children,<sp/>nType,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>Failed<sp/>to<sp/>parse<sp/>ACurves.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;BCurves&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>!pMBB-&gt;<ref refid="dc/d06/a01153_1a437dcc750cc7a9fe1d7f9799e13c9879" kindref="member">GetCurvesB</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/de4/a01121" kindref="compound">LPIccCurve</ref><sp/>*pCurves<sp/>=<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1a19e2d170d9b0482fa4bb6038b0d0bdcb" kindref="member">NewCurvesB</ref>();</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d0/d27/a00239_1ab2ad4f9d9730453002176b26c0899dab" kindref="member">icCurvesFromXml</ref>(pCurves,<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1a0c1b65e2769f4a85dbdac46626cdc22a" kindref="member">IsInputB</ref>()<sp/>?<sp/>nIn<sp/>:<sp/>nOut,<sp/>pNode-&gt;children,<sp/>nType,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>Failed<sp/>to<sp/>parse<sp/>BCurves.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;MCurves&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>!pMBB-&gt;<ref refid="dc/d06/a01153_1a16f6c9361bf92779117b0479003cd6bd" kindref="member">GetCurvesM</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/de4/a01121" kindref="compound">LPIccCurve</ref><sp/>*pCurves<sp/>=<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1a64189b5928a836fd28c53054328acc31" kindref="member">NewCurvesM</ref>();</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d0/d27/a00239_1ab2ad4f9d9730453002176b26c0899dab" kindref="member">icCurvesFromXml</ref>(pCurves,<sp/>!pMBB-&gt;<ref refid="dc/d06/a01153_1a278bcf1ad325db815d90b99a6b5996e1" kindref="member">IsInputMatrix</ref>()<sp/>?<sp/>nIn<sp/>:<sp/>nOut,<sp/>pNode-&gt;children,<sp/>nType,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>Failed<sp/>to<sp/>parse<sp/>MCurves.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;Matrix&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>!pMBB-&gt;<ref refid="dc/d06/a01153_1abcc4f998a96b263bf0f6c6c742e449cb" kindref="member">GetMatrix</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d6e/a01137" kindref="compound">CIccMatrix</ref><sp/>*pMatrix<sp/>=<sp/>pMBB-&gt;<ref refid="dc/d06/a01153_1a1e7a82890e7e56e1f93bd798a771f7d1" kindref="member">NewMatrix</ref>();</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d0/d27/a00239_1ac1a584ae1478d58b3578ae2b7c3dc10c" kindref="member">icMatrixFromXml</ref>(pMatrix,<sp/>pNode))<sp/>{</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>Failed<sp/>to<sp/>parse<sp/>Matrix.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;CLUT&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>!pMBB-&gt;<ref refid="dc/d06/a01153_1abc6ae335b33f73d1ab5f95105d2d38ef" kindref="member">GetCLUT</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d02/a01149" kindref="compound">CIccCLUT</ref><sp/>*pCLUT<sp/>=<sp/><ref refid="dd/dd7/a00260_1a7c5a7e91d27be931c8067c38c7f17ea6" kindref="member">icCLutFromXml</ref>(pNode,<sp/>nIn,<sp/>nOut,<sp/>nType,<sp/>parseStr);</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCLUT)<sp/>{</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pMBB-&gt;<ref refid="dc/d06/a01153_1a3f28f022fea3853583b82184b35a2587" kindref="member">SetCLUT</ref>(pCLUT))<sp/>{</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>Failed<sp/>to<sp/>set<sp/>CLUT<sp/>to<sp/>LUT.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>Failed<sp/>to<sp/>parse<sp/>CLUT.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"></highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"></highlight></codeline>
<codeline lineno="3860" refid="da/d76/a01941_1abeba5c3094ea9906c74bbe6e6c2e3586" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d76/a01941_1abeba5c3094ea9906c74bbe6e6c2e3586" kindref="member">CIccTagXmlLutAtoB::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3861"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/>std::string<sp/>info;</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"></highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rv<sp/>=<sp/><ref refid="d0/d27/a00239_1a2637faf66e8480a8e4b3b1ebfcb3d491" kindref="member">icMBBToXml</ref>(xml,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8acf7f3d311a96b6529fb7b3ac82fd372b" kindref="member">icConvertVariable</ref>,<sp/>blanks,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"></highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="3867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"></highlight></codeline>
<codeline lineno="3869"><highlight class="normal"></highlight></codeline>
<codeline lineno="3870" refid="da/d76/a01941_1a17d7ee9bbdbfd67551e3ad4096d82f12" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d76/a01941_1a17d7ee9bbdbfd67551e3ad4096d82f12" kindref="member">CIccTagXmlLutAtoB::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="3871"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"></highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode)<sp/>{</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d0/d27/a00239_1abb2a2c1c6eec43dfdc6cea84fe88a77f" kindref="member">icMBBFromXml</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>pNode,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8acf7f3d311a96b6529fb7b3ac82fd372b" kindref="member">icConvertVariable</ref>,<sp/>parseStr);</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"></highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"></highlight></codeline>
<codeline lineno="3880"><highlight class="normal"></highlight></codeline>
<codeline lineno="3881" refid="d5/d39/a01945_1ac1dbe883aa002d1232802f2e3783a272" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d39/a01945_1ac1dbe883aa002d1232802f2e3783a272" kindref="member">CIccTagXmlLutBtoA::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3882"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/>std::string<sp/>info;</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"></highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rv<sp/>=<sp/><ref refid="d0/d27/a00239_1a2637faf66e8480a8e4b3b1ebfcb3d491" kindref="member">icMBBToXml</ref>(xml,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8acf7f3d311a96b6529fb7b3ac82fd372b" kindref="member">icConvertVariable</ref>,<sp/>blanks,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"></highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="3888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"></highlight></codeline>
<codeline lineno="3890"><highlight class="normal"></highlight></codeline>
<codeline lineno="3891" refid="d5/d39/a01945_1a8f179c174b57d340a2d29780b3cb7d14" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d39/a01945_1a8f179c174b57d340a2d29780b3cb7d14" kindref="member">CIccTagXmlLutBtoA::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="3892"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode)<sp/>{</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d0/d27/a00239_1abb2a2c1c6eec43dfdc6cea84fe88a77f" kindref="member">icMBBFromXml</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>pNode,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8acf7f3d311a96b6529fb7b3ac82fd372b" kindref="member">icConvertVariable</ref>,<sp/>parseStr);</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"></highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3898"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"></highlight></codeline>
<codeline lineno="3900"><highlight class="normal"></highlight></codeline>
<codeline lineno="3901" refid="dd/d2e/a01949_1af32a3f3856a894a6de6fb4e718b629c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/d2e/a01949_1af32a3f3856a894a6de6fb4e718b629c5" kindref="member">CIccTagXmlLut8::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3902"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/>std::string<sp/>info;</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"></highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rv<sp/>=<sp/><ref refid="d0/d27/a00239_1a2637faf66e8480a8e4b3b1ebfcb3d491" kindref="member">icMBBToXml</ref>(xml,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" kindref="member">icConvert8Bit</ref>,<sp/>blanks,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"></highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="3908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"></highlight></codeline>
<codeline lineno="3910"><highlight class="normal"></highlight></codeline>
<codeline lineno="3911" refid="dd/d2e/a01949_1ac547bf18f93a7b1000a09bb307a2cf69" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/d2e/a01949_1ac547bf18f93a7b1000a09bb307a2cf69" kindref="member">CIccTagXmlLut8::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="3912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"></highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode)<sp/>{</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d0/d27/a00239_1abb2a2c1c6eec43dfdc6cea84fe88a77f" kindref="member">icMBBFromXml</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>pNode,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a79a2afe52938a9d3b002c06a773b8eb8" kindref="member">icConvert8Bit</ref>,<sp/>parseStr);</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"></highlight></codeline>
<codeline lineno="3920"><highlight class="normal"></highlight></codeline>
<codeline lineno="3921" refid="d9/d97/a01953_1abcbb870aa768cf4734c0a4e345fe0566" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d97/a01953_1abcbb870aa768cf4734c0a4e345fe0566" kindref="member">CIccTagXmlLut16::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3922"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/>std::string<sp/>info;</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"></highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rv<sp/>=<sp/><ref refid="d0/d27/a00239_1a2637faf66e8480a8e4b3b1ebfcb3d491" kindref="member">icMBBToXml</ref>(xml,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref>,<sp/>blanks,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"></highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="3928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"></highlight></codeline>
<codeline lineno="3930"><highlight class="normal"></highlight></codeline>
<codeline lineno="3931" refid="d9/d97/a01953_1a8326f04ecde36cd269be1bb293a9d6a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d97/a01953_1a8326f04ecde36cd269be1bb293a9d6a9" kindref="member">CIccTagXmlLut16::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="3932"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode)<sp/>{</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d0/d27/a00239_1abb2a2c1c6eec43dfdc6cea84fe88a77f" kindref="member">icMBBFromXml</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>pNode,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a9a36cdf34e3882ee2e65e4030db1b7fb" kindref="member">icConvert16Bit</ref>,<sp/>parseStr);</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"></highlight></codeline>
<codeline lineno="3939"><highlight class="normal"></highlight></codeline>
<codeline lineno="3940" refid="d2/d6f/a01957_1a961a44f22ec91143423cbd47ab977371" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d6f/a01957_1a961a44f22ec91143423cbd47ab977371" kindref="member">CIccTagXmlMultiProcessElement::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3941"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/>std::string<sp/>info;</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"></highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/>CIccMultiProcessElementList::iterator<sp/>i;</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"></highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;MultiProcessElements<sp/>InputChannels=\&quot;%d\&quot;<sp/>OutputChannels=\&quot;%d\&quot;&gt;\n&quot;</highlight><highlight class="normal">,<sp/>NumInputChannels(),<sp/>NumOutputChannels());</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"></highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=m_list-&gt;begin();<sp/>i!=m_list-&gt;end();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i-&gt;ptr)<sp/>{</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d43/a01193" kindref="compound">CIccMultiProcessElement</ref><sp/>*pMpe<sp/>=<sp/>i-&gt;ptr;</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"></highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/d10/a01189" kindref="compound">IIccExtensionMpe</ref><sp/>*pMpeExt<sp/>=<sp/>pMpe-&gt;<ref refid="dd/d43/a01193_1a9d0364bcea8215694dc1576f629934de" kindref="member">GetExtension</ref>();</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"></highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMpeExt)<sp/>{</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(pMpeExt-&gt;<ref refid="d3/d10/a01189_1a645d276bf232cfd12c5655d8dd7b817d" kindref="member">GetExtClassName</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;CIccMpeXml&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/dc1/a01993" kindref="compound">CIccMpeXml</ref><sp/>*pMpeXml<sp/>=<sp/>(<ref refid="d0/dc1/a01993" kindref="compound">CIccMpeXml</ref>*)pMpeExt;</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"></highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMpeXml-&gt;<ref refid="d0/dc1/a01993_1aa4c60bf9aed85f83e0fd39c8171b2f16" kindref="member">ToXml</ref>(xml,<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/MultiProcessElements&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3973"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"></highlight></codeline>
<codeline lineno="3975"><highlight class="normal"></highlight></codeline>
<codeline lineno="3976" refid="d2/d6f/a01957_1aa8d27ee5aef8e01cb2f610b48858ea11" refkind="member"><highlight class="normal"><ref refid="dd/d43/a01193" kindref="compound">CIccMultiProcessElement</ref><sp/>*<ref refid="d2/d6f/a01957_1aa8d27ee5aef8e01cb2f610b48858ea11" kindref="member">CIccTagXmlMultiProcessElement::CreateElement</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*szElementNodeName)</highlight></codeline>
<codeline lineno="3977"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szElementNodeName,<sp/></highlight><highlight class="stringliteral">&quot;CurveSetElement&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d3/d39/a02005" kindref="compound">CIccMpeXmlCurveSet</ref>;</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szElementNodeName,<sp/></highlight><highlight class="stringliteral">&quot;MatrixElement&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d8/d45/a02021" kindref="compound">CIccMpeXmlMatrix</ref>;</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szElementNodeName,<sp/></highlight><highlight class="stringliteral">&quot;CLutElement&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="da/d3e/a02025" kindref="compound">CIccMpeXmlCLUT</ref>;</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szElementNodeName,<sp/></highlight><highlight class="stringliteral">&quot;ExtCLutElement&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d6/d19/a02029" kindref="compound">CIccMpeXmlExtCLUT</ref>;</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szElementNodeName,<sp/></highlight><highlight class="stringliteral">&quot;CalculatorElement&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d8/de6/a02061" kindref="compound">CIccMpeXmlCalculator</ref>;</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szElementNodeName,<sp/></highlight><highlight class="stringliteral">&quot;TintArrayElement&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d8/d98/a02009" kindref="compound">CIccMpeXmlTintArray</ref>;</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szElementNodeName,<sp/></highlight><highlight class="stringliteral">&quot;ToneMapElement&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d0/dfd/a02017" kindref="compound">CIccMpeXmlToneMap</ref>;</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szElementNodeName,<sp/></highlight><highlight class="stringliteral">&quot;JabToXYZElement&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d3/dea/a02041" kindref="compound">CIccMpeXmlJabToXYZ</ref>;</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szElementNodeName,<sp/></highlight><highlight class="stringliteral">&quot;UnknownElement&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d0/d2b/a01997" kindref="compound">CIccMpeXmlUnknown</ref>;</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szElementNodeName,<sp/></highlight><highlight class="stringliteral">&quot;XYZToJabElement&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d7/d13/a02045" kindref="compound">CIccMpeXmlXYZToJab</ref>;</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szElementNodeName,<sp/></highlight><highlight class="stringliteral">&quot;EmissionMatrixElement&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d0/d67/a02065" kindref="compound">CIccMpeXmlEmissionMatrix</ref>;</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szElementNodeName,<sp/></highlight><highlight class="stringliteral">&quot;InvEmissionMatrixElement&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d3/d48/a02069" kindref="compound">CIccMpeXmlInvEmissionMatrix</ref>;</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szElementNodeName,<sp/></highlight><highlight class="stringliteral">&quot;EmissionCLutElement&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="de/df8/a02073" kindref="compound">CIccMpeXmlEmissionCLUT</ref>;</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szElementNodeName,<sp/></highlight><highlight class="stringliteral">&quot;ReflectanceCLutElement&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="db/dac/a02077" kindref="compound">CIccMpeXmlReflectanceCLUT</ref>;</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szElementNodeName,<sp/></highlight><highlight class="stringliteral">&quot;EmissionObserverElement&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d2/d50/a02081" kindref="compound">CIccMpeXmlEmissionObserver</ref>;</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szElementNodeName,<sp/></highlight><highlight class="stringliteral">&quot;ReflectanceObserverElement&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d2/dde/a02085" kindref="compound">CIccMpeXmlReflectanceObserver</ref>;</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szElementNodeName,<sp/></highlight><highlight class="stringliteral">&quot;BAcsElement&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d6/d94/a02033" kindref="compound">CIccMpeXmlBAcs</ref>;</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(szElementNodeName,<sp/></highlight><highlight class="stringliteral">&quot;EAcsElement&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/dfc/a02037" kindref="compound">CIccMpeXmlEAcs</ref>;</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4033"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"></highlight></codeline>
<codeline lineno="4035"><highlight class="normal"></highlight></codeline>
<codeline lineno="4036" refid="d2/d6f/a01957_1a09408c36528ddcd6177b41b0d08614ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d6f/a01957_1a09408c36528ddcd6177b41b0d08614ea" kindref="member">CIccTagXmlMultiProcessElement::ParseElement</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="4037"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/>xmlAttr<sp/>*attr;</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"></highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>!=<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4043"><highlight class="normal"></highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><ref refid="dd/d43/a01193" kindref="compound">CIccMultiProcessElement</ref><sp/>*pMpe<sp/>=<sp/>CreateElement((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;name);</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"></highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pMpe)<sp/>{</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>Element<sp/>Type<sp/>(&quot;</highlight><highlight class="normal">)<sp/>+<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"></highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><ref refid="de/db5/a01181" kindref="compound">CIccMultiProcessElementPtr</ref><sp/>ptr;</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"></highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><ref refid="d3/d10/a01189" kindref="compound">IIccExtensionMpe</ref><sp/>*pExt<sp/>=<sp/>pMpe-&gt;<ref refid="dd/d43/a01193_1a9d0364bcea8215694dc1576f629934de" kindref="member">GetExtension</ref>();</highlight></codeline>
<codeline lineno="4054"><highlight class="normal"></highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pExt)<sp/>{</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(pExt-&gt;<ref refid="d3/d10/a01189_1a645d276bf232cfd12c5655d8dd7b817d" kindref="member">GetExtClassName</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;CIccMpeXml&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/dc1/a01993" kindref="compound">CIccMpeXml</ref>*<sp/>pXmlMpe<sp/>=<sp/>(<ref refid="d0/dc1/a01993" kindref="compound">CIccMpeXml</ref>*)pExt;</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"></highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pXmlMpe-&gt;<ref refid="d0/dc1/a01993_1a0f0a4efab7609af9589966f5f2dce20b" kindref="member">ParseXml</ref>(pNode,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr=<ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Reserved&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr),<sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/>&amp;pMpe-&gt;<ref refid="dd/d43/a01193_1af2c0f93513ec8c5a0c54328e3d3d705c" kindref="member">m_nReserved</ref>);</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"></highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr.<ref refid="de/db5/a01181_1afb85cb6843949ff896ef132d64215f9a" kindref="member">ptr</ref><sp/>=<sp/>pMpe;</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_list-&gt;push_back(ptr);</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>element<sp/>of<sp/>type<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>pMpe-&gt;<ref refid="dd/d43/a01193_1adbca0ab9005419df17440d70e0f5eacf" kindref="member">GetClassName</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pMpe;</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Element<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>pMpe-&gt;<ref refid="dd/d43/a01193_1adbca0ab9005419df17440d70e0f5eacf" kindref="member">GetClassName</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;isn&apos;t<sp/>of<sp/>type<sp/>CIccMpeXml\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pMpe;</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Element<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>pMpe-&gt;<ref refid="dd/d43/a01193_1adbca0ab9005419df17440d70e0f5eacf" kindref="member">GetClassName</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;isn&apos;t<sp/>of<sp/>type<sp/>CIccMpeXml\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pMpe;</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4084"><highlight class="normal"></highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"></highlight></codeline>
<codeline lineno="4088"><highlight class="normal"></highlight></codeline>
<codeline lineno="4089" refid="d2/d6f/a01957_1a9fc2116a88d2d5ea8009ad4bc5154942" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d6f/a01957_1a9fc2116a88d2d5ea8009ad4bc5154942" kindref="member">CIccTagXmlMultiProcessElement::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="4090"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;MultiProcessElements&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"></highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pNode)<sp/>{</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>Find<sp/>MultiProcessElements\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"></highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/>xmlAttr<sp/>*pInputChannels<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;InputChannels&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/>xmlAttr<sp/>*pOutputChannels<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;OutputChannels&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"></highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pInputChannels<sp/>||<sp/>!pOutputChannels)<sp/>{</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>channels<sp/>in<sp/>MultiProcessElements\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"></highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/>m_nInputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pInputChannels));</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/>m_nOutputChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pOutputChannels));</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"></highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_list)<sp/>{</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/><sp/><sp/>m_list<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d7/d25/a00182_1a2738a49f21913b92ff78e858d3c4c6a2" kindref="member">CIccMultiProcessElementList</ref>();</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/><sp/>m_list-&gt;clear();</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"></highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*elemNode;</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(elemNode<sp/>=<sp/>pNode-&gt;children;<sp/>elemNode;<sp/>elemNode<sp/>=<sp/>elemNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elemNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ParseElement(elemNode,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[100];</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>element<sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)elemNode-&gt;name;</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(str,<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>starting<sp/>on<sp/>line<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>elemNode-&gt;line);</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>str;</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"></highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"></highlight></codeline>
<codeline lineno="4133"><highlight class="normal"></highlight></codeline>
<codeline lineno="4134" refid="d2/d23/a01961_1a41908f2a338b06b71d5291aaa8ac1532" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d23/a01961_1a41908f2a338b06b71d5291aaa8ac1532" kindref="member">CIccTagXmlProfileSequenceId::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/>std::string<sp/>info;</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"></highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;ProfileSequenceId&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"></highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/>CIccProfileIdDescList::iterator<sp/>pid;</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"></highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pid=m_list-&gt;begin();<sp/>pid!=m_list-&gt;end();<sp/>pid++)<sp/>{</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data[256];</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fix[256];</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>bufstr;</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"></highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n=0;<sp/>n&lt;16;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf<sp/>+<sp/>n*2,<sp/></highlight><highlight class="stringliteral">&quot;%02X&quot;</highlight><highlight class="normal">,<sp/>pid-&gt;m_profileID.ID8[n]);</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><sp/>buf[n*2]=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;ProfileIdDesc<sp/>id=\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"></highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pid-&gt;m_desc.m_Strings)<sp/>{</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CIccMultiLocalizedUnicode::iterator<sp/>i;</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"></highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=pid-&gt;m_desc.m_Strings-&gt;begin();<sp/>i!=pid-&gt;m_desc.m_Strings-&gt;end();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&lt;LocalizedText<sp/>LanguangeCountry=\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(data,<sp/>(i-&gt;m_nLanguageCode&lt;&lt;16)<sp/>+<sp/>i-&gt;m_nCountryCode)));</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"></highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&gt;%s&lt;/LocalizedText&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d9/d39/a00257_1a9f320f9caf10d93233cccf39049a5992" kindref="member">icUtf16ToUtf8</ref>(bufstr,<sp/>i-&gt;GetBuf(),<sp/>i-&gt;GetLength())));</highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;/ProfileIdDesc&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"></highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/ProfileSequenceId&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"></highlight></codeline>
<codeline lineno="4175"><highlight class="normal"></highlight></codeline>
<codeline lineno="4176" refid="d2/d23/a01961_1afbaaee340011d5bd09960d699d352e14" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d23/a01961_1afbaaee340011d5bd09960d699d352e14" kindref="member">CIccTagXmlProfileSequenceId::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="4177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;ProfileSequenceId&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"></highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pNode)</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"></highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/>m_list-&gt;clear();</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"></highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;ProfileIdDesc&quot;</highlight><highlight class="normal">);<sp/>pNode;<sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;next,<sp/></highlight><highlight class="stringliteral">&quot;ProfileIdDesc&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d19/a01217" kindref="compound">CIccProfileIdDesc</ref><sp/>desc;</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*szDesc<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"></highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(szDesc<sp/>&amp;&amp;<sp/>*szDesc)</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1a7e2e6f47df3c6baacbda01035dfbbbee" kindref="member">icXmlGetHexData</ref>(&amp;desc.<ref refid="da/d19/a01217_1ac49ee220674d06047cbc5f7f1aa5dd3e" kindref="member">m_profileID</ref>,<sp/>szDesc,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(desc.<ref refid="da/d19/a01217_1ac49ee220674d06047cbc5f7f1aa5dd3e" kindref="member">m_profileID</ref>));</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"></highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlAttr<sp/>*langCode;</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"></highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlNode*<sp/>pSubNode;</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pSubNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;LocalizedText&quot;</highlight><highlight class="normal">);<sp/>pSubNode;<sp/>pSubNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pSubNode-&gt;next,<sp/></highlight><highlight class="stringliteral">&quot;LocalizedText&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((langCode<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pSubNode,<sp/></highlight><highlight class="stringliteral">&quot;languageCountry&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSubNode-&gt;children)<sp/>{</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNode<sp/>*pText;</highlight></codeline>
<codeline lineno="4199"><highlight class="normal"></highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pText<sp/>=<sp/>pSubNode-&gt;children;<sp/>pText<sp/>&amp;&amp;<sp/>pText-&gt;type<sp/>!=<sp/>XML_TEXT_NODE;<sp/>pText<sp/>=<sp/>pText-&gt;next);</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"></highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pText)<sp/>{</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>lc<sp/>=<sp/><ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(langCode));</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089" kindref="compound">CIccUTF16String</ref><sp/>str((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pText-&gt;content);</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.<ref refid="da/d19/a01217_1a15679397bf7323cd7d5898315bb4658c" kindref="member">m_desc</ref>.<ref refid="d2/db8/a01057_1a189b03800714fe33e7882fe3186252fb" kindref="member">SetText</ref>(str.<ref refid="db/ddd/a02089_1ac7629e2161d7ada902d83eb93945ebcd" kindref="member">c_str</ref>(),<sp/>(<ref refid="d7/d46/a00002_1a6932e8c6b1b1c25deca7414cce0de15e" kindref="member">icLanguageCode</ref>)(lc&gt;&gt;16),<sp/>(<ref refid="d7/d46/a00002_1a4070271a82e5bdce1b44e378ae108fa2" kindref="member">icCountryCode</ref>)(lc<sp/>&amp;<sp/>0xffff));</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.<ref refid="da/d19/a01217_1a15679397bf7323cd7d5898315bb4658c" kindref="member">m_desc</ref>.<ref refid="d2/db8/a01057_1a189b03800714fe33e7882fe3186252fb" kindref="member">SetText</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/><sp/>m_list-&gt;push_back(desc);</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"></highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"></highlight></codeline>
<codeline lineno="4218"><highlight class="normal"></highlight></codeline>
<codeline lineno="4219" refid="d6/d9a/a01965_1a392a644105c454e2f0aa9b9b7b69a6d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d9a/a01965_1a392a644105c454e2f0aa9b9b7b69a6d6" kindref="member">CIccTagXmlDict::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/>std::string<sp/>info;</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"></highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/>CIccNameValueDict::iterator<sp/>nvp;</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"></highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(nvp=m_Dict-&gt;begin();<sp/>nvp!=m_Dict-&gt;end();<sp/>nvp++)<sp/>{</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d53/a01225" kindref="compound">CIccDictEntry</ref><sp/>*nv<sp/>=<sp/>nvp-&gt;ptr;</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nv)</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"></highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data[256];</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fix[256];</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>bufstr;</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"></highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;DictEntry<sp/>Name=\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d9/d39/a00257_1a9f320f9caf10d93233cccf39049a5992" kindref="member">icUtf16ToUtf8</ref>(bufstr,<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>*)nv-&gt;<ref refid="d8/d53/a01225_1a489e028e4a733968d7d2070e35babfc8" kindref="member">GetName</ref>().c_str(),<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)nv-&gt;<ref refid="d8/d53/a01225_1a489e028e4a733968d7d2070e35babfc8" kindref="member">GetName</ref>().size()));</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"></highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nv-&gt;<ref refid="d8/d53/a01225_1a7a54c1f218ec1d5536efe064fd3a3079" kindref="member">IsValueSet</ref>())<sp/>{</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Value=\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d9/d39/a00257_1a9f320f9caf10d93233cccf39049a5992" kindref="member">icUtf16ToUtf8</ref>(bufstr,<sp/>(<ref refid="d7/d46/a00002_1a13b7fe380f7b096933ceaaa7a1e1e3ef" kindref="member">icUInt16Number</ref>*)nv-&gt;<ref refid="d8/d53/a01225_1ac86fb76c6f4640e31aea5ecf07fb8fb6" kindref="member">GetValue</ref>().c_str(),<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)nv-&gt;<ref refid="d8/d53/a01225_1ac86fb76c6f4640e31aea5ecf07fb8fb6" kindref="member">GetValue</ref>().size()));</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"></highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nv-&gt;<ref refid="d8/d53/a01225_1a37412e941af64e01b167585f13e6a5ed" kindref="member">GetNameLocalized</ref>()<sp/>&amp;&amp;<sp/>!nv-&gt;<ref refid="d8/d53/a01225_1a26987367916a14b3ddff6d3d6bd8cd01" kindref="member">GetValueLocalized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"></highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nv-&gt;<ref refid="d8/d53/a01225_1a37412e941af64e01b167585f13e6a5ed" kindref="member">GetNameLocalized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CIccMultiLocalizedUnicode::iterator<sp/>i;</highlight></codeline>
<codeline lineno="4253"><highlight class="normal"></highlight></codeline>
<codeline lineno="4254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=nv-&gt;<ref refid="d8/d53/a01225_1a37412e941af64e01b167585f13e6a5ed" kindref="member">GetNameLocalized</ref>()-&gt;<ref refid="d2/db8/a01057_1ab7ac67e04b5ffd5e3c798708cacbe14e" kindref="member">m_Strings</ref>-&gt;begin();<sp/>i!=nv-&gt;<ref refid="d8/d53/a01225_1a37412e941af64e01b167585f13e6a5ed" kindref="member">GetNameLocalized</ref>()-&gt;<ref refid="d2/db8/a01057_1ab7ac67e04b5ffd5e3c798708cacbe14e" kindref="member">m_Strings</ref>-&gt;end();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;LocalizedName<sp/>LanguageCountry=\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(data,<sp/>(i-&gt;m_nLanguageCode&lt;&lt;16)<sp/>+<sp/>i-&gt;m_nCountryCode)));</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="4257"><highlight class="normal"></highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&gt;&lt;![CDATA[%s]]&gt;&lt;/LocalizedName&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d9/d39/a00257_1a9f320f9caf10d93233cccf39049a5992" kindref="member">icUtf16ToUtf8</ref>(bufstr,<sp/>i-&gt;GetBuf(),<sp/>i-&gt;GetLength())));</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nv-&gt;<ref refid="d8/d53/a01225_1a26987367916a14b3ddff6d3d6bd8cd01" kindref="member">GetValueLocalized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CIccMultiLocalizedUnicode::iterator<sp/>i;</highlight></codeline>
<codeline lineno="4264"><highlight class="normal"></highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=nv-&gt;<ref refid="d8/d53/a01225_1a26987367916a14b3ddff6d3d6bd8cd01" kindref="member">GetValueLocalized</ref>()-&gt;<ref refid="d2/db8/a01057_1ab7ac67e04b5ffd5e3c798708cacbe14e" kindref="member">m_Strings</ref>-&gt;begin();<sp/>i!=nv-&gt;<ref refid="d8/d53/a01225_1a26987367916a14b3ddff6d3d6bd8cd01" kindref="member">GetValueLocalized</ref>()-&gt;<ref refid="d2/db8/a01057_1ab7ac67e04b5ffd5e3c798708cacbe14e" kindref="member">m_Strings</ref>-&gt;end();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;LocalizedValue<sp/>LanguageCountry=\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(data,<sp/>(i-&gt;m_nLanguageCode&lt;&lt;16)<sp/>+<sp/>i-&gt;m_nCountryCode)));</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>buf;</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"></highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;&gt;&lt;![CDATA[%s]]&gt;&lt;/LocalizedValue&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d9/d39/a00257_1a9f320f9caf10d93233cccf39049a5992" kindref="member">icUtf16ToUtf8</ref>(bufstr,<sp/>i-&gt;GetBuf(),<sp/>i-&gt;GetLength())));</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;/DictEntry&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4278"><highlight class="normal"></highlight></codeline>
<codeline lineno="4279"><highlight class="normal"></highlight></codeline>
<codeline lineno="4280" refid="d6/d9a/a01965_1a88c29060c9f89f8b6033dcb3a535d4d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d9a/a01965_1a88c29060c9f89f8b6033dcb3a535d4d4" kindref="member">CIccTagXmlDict::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="4281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/>m_Dict-&gt;clear();</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"></highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;DictEntry&quot;</highlight><highlight class="normal">);<sp/>pNode;<sp/>pNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode-&gt;next,<sp/></highlight><highlight class="stringliteral">&quot;DictEntry&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d1c/a01229" kindref="compound">CIccDictEntryPtr</ref><sp/>ptr;</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d53/a01225" kindref="compound">CIccDictEntry</ref><sp/>*pDesc<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d8/d53/a01225" kindref="compound">CIccDictEntry</ref>();</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlAttr<sp/>*pAttr;</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089" kindref="compound">CIccUTF16String</ref><sp/>str;</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"></highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pDesc)</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr.<ref refid="db/d1c/a01229_1a9f6e5fe15905c447b0d02b1543d46999" kindref="member">ptr</ref><sp/>=<sp/>pDesc;</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"></highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/><sp/>str.<ref refid="db/ddd/a02089_1aeab87eaf251124a5f4d9af34bceec5a7" kindref="member">ToWString</ref>(pDesc-&gt;<ref refid="d8/d53/a01225_1a489e028e4a733968d7d2070e35babfc8" kindref="member">GetName</ref>());</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"></highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/><sp/><sp/>pAttr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pAttr)<sp/>{</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::wstring<sp/>wstr;</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pAttr,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str.<ref refid="db/ddd/a02089_1aeab87eaf251124a5f4d9af34bceec5a7" kindref="member">ToWString</ref>(wstr);</highlight></codeline>
<codeline lineno="4302"><highlight class="normal"></highlight></codeline>
<codeline lineno="4303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pDesc-&gt;<ref refid="d8/d53/a01225_1a590d22405afe4324191a9f2fd18bc68a" kindref="member">SetValue</ref>(wstr);</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"></highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlNode<sp/>*pChild;</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"></highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pChild<sp/>=<sp/>pNode-&gt;children;<sp/>pChild;<sp/>pChild<sp/>=<sp/>pChild-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;<sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pChild-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;LocalizedName&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/db8/a01057" kindref="compound">CIccTagMultiLocalizedUnicode</ref><sp/>*pTag<sp/>=<sp/>pDesc-&gt;<ref refid="d8/d53/a01225_1a37412e941af64e01b167585f13e6a5ed" kindref="member">GetNameLocalized</ref>();</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pTag)<sp/>{</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTag<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d2/db8/a01057" kindref="compound">CIccTagMultiLocalizedUnicode</ref>();</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDesc-&gt;<ref refid="d8/d53/a01225_1a1a7b44f4eef8b9aec08f0e8ffc5bad79" kindref="member">SetNameLocalized</ref>(pTag);</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"></highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pAttr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;LanguageCountry&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;<sp/>pChild-&gt;children)<sp/>{</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNode<sp/>*pText;</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>lc<sp/>=<sp/><ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pAttr));</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"></highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pText<sp/>=<sp/>pChild-&gt;children;<sp/>pText<sp/>&amp;&amp;<sp/>pText-&gt;type<sp/>!=<sp/>XML_TEXT_NODE<sp/>&amp;&amp;<sp/>pText-&gt;type<sp/>!=<sp/>XML_CDATA_SECTION_NODE;<sp/>pText<sp/>=<sp/>pText-&gt;next);</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"></highlight></codeline>
<codeline lineno="4322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pText)<sp/>{</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089" kindref="compound">CIccUTF16String</ref><sp/>str((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pText-&gt;content);</highlight></codeline>
<codeline lineno="4324"><highlight class="normal"></highlight></codeline>
<codeline lineno="4325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTag-&gt;<ref refid="d2/db8/a01057_1a189b03800714fe33e7882fe3186252fb" kindref="member">SetText</ref>(str.<ref refid="db/ddd/a02089_1ac7629e2161d7ada902d83eb93945ebcd" kindref="member">c_str</ref>(),<sp/>(<ref refid="d7/d46/a00002_1a6932e8c6b1b1c25deca7414cce0de15e" kindref="member">icLanguageCode</ref>)(lc&gt;&gt;16),<sp/>(<ref refid="d7/d46/a00002_1a4070271a82e5bdce1b44e378ae108fa2" kindref="member">icCountryCode</ref>)(lc<sp/>&amp;<sp/>0xffff));</highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTag-&gt;<ref refid="d2/db8/a01057_1a189b03800714fe33e7882fe3186252fb" kindref="member">SetText</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChild-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;<sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(pChild-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;LocalizedValue&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/db8/a01057" kindref="compound">CIccTagMultiLocalizedUnicode</ref><sp/>*pTag<sp/>=<sp/>pDesc-&gt;<ref refid="d8/d53/a01225_1a26987367916a14b3ddff6d3d6bd8cd01" kindref="member">GetValueLocalized</ref>();</highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pTag)<sp/>{</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTag<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d2/db8/a01057" kindref="compound">CIccTagMultiLocalizedUnicode</ref>();</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDesc-&gt;<ref refid="d8/d53/a01225_1a1a4b0d8731c5ad9bd5ca37ccad63c628" kindref="member">SetValueLocalized</ref>(pTag);</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"></highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pAttr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pChild,<sp/></highlight><highlight class="stringliteral">&quot;LanguageCountry&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;<sp/>pChild-&gt;children)<sp/>{</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNode<sp/>*pText;</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>lc<sp/>=<sp/><ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pAttr));</highlight></codeline>
<codeline lineno="4342"><highlight class="normal"></highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pText<sp/>=<sp/>pChild-&gt;children;<sp/>pText<sp/>&amp;&amp;<sp/>pText-&gt;type<sp/>!=<sp/>XML_TEXT_NODE<sp/>&amp;&amp;<sp/>pText-&gt;type<sp/>!=<sp/>XML_CDATA_SECTION_NODE;<sp/>pText<sp/>=<sp/>pText-&gt;next);</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"></highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pText)<sp/>{</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/ddd/a02089" kindref="compound">CIccUTF16String</ref><sp/>str((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pText-&gt;content);</highlight></codeline>
<codeline lineno="4347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTag-&gt;<ref refid="d2/db8/a01057_1a189b03800714fe33e7882fe3186252fb" kindref="member">SetText</ref>(str.<ref refid="db/ddd/a02089_1ac7629e2161d7ada902d83eb93945ebcd" kindref="member">c_str</ref>(),<sp/>(<ref refid="d7/d46/a00002_1a6932e8c6b1b1c25deca7414cce0de15e" kindref="member">icLanguageCode</ref>)(lc&gt;&gt;16),<sp/>(<ref refid="d7/d46/a00002_1a4070271a82e5bdce1b44e378ae108fa2" kindref="member">icCountryCode</ref>)(lc<sp/>&amp;<sp/>0xffff));</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTag-&gt;<ref refid="d2/db8/a01057_1a189b03800714fe33e7882fe3186252fb" kindref="member">SetText</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"></highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Dict-&gt;push_back(ptr);</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"></highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"></highlight></codeline>
<codeline lineno="4362"><highlight class="normal"></highlight></codeline>
<codeline lineno="4363" refid="db/d49/a01969_1a8a1f6fe1c2db87a647aa00e2f98844e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/d49/a01969_1a8a1f6fe1c2db87a647aa00e2f98844e4" kindref="member">CIccTagXmlStruct::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/>std::string<sp/>info;</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256],<sp/>fix[256],<sp/>line[256];</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><ref refid="da/dc3/a00453" kindref="compound">IIccStruct</ref><sp/>*pStruct<sp/>=<sp/>GetStructHandler();</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"></highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref><sp/>*structName<sp/>=<sp/>((pStruct<sp/>!=<sp/>NULL)<sp/>?<sp/>pStruct-&gt;<ref refid="da/dc3/a00453_1afd22a03ede414161eb9ed7435b5f9f67" kindref="member">GetDisplayName</ref>()<sp/>:<sp/>NULL);</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/>blanks<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"></highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(structName<sp/>&amp;&amp;<sp/>strcmp(structName,<sp/></highlight><highlight class="stringliteral">&quot;privateStruct&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;%s&gt;<sp/>&lt;MemberTags&gt;\n&quot;</highlight><highlight class="normal">,<sp/>structName);</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>out<sp/>the<sp/>struct<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;privateStruct<sp/>StructSignature=\&quot;%s\&quot;/&gt;<sp/>&lt;MemberTags&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>m_sigStructType)));</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>structName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;privateStruct&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"></highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/>TagEntryList::iterator<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/>std::set&lt;icTagSignature&gt;<sp/>sigSet;</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><ref refid="dc/d2f/a00425" kindref="compound">CIccInfo</ref><sp/>Fmt;</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/><ref refid="dd/dd7/a00248_1a95bb65a2b3dfffdf39ecf2db53c1d82b" kindref="member">IccOffsetTagSigMap</ref><sp/>offsetTags;</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"></highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=m_ElemEntries-&gt;begin();<sp/>i!=m_ElemEntries-&gt;end();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigSet.find(i-&gt;TagInfo.sig)==sigSet.end())<sp/>{</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/dfd/a00969" kindref="compound">CIccTag</ref><sp/>*pTag<sp/>=<sp/>FindElem(i-&gt;TagInfo.sig);</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"></highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTag)<sp/>{</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref><sp/>*pTagXml<sp/>=<sp/>(<ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref>*)(pTag-&gt;<ref refid="d7/dfd/a00969_1aa4cc7f1dd04e9b537738d1dfa96a9790" kindref="member">GetExtension</ref>());</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTagXml)<sp/>{</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IccOffsetTagSigMap::iterator<sp/>prevTag<sp/>=<sp/>offsetTags.find(i-&gt;TagInfo.offset);</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tagName<sp/>=<sp/>((pStruct!=NULL)<sp/>?<sp/>pStruct-&gt;<ref refid="da/dc3/a00453_1a6ced0baf319523fe902bb6276f057498" kindref="member">GetElemName</ref>((<ref refid="d7/d46/a00002_1a67fa1b773fad35303680761ee5ef9313" kindref="member">icSignature</ref>)i-&gt;TagInfo.sig)<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prevTag<sp/>==<sp/>offsetTags.end())<sp/>{</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*<sp/>tagSig<sp/>=<sp/><ref refid="d9/d39/a00257_1a9df441a57e3659e7ae404779feaea9a3" kindref="member">icGetTagSigTypeName</ref>(pTag-&gt;<ref refid="d7/dfd/a00969_1a0d6f4b6f857134bd87bfb0cd54025208" kindref="member">GetType</ref>());</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"></highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tagName.size()<sp/>&amp;&amp;<sp/>strncmp(tagName.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;PrivateSubTag&quot;</highlight><highlight class="normal">,<sp/>13))<sp/>{</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;%s&gt;&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/>tagName.c_str()));</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;PrivateSubTag<sp/>TagSignature=\&quot;%s\&quot;&gt;&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>i-&gt;TagInfo.sig)));</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tagName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PrivateSubTag&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"></highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PrivateType<sp/>-<sp/>a<sp/>type<sp/>that<sp/>does<sp/>not<sp/>belong<sp/>to<sp/>the<sp/>list<sp/>in<sp/>the<sp/>icc<sp/>specs<sp/>-<sp/>custom<sp/>for<sp/>vendor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(</highlight><highlight class="stringliteral">&quot;PrivateType&quot;</highlight><highlight class="normal">,<sp/>tagSig))</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;PrivateType<sp/>type=\&quot;%s\&quot;&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>pTag-&gt;<ref refid="d7/dfd/a00969_1a0d6f4b6f857134bd87bfb0cd54025208" kindref="member">GetType</ref>())));</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;%s&gt;\n&quot;</highlight><highlight class="normal">,<sp/>tagSig);<sp/></highlight><highlight class="comment">//parent<sp/>node<sp/>is<sp/>the<sp/>tag<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4413"><highlight class="normal"></highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>out<sp/>the<sp/>tag<sp/>signature<sp/>(there<sp/>is<sp/>at<sp/>least<sp/>one)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;TagSignature&gt;%s&lt;/TagSignature&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>i-&gt;TagInfo.sig)));</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="4420"><highlight class="normal"></highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigSet.insert(i-&gt;TagInfo.sig);</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"></highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>out<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>tag<sp/>signatures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j++;<sp/>j<sp/>!=<sp/>m_ElemEntries-&gt;end();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;pTag<sp/>==<sp/>i-&gt;pTag<sp/>||<sp/>j-&gt;TagInfo.offset<sp/>==<sp/>i-&gt;TagInfo.offset)<sp/>{</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;TagSignature&gt;%s&lt;/TagSignature&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>j-&gt;TagInfo.sig)));</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigSet.insert(j-&gt;TagInfo.sig);</highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(pTag-&gt;m_nReserved)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>sprintf(line,<sp/>&quot;<sp/>Reserved=\&quot;%08x\&quot;&quot;,<sp/>pTag-&gt;m_nReserved);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xml<sp/>+=<sp/>&quot;&gt;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//convert<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>tag<sp/>to<sp/>xml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pTagXml-&gt;<ref refid="de/d3c/a01809_1a759cbaed8a0553bb035b9ff749052309" kindref="member">ToXml</ref>(xml,<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>output<sp/>sub-tag<sp/>with<sp/>type<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>i-&gt;TagInfo.sig));</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/%s&gt;<sp/>&lt;/%s&gt;\n&quot;</highlight><highlight class="normal">,<sp/>tagSig,<sp/>tagName.c_str());</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offsetTags[i-&gt;TagInfo.offset]<sp/>=<sp/>i-&gt;TagInfo.sig;</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>prevTagName<sp/>=<sp/>((pStruct<sp/>!=<sp/>NULL)<sp/>?<sp/>pStruct-&gt;<ref refid="da/dc3/a00453_1a6ced0baf319523fe902bb6276f057498" kindref="member">GetElemName</ref>(prevTag-&gt;second)<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fix2[200];</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"></highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tagName.size()<sp/>&amp;&amp;<sp/>strncmp(tagName.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;PrivateSubTag&quot;</highlight><highlight class="normal">,<sp/>13))</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;%s<sp/>SameAs=\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/>tagName.c_str()),<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix2,<sp/>prevTagName.c_str()));<sp/></highlight><highlight class="comment">//parent<sp/>node<sp/>is<sp/>the<sp/>tag<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;PrivateSubTag<sp/>TagSignature=\&quot;%s\&quot;<sp/>SameAs=\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix2,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>i-&gt;TagInfo.sig)),<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/>prevTagName.c_str()));</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"></highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prevTagName.size()<sp/>||<sp/>!strncmp(prevTagName.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;PrivateSubTag&quot;</highlight><highlight class="normal">,<sp/>13))<sp/>{</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>SameAsSignature=\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix2,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>prevTag-&gt;second)));</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>line;</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"></highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Non<sp/>XML<sp/>tag<sp/>in<sp/>list<sp/>with<sp/>type<sp/>%s!\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>i-&gt;TagInfo.sig));</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>find<sp/>tag<sp/>with<sp/>type<sp/>%s!\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>i-&gt;TagInfo.sig));</highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"></highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/MemberTags&gt;<sp/>&lt;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>structName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"></highlight></codeline>
<codeline lineno="4496" refid="db/d49/a01969_1adc66f52cad265a25289afdf71b69dcc7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/d49/a01969_1adc66f52cad265a25289afdf71b69dcc7" kindref="member">CIccTagXmlStruct::ParseTag</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="4497"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/>xmlAttr<sp/>*attr;</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"></highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>!=<sp/>XML_ELEMENT_NODE)<sp/>{</highlight><highlight class="comment">//<sp/>||<sp/>icXmlStrCmp(pNode-&gt;name,<sp/>&quot;Tag&quot;))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Tag<sp/>Node:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)pNode-&gt;name;</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"></highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><ref refid="d7/dfd/a00969" kindref="compound">CIccTag</ref><sp/>*pTag<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"></highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/>std::string<sp/>nodeName<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;name;</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a67fa1b773fad35303680761ee5ef9313" kindref="member">icSignature</ref><sp/>sigTag;</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pStruct)</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/>sigTag<sp/>=<sp/>m_pStruct-&gt;GetElemSig(nodeName.c_str());</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/><sp/><sp/>sigTag<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"></highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigTag<sp/>!=<sp/>0<sp/>||<sp/>nodeName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;PrivateSubTag&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//Parsing<sp/>of<sp/>XML<sp/>tags<sp/>by<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nodeName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;PrivateSubTag&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tagSig<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;TagSignature&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tagSig[0])<sp/>{</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigTag<sp/>=<sp/>(<ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref>)<ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>(tagSig);</highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>TagSignature<sp/>for<sp/>PrivateSubTag\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4527"><highlight class="normal"></highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sameAs<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;SameAs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"></highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sameAs[0])<sp/>{</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref><sp/>sigParentTag<sp/>=<sp/><ref refid="d9/d39/a00257_1adc2f3af8fcb19d532371a3776c95dcdd" kindref="member">icGetTagNameSig</ref>(sameAs);</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(sameAs,<sp/></highlight><highlight class="stringliteral">&quot;PrivateSubTag&quot;</highlight><highlight class="normal">)<sp/>||<sp/>sigParentTag<sp/>==<sp/><ref refid="d7/d46/a00002_1a8d3f7cc2943b5a6814c516773b037d12" kindref="member">icSigUnknownTag</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sameAsSig<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;SameAsSignature&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sameAsSig[0])<sp/>{</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigParentTag<sp/>=<sp/>(<ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref>)<ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>(sameAsSig);</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>SameAsSignature<sp/>for<sp/>PrivateSubTag\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pTag<sp/>=<sp/>this-&gt;FindElem(sigParentTag);</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTag)<sp/>{</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AttachElem(sigTag,<sp/>pTag);</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;SameAs<sp/>tag<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>sameAs;</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>nodeName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>does<sp/>not<sp/>exist\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"></highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//Parse<sp/>the<sp/>type<sp/>node<sp/>as<sp/>the<sp/>first<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlNode<sp/>*pTypeNode;</highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pTypeNode<sp/>=<sp/>pNode-&gt;children;<sp/>pTypeNode;<sp/>pTypeNode<sp/>=<sp/>pTypeNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTypeNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4563"><highlight class="normal"></highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pTypeNode)<sp/>{</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>tag<sp/>type<sp/>node<sp/>defined<sp/>for<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>nodeName;</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"></highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>tag<sp/>type<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref><sp/>sigType<sp/>=<sp/><ref refid="d9/d39/a00257_1a7e4a8379f29fbaded2a4dd75b6222e55" kindref="member">icGetTypeNameTagSig</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pTypeNode-&gt;name);</highlight></codeline>
<codeline lineno="4573"><highlight class="normal"></highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigType<sp/>==<sp/><ref refid="d7/d46/a00002_1a0b3709c84d4d18ff166cf355dc6c576f" kindref="member">icSigUnknownType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pTypeNode,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigType<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref>)<ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"></highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d2f/a00425" kindref="compound">CIccInfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"></highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>tag<sp/>based<sp/>on<sp/>the<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pTag<sp/>=<sp/><ref refid="d7/dfd/a00969_1a2a2efdbfae5e8820c0dc4cdd1af691a8" kindref="member">CIccTag::Create</ref>(sigType);</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"></highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/dcd/a00965" kindref="compound">IIccExtensionTag</ref><sp/>*pExt;</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"></highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTag<sp/>&amp;&amp;<sp/>(pExt<sp/>=<sp/>pTag-&gt;<ref refid="d7/dfd/a00969_1aa4cc7f1dd04e9b537738d1dfa96a9790" kindref="member">GetExtension</ref>())<sp/>&amp;&amp;<sp/>!strcmp(pExt-&gt;<ref refid="d3/dcd/a00965_1afc77445123182ddaec413f6353c719be" kindref="member">GetExtClassName</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;CIccTagXml&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref>*<sp/>pXmlTag<sp/>=<sp/>(<ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref>*)pExt;</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"></highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pXmlTag-&gt;<ref refid="de/d3c/a01809_1ab389ac02038775bf0a198ae68847d8a1" kindref="member">ParseXml</ref>(pTypeNode-&gt;children,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pTypeNode,<sp/></highlight><highlight class="stringliteral">&quot;reserved&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr),<sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/>&amp;pTag-&gt;<ref refid="d7/dfd/a00969_1a0dbc39e419057e941c11cacb8c9e3fb0" kindref="member">m_nReserved</ref>);</highlight></codeline>
<codeline lineno="4592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AttachElem(sigTag,<sp/>pTag);</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>Parse<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pTypeNode-&gt;name;</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>nodeName;</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>Tag\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>tag<sp/>extension<sp/>for<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pTypeNode-&gt;name;</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>nodeName;</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>Tag\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//Legacy<sp/>parsing<sp/>of<sp/>XML<sp/>tags<sp/>by<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><sp/>sigTag<sp/>=<sp/>(<ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref>)0;</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>tag<sp/>type<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref><sp/>sigType<sp/>=<sp/><ref refid="d9/d39/a00257_1a7e4a8379f29fbaded2a4dd75b6222e55" kindref="member">icGetTypeNameTagSig</ref>(nodeName.c_str());</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"></highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigType<sp/>==<sp/><ref refid="d7/d46/a00002_1a0b3709c84d4d18ff166cf355dc6c576f" kindref="member">icSigUnknownType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sigType<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref>)<ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"></highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d2f/a00425" kindref="compound">CIccInfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"></highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>tag<sp/>based<sp/>on<sp/>the<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/><sp/><sp/>pTag<sp/>=<sp/><ref refid="d7/dfd/a00969_1a2a2efdbfae5e8820c0dc4cdd1af691a8" kindref="member">CIccTag::Create</ref>(sigType);</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"></highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/dcd/a00965" kindref="compound">IIccExtensionTag</ref><sp/>*pExt;</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"></highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTag<sp/>&amp;&amp;<sp/>(pExt<sp/>=<sp/>pTag-&gt;<ref refid="d7/dfd/a00969_1aa4cc7f1dd04e9b537738d1dfa96a9790" kindref="member">GetExtension</ref>())<sp/>&amp;&amp;<sp/>!strcmp(pExt-&gt;<ref refid="d3/dcd/a00965_1afc77445123182ddaec413f6353c719be" kindref="member">GetExtClassName</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;CIccTagXml&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref>*<sp/>pXmlTag<sp/>=<sp/>(<ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref>*)pExt;</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"></highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pXmlTag-&gt;<ref refid="de/d3c/a01809_1ab389ac02038775bf0a198ae68847d8a1" kindref="member">ParseXml</ref>(pNode-&gt;children,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;reserved&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr),<sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/>&amp;pTag-&gt;<ref refid="d7/dfd/a00969_1a0dbc39e419057e941c11cacb8c9e3fb0" kindref="member">m_nReserved</ref>);</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"></highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(xmlNode<sp/>*tagSigNode<sp/>=<sp/>pNode-&gt;children;<sp/>tagSigNode;<sp/>tagSigNode<sp/>=<sp/>tagSigNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tagSigNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;<sp/>!<ref refid="d9/d39/a00257_1a7026a4740f2f4005640502238a2fb221" kindref="member">icXmlStrCmp</ref>(tagSigNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;TagSignature&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigTag<sp/>=<sp/>(<ref refid="d7/d46/a00002_1ac82636cc27ba918bd737e94a62715af5" kindref="member">icTagSignature</ref>)<ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)tagSigNode-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AttachElem(sigTag,<sp/>pTag);</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>Parse<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>info.<ref refid="dc/d2f/a00425_1aa4d31231b22a56dc869b51eaa2b1f933" kindref="member">GetTagTypeSigName</ref>(sigType);</highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>nodeName;</highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>Tag\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>tag<sp/>extension<sp/>for<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>info.<ref refid="dc/d2f/a00425_1aa4d31231b22a56dc869b51eaa2b1f933" kindref="member">GetTagTypeSigName</ref>(sigType);</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>nodeName;</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>Tag\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4664"><highlight class="normal"></highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"></highlight></codeline>
<codeline lineno="4668"><highlight class="normal"></highlight></codeline>
<codeline lineno="4669" refid="db/d49/a01969_1a4bf99f4ff03849bb6c1a13c7967aeb6c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/d49/a01969_1a4bf99f4ff03849bb6c1a13c7967aeb6c" kindref="member">CIccTagXmlStruct::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="4670"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>each<sp/>tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*tagNode,<sp/>*firstNode=pNode;</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"></highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>pNode;<sp/>pNode<sp/>=<sp/>pNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pNode)<sp/>{</highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Tag<sp/>Structure:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstNode)</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)firstNode-&gt;name;</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"></highlight></codeline>
<codeline lineno="4688"><highlight class="normal"><sp/><sp/>std::string<sp/>nodeName<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;name;</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"></highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a7b35df4bcbd6c7395ac7ed62f4198614" kindref="member">icStructSignature</ref><sp/>sigStruct<sp/>=<sp/><ref refid="db/d66/a01721_1a6901dae2bde9e2a58801a95505d64670" kindref="member">CIccStructCreator::GetStructSig</ref>(nodeName.c_str());</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"></highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigStruct)<sp/>{</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/><sp/><sp/>SetTagStructType(sigStruct);</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/><sp/><sp/>pNode<sp/>=<sp/>pNode-&gt;children;</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/><sp/><sp/>tagNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(firstNode,<sp/></highlight><highlight class="stringliteral">&quot;StructureSignature&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tagNode)<sp/>{</highlight></codeline>
<codeline lineno="4699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>find<sp/>StructureSignature\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"></highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tagNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;<sp/>tagNode-&gt;children<sp/>&amp;&amp;<sp/>tagNode-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"></highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sigStruct<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a7b35df4bcbd6c7395ac7ed62f4198614" kindref="member">icStructSignature</ref>)<ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>(tagNode-&gt;children<sp/>?<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)tagNode-&gt;children-&gt;content<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetTagStructType(sigStruct);</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>XNode<sp/>type<sp/>for<sp/>StructureSignature\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4713"><highlight class="normal"></highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/>tagNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;MemberTags&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tagNode)<sp/>{</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>find<sp/>structure<sp/>MemberTags\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"></highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(tagNode<sp/>=<sp/>tagNode-&gt;children;<sp/>tagNode;<sp/>tagNode<sp/>=<sp/>tagNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tagNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ParseTag(tagNode,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>parse<sp/>tag<sp/>member<sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)tagNode-&gt;name;</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"></highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4733"><highlight class="normal"></highlight></codeline>
<codeline lineno="4734" refid="d3/d59/a01973_1a90f7a44016b69c099ea5cb6b71772b0b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d3/d59/a01973_1a90f7a44016b69c099ea5cb6b71772b0b" kindref="member">CIccTagXmlArray::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4735"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/>std::string<sp/>info;</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256],<sp/>fix[256],<sp/>line[256];</highlight></codeline>
<codeline lineno="4738"><highlight class="normal"></highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/>std::string<sp/>arrayName;</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/>std::string<sp/>arrayBlanks<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/><ref refid="dd/d47/a00445_1ad16c44f0c8404d0d6abceb523108cb94" kindref="member">CIccArrayCreator::GetArraySigName</ref>(arrayName,<sp/>m_sigArrayType,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"></highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found)<sp/>{</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;%s&gt;<sp/>&quot;</highlight><highlight class="normal">,<sp/>arrayName.c_str());</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/><sp/><sp/>arrayBlanks<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>out<sp/>the<sp/>struct<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4749"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;privateArray<sp/>StructSignature=\&quot;%s\&quot;/&gt;<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>m_sigArrayType)));</highlight></codeline>
<codeline lineno="4750"><highlight class="normal"><sp/><sp/><sp/><sp/>arrayName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;privateArray&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4753"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;ArrayTags&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="4755"><highlight class="normal"></highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;(int)m_nSize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/dfd/a00969" kindref="compound">CIccTag</ref>*<sp/>pTag<sp/>=<sp/>m_TagVals[i].ptr;</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTag)<sp/>{</highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref><sp/>*pTagXml<sp/>=<sp/>(<ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref>*)(pTag-&gt;<ref refid="d7/dfd/a00969_1aa4cc7f1dd04e9b537738d1dfa96a9790" kindref="member">GetExtension</ref>());</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTagXml)<sp/>{</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*<sp/>tagSig<sp/>=<sp/><ref refid="d9/d39/a00257_1a9df441a57e3659e7ae404779feaea9a3" kindref="member">icGetTagSigTypeName</ref>(pTag-&gt;<ref refid="d7/dfd/a00969_1a0d6f4b6f857134bd87bfb0cd54025208" kindref="member">GetType</ref>());</highlight></codeline>
<codeline lineno="4762"><highlight class="normal"></highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PrivateType<sp/>-<sp/>a<sp/>type<sp/>that<sp/>does<sp/>not<sp/>belong<sp/>to<sp/>the<sp/>list<sp/>in<sp/>the<sp/>icc<sp/>specs<sp/>-<sp/>custom<sp/>for<sp/>vendor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!strcmp(</highlight><highlight class="stringliteral">&quot;PrivateType&quot;</highlight><highlight class="normal">,<sp/>tagSig)<sp/>)</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;PrivateType<sp/>type=\&quot;%s\&quot;&gt;\n&quot;</highlight><highlight class="normal">,<sp/><sp/><ref refid="d9/d39/a00257_1ae0c91ded77f7e0a950355b4e6e96efc5" kindref="member">icFixXml</ref>(fix,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>pTag-&gt;<ref refid="d7/dfd/a00969_1a0d6f4b6f857134bd87bfb0cd54025208" kindref="member">GetType</ref>())));<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;%s&gt;\n&quot;</highlight><highlight class="normal">,<sp/>tagSig);<sp/></highlight><highlight class="comment">//parent<sp/>node<sp/>is<sp/>the<sp/>tag<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4768"><highlight class="normal"></highlight></codeline>
<codeline lineno="4769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>arrayBlanks<sp/>+<sp/>line;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4770"><highlight class="normal"></highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//convert<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>tag<sp/>to<sp/>xml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pTagXml-&gt;<ref refid="de/d3c/a01809_1a759cbaed8a0553bb035b9ff749052309" kindref="member">ToXml</ref>(xml,<sp/>blanks<sp/>+<sp/>arrayBlanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>output<sp/>tag<sp/>with<sp/>type<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>pTag-&gt;<ref refid="d7/dfd/a00969_1a0d6f4b6f857134bd87bfb0cd54025208" kindref="member">GetType</ref>()));</highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;/%s&gt;\n\n&quot;</highlight><highlight class="normal">,<sp/><sp/>tagSig);</highlight></codeline>
<codeline lineno="4777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>arrayBlanks<sp/>+<sp/>line;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Non<sp/>XML<sp/>tag<sp/>in<sp/>list<sp/>with<sp/>type<sp/>%s!\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/dce/a00143_1a1e7460cdfb87cf8171ae3c000cdc73b3" kindref="member">icGetSigStr</ref>(buf,<sp/>pTag-&gt;<ref refid="d7/dfd/a00969_1a0d6f4b6f857134bd87bfb0cd54025208" kindref="member">GetType</ref>()));</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/ArrayTags&gt;<sp/>&lt;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>arrayName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4786"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"></highlight></codeline>
<codeline lineno="4790"><highlight class="normal"></highlight></codeline>
<codeline lineno="4791" refid="d3/d59/a01973_1abccc6c4d4ab6b62ac620371e1e5ab361" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d3/d59/a01973_1abccc6c4d4ab6b62ac620371e1e5ab361" kindref="member">CIccTagXmlArray::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="4792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>each<sp/>tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*tagNode,<sp/>*indexNode,<sp/>*firstNode<sp/>=<sp/>pNode;;</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/>xmlAttr<sp/>*attr;</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"></highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>pNode;<sp/>pNode<sp/>=<sp/>pNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pNode)<sp/>{</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Tag<sp/>Array:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstNode)</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)firstNode-&gt;name;</highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4810"><highlight class="normal"></highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/>std::string<sp/>nodeName<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pNode-&gt;name;</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/><ref refid="d7/d46/a00002_1a97bb6c6d4e1859ba7290162215ac8beb" kindref="member">icArraySignature</ref><sp/>sigArray<sp/>=<sp/><ref refid="dd/d47/a00445_1ad40e809373775f4bd441268223ad4cb3" kindref="member">CIccArrayCreator::GetArraySig</ref>(nodeName.c_str());</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"></highlight></codeline>
<codeline lineno="4814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigArray)<sp/>{</highlight></codeline>
<codeline lineno="4815"><highlight class="normal"><sp/><sp/><sp/><sp/>SetTagArrayType(sigArray);</highlight></codeline>
<codeline lineno="4816"><highlight class="normal"><sp/><sp/><sp/><sp/>pNode<sp/>=<sp/>pNode-&gt;children;</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/><sp/><sp/>tagNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(firstNode,<sp/></highlight><highlight class="stringliteral">&quot;ArraySignature&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tagNode)<sp/>{</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>find<sp/>ArraySignature\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"></highlight></codeline>
<codeline lineno="4825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tagNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;<sp/>tagNode-&gt;children<sp/>&amp;&amp;<sp/>tagNode-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="4826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sigArray<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a97bb6c6d4e1859ba7290162215ac8beb" kindref="member">icArraySignature</ref>)<ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>(tagNode-&gt;children<sp/>?<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)tagNode-&gt;children-&gt;content<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetTagArrayType(sigArray);</highlight></codeline>
<codeline lineno="4828"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>XNode<sp/>type<sp/>for<sp/>ArraySignature\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"></highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/>indexNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;ArrayTags&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!indexNode)</highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"></highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMaxIndex<sp/>=<sp/>0,<sp/>n=0;</highlight></codeline>
<codeline lineno="4840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(tagNode<sp/>=<sp/>indexNode-&gt;children;<sp/>tagNode;<sp/>tagNode<sp/>=<sp/>tagNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tagNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nMaxIndex++;</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetSize(nMaxIndex))</highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"></highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/>n=0;<sp/></highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(tagNode<sp/>=<sp/>indexNode-&gt;children;<sp/>tagNode;<sp/>tagNode<sp/>=<sp/>tagNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="4850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tagNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="4851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/dfd/a00969" kindref="compound">CIccTag</ref><sp/>*pTag<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a67fa1b773fad35303680761ee5ef9313" kindref="member">icSignature</ref><sp/>sigTag<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a67fa1b773fad35303680761ee5ef9313" kindref="member">icSignature</ref>)0;</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"></highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>tag<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref><sp/>sigType<sp/>=<sp/><ref refid="d9/d39/a00257_1a7e4a8379f29fbaded2a4dd75b6222e55" kindref="member">icGetTypeNameTagSig</ref><sp/>((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)<sp/>tagNode-&gt;name);</highlight></codeline>
<codeline lineno="4856"><highlight class="normal"></highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigType==<ref refid="d7/d46/a00002_1a0b3709c84d4d18ff166cf355dc6c576f" kindref="member">icSigUnknownType</ref>){</highlight></codeline>
<codeline lineno="4858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttr<sp/>*attr<sp/>=<sp/><ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigType<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a7ac6c9395974f6a0dc5025b7c7417dde" kindref="member">icTagTypeSignature</ref>)<ref refid="d7/dce/a00143_1a3a009765ea132eda6aadf6bedbf10e2d" kindref="member">icGetSigVal</ref>((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr));</highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"></highlight></codeline>
<codeline lineno="4862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d2f/a00425" kindref="compound">CIccInfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="4863"><highlight class="normal"></highlight></codeline>
<codeline lineno="4864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>tag<sp/>based<sp/>on<sp/>the<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pTag<sp/>=<sp/><ref refid="d7/dfd/a00969_1a2a2efdbfae5e8820c0dc4cdd1af691a8" kindref="member">CIccTag::Create</ref>(sigType);</highlight></codeline>
<codeline lineno="4866"><highlight class="normal"></highlight></codeline>
<codeline lineno="4867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/dcd/a00965" kindref="compound">IIccExtensionTag</ref><sp/>*pExt;</highlight></codeline>
<codeline lineno="4868"><highlight class="normal"></highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTag<sp/>&amp;&amp;<sp/>(pExt<sp/>=<sp/>pTag-&gt;<ref refid="d7/dfd/a00969_1aa4cc7f1dd04e9b537738d1dfa96a9790" kindref="member">GetExtension</ref>())<sp/>&amp;&amp;<sp/>!strcmp(pExt-&gt;<ref refid="d3/dcd/a00965_1afc77445123182ddaec413f6353c719be" kindref="member">GetExtClassName</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;CIccTagXml&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref>*<sp/>pXmlTag<sp/>=<sp/>(<ref refid="de/d3c/a01809" kindref="compound">CIccTagXml</ref>*)pExt;</highlight></codeline>
<codeline lineno="4871"><highlight class="normal"></highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pXmlTag-&gt;<ref refid="de/d3c/a01809_1ab389ac02038775bf0a198ae68847d8a1" kindref="member">ParseXml</ref>(tagNode-&gt;children,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr=<ref refid="d9/d39/a00257_1a57c0984fcae05f9fa17b70d1db38900c" kindref="member">icXmlFindAttr</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;reserved&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(attr),<sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/>&amp;pTag-&gt;<ref refid="d7/dfd/a00969_1a0dbc39e419057e941c11cacb8c9e3fb0" kindref="member">m_nReserved</ref>);</highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4876"><highlight class="normal"></highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_TagVals[n].ptr)</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TagVals[n].ptr<sp/>=<sp/>pTag;</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Tag<sp/>Array<sp/>Index<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>already<sp/>filled!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>Parse<sp/>xml<sp/>node<sp/>named<sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>(<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)tagNode-&gt;name;</highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"></highlight></codeline>
<codeline lineno="4897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n=0;<sp/>n&lt;(int)m_nSize;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_TagVals[n].ptr)<sp/>{</highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Undefined<sp/>Array<sp/>Tag<sp/>at<sp/>index<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4904"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4905"><highlight class="normal"></highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"></highlight></codeline>
<codeline lineno="4909" refid="d5/d92/a01977_1ab7ee445eeb9ba005b659b9d6a2c6a7d9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d92/a01977_1ab7ee445eeb9ba005b659b9d6a2c6a7d9" kindref="member">CIccTagXmlGamutBoundaryDesc::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4910"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4911"><highlight class="normal"><sp/><sp/>std::string<sp/>info;</highlight></codeline>
<codeline lineno="4912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="4913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="4914"><highlight class="normal"></highlight></codeline>
<codeline lineno="4915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_NumberOfVertices<sp/>&amp;&amp;<sp/>(m_PCSValues<sp/>||<sp/>m_DeviceValues))<sp/>{</highlight></codeline>
<codeline lineno="4916"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;Vertices&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4917"><highlight class="normal"></highlight></codeline>
<codeline lineno="4918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_PCSValues)<sp/>{</highlight></codeline>
<codeline lineno="4919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;PCSValues<sp/>channels=\&quot;%d\&quot;&gt;\n&quot;</highlight><highlight class="normal">,<sp/>m_nPCSChannels);</highlight></codeline>
<codeline lineno="4920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873_1a96583e68ac3216ec93072a15f30e8029" kindref="member">CIccFloatArray::DumpArray</ref>(xml,<sp/>blanks+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>m_PCSValues,<sp/>m_NumberOfVertices*m_nPCSChannels,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>,<sp/>9);</highlight></codeline>
<codeline lineno="4922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;/PCSValues&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_DeviceValues)<sp/>{</highlight></codeline>
<codeline lineno="4925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;DeviceValues<sp/>channels=\&quot;%d\&quot;&gt;\n&quot;</highlight><highlight class="normal">,<sp/>m_nDeviceChannels);</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="4927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873_1a96583e68ac3216ec93072a15f30e8029" kindref="member">CIccFloatArray::DumpArray</ref>(xml,<sp/>blanks+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>m_DeviceValues,<sp/>m_NumberOfVertices*m_nDeviceChannels,<sp/><ref refid="d7/d03/a00254_1a878aa1e8a53f75d023e069ed4950e2b8a7b72d0077e286e2fd4a2113c00cd8663" kindref="member">icConvertFloat</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="4928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;/DeviceValues&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4929"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4930"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/Vertices&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4932"><highlight class="normal"></highlight></codeline>
<codeline lineno="4933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Triangles<sp/>&amp;&amp;<sp/>m_NumberOfTriangles)<sp/>{</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;Triangles&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"></highlight></codeline>
<codeline lineno="4936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;m_NumberOfTriangles;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;T&gt;%u<sp/>%u<sp/>%u&lt;/T&gt;\n&quot;</highlight><highlight class="normal">,<sp/>m_Triangles[i].m_VertexNumbers[0],<sp/>m_Triangles[i].m_VertexNumbers[1],<sp/>m_Triangles[i].m_VertexNumbers[2]);</highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/>line;<sp/></highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4940"><highlight class="normal"></highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/Triangles&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4943"><highlight class="normal"></highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4946"><highlight class="normal"></highlight></codeline>
<codeline lineno="4947"><highlight class="normal"></highlight></codeline>
<codeline lineno="4948" refid="d5/d92/a01977_1a6e3095ab0d0da8f239228841c9f60233" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d92/a01977_1a6e3095ab0d0da8f239228841c9f60233" kindref="member">CIccTagXmlGamutBoundaryDesc::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="4949"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>each<sp/>tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*childNode,<sp/>*subNode;</highlight></codeline>
<codeline lineno="4952"><highlight class="normal"></highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/>childNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Vertices&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!childNode)<sp/>{</highlight></codeline>
<codeline lineno="4955"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>Vertices\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"></highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/>subNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(childNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;PCSValues&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4960"><highlight class="normal"></highlight></codeline>
<codeline lineno="4961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subNode)<sp/>{</highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nPCSChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(subNode,<sp/></highlight><highlight class="stringliteral">&quot;channels&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4963"><highlight class="normal"></highlight></codeline>
<codeline lineno="4964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_nPCSChannels)<sp/>{</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>PCSValues<sp/>channels\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4968"><highlight class="normal"></highlight></codeline>
<codeline lineno="4969"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccFloatArray</ref><sp/>vals;</highlight></codeline>
<codeline lineno="4970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vals.<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">ParseArray</ref>(subNode-&gt;children))<sp/>{</highlight></codeline>
<codeline lineno="4971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>GamutBoundaryDesc<sp/>PCSValues\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4973"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4974"><highlight class="normal"></highlight></codeline>
<codeline lineno="4975"><highlight class="normal"><sp/><sp/><sp/><sp/>m_NumberOfVertices<sp/>=<sp/>vals.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()<sp/>/<sp/>m_nPCSChannels;</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"></highlight></codeline>
<codeline lineno="4977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_NumberOfVertices&lt;4)<sp/>{</highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Must<sp/>have<sp/>at<sp/>least<sp/>4<sp/>PCSValues<sp/>vertices\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4980"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4981"><highlight class="normal"></highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/><sp/><sp/>m_PCSValues<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>[m_NumberOfVertices<sp/>*<sp/>m_nPCSChannels];</highlight></codeline>
<codeline lineno="4983"><highlight class="normal"></highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_PCSValues)</highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4986"><highlight class="normal"></highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(m_PCSValues,<sp/>vals.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>(),<sp/>m_NumberOfVertices<sp/>*<sp/>m_nPCSChannels*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>));</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>PCSValues\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4992"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"></highlight></codeline>
<codeline lineno="4994"><highlight class="normal"><sp/><sp/>subNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(childNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;DeviceValues&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"></highlight></codeline>
<codeline lineno="4996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subNode)<sp/>{</highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nDeviceChannels<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(subNode,<sp/></highlight><highlight class="stringliteral">&quot;channels&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"></highlight></codeline>
<codeline lineno="4999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_nDeviceChannels)<sp/>{</highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>DeviceValues<sp/>channels\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5003"><highlight class="normal"></highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccFloatArray</ref><sp/>vals;</highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vals.<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">ParseArray</ref>(subNode-&gt;children))<sp/>{</highlight></codeline>
<codeline lineno="5006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>GamutBoundaryDesc<sp/>DeviceValues\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"></highlight></codeline>
<codeline lineno="5010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVertices<sp/>=<sp/>vals.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()<sp/>/<sp/>m_nDeviceChannels;</highlight></codeline>
<codeline lineno="5011"><highlight class="normal"></highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_NumberOfVertices<sp/>!=<sp/>nVertices)<sp/>{</highlight></codeline>
<codeline lineno="5013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>Device<sp/>vertices<sp/>doesn&apos;t<sp/>match<sp/>PCS<sp/>verticies\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5015"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5016"><highlight class="normal"></highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/><sp/><sp/>m_DeviceValues<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>[m_NumberOfVertices<sp/>*<sp/>m_nDeviceChannels];</highlight></codeline>
<codeline lineno="5018"><highlight class="normal"></highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_DeviceValues)</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5021"><highlight class="normal"></highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(m_DeviceValues,<sp/>vals.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>(),<sp/>m_NumberOfVertices<sp/>*<sp/>m_nDeviceChannels<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>));</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_PCSValues)</highlight></codeline>
<codeline lineno="5025"><highlight class="normal"><sp/><sp/><sp/><sp/>m_NumberOfVertices<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5026"><highlight class="normal"></highlight></codeline>
<codeline lineno="5027"><highlight class="normal"><sp/><sp/>childNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;Triangles&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!childNode)<sp/>{</highlight></codeline>
<codeline lineno="5029"><highlight class="normal"><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>Triangles\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5031"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5032"><highlight class="normal"></highlight></codeline>
<codeline lineno="5033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMaxIndex<sp/>=<sp/>0,<sp/>n=0;</highlight></codeline>
<codeline lineno="5034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(subNode<sp/>=<sp/>childNode-&gt;children;<sp/>subNode;<sp/>subNode<sp/>=<sp/>subNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="5035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;<sp/>!strcmp((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)subNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;T&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nMaxIndex++;</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"><sp/><sp/>m_NumberOfTriangles<sp/>=<sp/>nMaxIndex;</highlight></codeline>
<codeline lineno="5040"><highlight class="normal"><sp/><sp/>m_Triangles<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d7/d0c/a01173" kindref="compound">icGamutBoundaryTriangle</ref>[m_NumberOfTriangles];</highlight></codeline>
<codeline lineno="5041"><highlight class="normal"></highlight></codeline>
<codeline lineno="5042"><highlight class="normal"><sp/><sp/>n=0;<sp/></highlight></codeline>
<codeline lineno="5043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(subNode<sp/>=<sp/>childNode-&gt;children;<sp/>subNode<sp/>&amp;&amp;<sp/>n&lt;nMaxIndex;<sp/>subNode<sp/>=<sp/>subNode-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subNode-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE<sp/>&amp;&amp;<sp/>!strcmp((<ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)subNode-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;T&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/dd3/a01873" kindref="compound">CIccUInt32Array</ref><sp/>ids;</highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ids.<ref refid="de/dd3/a01873_1a19dd38ba836c24ec006bcde0b5f9d368" kindref="member">ParseArray</ref>(subNode-&gt;children)<sp/>||<sp/>ids.<ref refid="de/dd3/a01873_1aef8f9bc723c01e852ddda14bd09a59ba" kindref="member">GetSize</ref>()!=3)<sp/>{</highlight></codeline>
<codeline lineno="5048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Triangle<sp/>entry\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>*v<sp/>=<sp/>ids.<ref refid="de/dd3/a01873_1a8cac7e2a3712ec473c3b2cd8310fb405" kindref="member">GetBuf</ref>();</highlight></codeline>
<codeline lineno="5052"><highlight class="normal"></highlight></codeline>
<codeline lineno="5053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Triangles[n].m_VertexNumbers[0]<sp/>=<sp/>v[0];</highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Triangles[n].m_VertexNumbers[1]<sp/>=<sp/>v[1];</highlight></codeline>
<codeline lineno="5055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Triangles[n].m_VertexNumbers[2]<sp/>=<sp/>v[2];</highlight></codeline>
<codeline lineno="5056"><highlight class="normal"></highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5059"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5060"><highlight class="normal"></highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5063"><highlight class="normal"></highlight></codeline>
<codeline lineno="5064" refid="dc/d67/a01989_1ae48ad89db3a44ccf101482acece44bdc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/d67/a01989_1ae48ad89db3a44ccf101482acece44bdc" kindref="member">CIccTagXmlEmbeddedProfile::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="5065"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5066"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>each<sp/>tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5067"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*tagNode;</highlight></codeline>
<codeline lineno="5068"><highlight class="normal"></highlight></codeline>
<codeline lineno="5069"><highlight class="normal"><sp/><sp/>tagNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;IccProfile&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tagNode)</highlight></codeline>
<codeline lineno="5071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5072"><highlight class="normal"></highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pProfile)<sp/>{</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_pProfile;</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"></highlight></codeline>
<codeline lineno="5077"><highlight class="normal"><sp/><sp/><ref refid="d6/d27/a01781" kindref="compound">CIccProfileXml</ref><sp/>*pProfile<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d6/d27/a01781" kindref="compound">CIccProfileXml</ref>();</highlight></codeline>
<codeline lineno="5078"><highlight class="normal"><sp/><sp/>m_pProfile<sp/>=<sp/>pProfile;</highlight></codeline>
<codeline lineno="5079"><highlight class="normal"></highlight></codeline>
<codeline lineno="5080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pProfile-&gt;<ref refid="d6/d27/a01781_1af4605fcf803152d71090e6c668d8997a" kindref="member">ParseXml</ref>(tagNode,<sp/>parseStr))<sp/>{</highlight></codeline>
<codeline lineno="5081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_pProfile;</highlight></codeline>
<codeline lineno="5082"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pProfile<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"></highlight></codeline>
<codeline lineno="5088" refid="dc/d67/a01989_1a12c3faa07b8bbed8d05127f2590c4ecf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/d67/a01989_1a12c3faa07b8bbed8d05127f2590c4ecf" kindref="member">CIccTagXmlEmbeddedProfile::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*<sp/>=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5089"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pProfile<sp/>||<sp/>strcmp(m_pProfile-&gt;GetClassName(),<sp/></highlight><highlight class="stringliteral">&quot;CIccProfileXml&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="5091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5092"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5093"><highlight class="normal"></highlight></codeline>
<codeline lineno="5094"><highlight class="normal"><sp/><sp/><ref refid="d6/d27/a01781" kindref="compound">CIccProfileXml</ref><sp/>*pProfile<sp/>=<sp/>(<ref refid="d6/d27/a01781" kindref="compound">CIccProfileXml</ref>*)m_pProfile;</highlight></codeline>
<codeline lineno="5095"><highlight class="normal"></highlight></codeline>
<codeline lineno="5096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pProfile-&gt;<ref refid="d6/d27/a01781_1a3fde5384cf19ae259cb72c3863f936b4" kindref="member">ToXmlWithBlanks</ref>(xml,<sp/>blanks);</highlight></codeline>
<codeline lineno="5097"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5098"><highlight class="normal"></highlight></codeline>
<codeline lineno="5099" refid="df/db2/a01981_1a1f911f834c825441d4694595710bcf55" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/db2/a01981_1a1f911f834c825441d4694595710bcf55" kindref="member">CIccTagXmlEmbeddedHeightImage::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="5100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5102"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*tagNode;</highlight></codeline>
<codeline lineno="5103"><highlight class="normal"></highlight></codeline>
<codeline lineno="5104"><highlight class="normal"><sp/><sp/>tagNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;HeightImage&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tagNode)</highlight></codeline>
<codeline lineno="5106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5107"><highlight class="normal"></highlight></codeline>
<codeline lineno="5108"><highlight class="normal"><sp/><sp/>m_nSeamlesIndicator<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(tagNode,<sp/></highlight><highlight class="stringliteral">&quot;SeamlessIndicator&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="5109"><highlight class="normal"><sp/><sp/>m_nEncodingFormat<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a715a38b528f62dfc3bcbdb5b313e5ae3" kindref="member">icImageEncodingType</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(tagNode,<sp/></highlight><highlight class="stringliteral">&quot;EncodingFormat&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="5110"><highlight class="normal"><sp/><sp/>m_fMetersMinPixelValue<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(tagNode,<sp/></highlight><highlight class="stringliteral">&quot;MetersMinPixelValue&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="5111"><highlight class="normal"><sp/><sp/>m_fMetersMaxPixelValue<sp/>=<sp/>(<ref refid="d4/d81/a00110_1a2879c29939ce675796753098691799b2" kindref="member">icFloatNumber</ref>)atof(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(tagNode,<sp/></highlight><highlight class="stringliteral">&quot;MetersMaxPixelValue&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="5112"><highlight class="normal"></highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pImageNode;</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/>pImageNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(tagNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;Image&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"></highlight></codeline>
<codeline lineno="5116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pImageNode)<sp/>{</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pImageNode,<sp/></highlight><highlight class="stringliteral">&quot;File&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!filename<sp/>||<sp/>!filename[0])<sp/>{</highlight></codeline>
<codeline lineno="5119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filename<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pImageNode,<sp/></highlight><highlight class="stringliteral">&quot;Filename&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5121"><highlight class="normal"></highlight></codeline>
<codeline lineno="5122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filename[0])<sp/>{</highlight></codeline>
<codeline lineno="5124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d2c/a00893" kindref="compound">CIccIO</ref><sp/>*file<sp/>=<sp/><ref refid="d9/dd6/a00272_1a1787be4d01fe1c357f48a2e8531622a6" kindref="member">IccOpenFileIO</ref>(filename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file)<sp/>{</highlight></codeline>
<codeline lineno="5126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>File<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="5128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>not<sp/>found.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="5130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5132"><highlight class="normal"></highlight></codeline>
<codeline lineno="5133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>();</highlight></codeline>
<codeline lineno="5134"><highlight class="normal"></highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(num);</highlight></codeline>
<codeline lineno="5136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*dst<sp/>=<sp/>GetData(0);</highlight></codeline>
<codeline lineno="5137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="dc/d2c/a00893_1a3a42fb785255dda8609fc46c83fe4f2c" kindref="member">Read8</ref>(dst,<sp/>num)!=num)<sp/>{</highlight></codeline>
<codeline lineno="5138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Read-File<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="5141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>binary<sp/>file.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="5143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="5146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pImageNode-&gt;children<sp/>&amp;&amp;<sp/>pImageNode-&gt;children-&gt;content){</highlight></codeline>
<codeline lineno="5150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nSize<sp/>=<sp/><ref refid="d9/d39/a00257_1a4798bcdc271228ef7083a57412803e06" kindref="member">icXmlGetHexDataSize</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pImageNode-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="5151"><highlight class="normal"></highlight></codeline>
<codeline lineno="5152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(nSize);</highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pData)<sp/>{</highlight></codeline>
<codeline lineno="5154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d9/d39/a00257_1a7e2e6f47df3c6baacbda01035dfbbbee" kindref="member">icXmlGetHexData</ref>(m_pData,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pImageNode-&gt;children-&gt;content,<sp/>m_nSize)<sp/>!=<sp/>m_nSize)</highlight></codeline>
<codeline lineno="5155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5157"><highlight class="normal"></highlight></codeline>
<codeline lineno="5158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5163"><highlight class="normal"></highlight></codeline>
<codeline lineno="5164" refid="df/db2/a01981_1af99181d25030a6c9267f8d695ed05b30" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/db2/a01981_1af99181d25030a6c9267f8d695ed05b30" kindref="member">CIccTagXmlEmbeddedHeightImage::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[200];</highlight></codeline>
<codeline lineno="5167"><highlight class="normal"></highlight></codeline>
<codeline lineno="5168"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;HeightImage&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5169"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>SeamlessIndicator=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nSeamlesIndicator);</highlight></codeline>
<codeline lineno="5170"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="5171"><highlight class="normal"></highlight></codeline>
<codeline lineno="5172"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>EncodingFormat=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nEncodingFormat);</highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="5174"><highlight class="normal"></highlight></codeline>
<codeline lineno="5175"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MetersMinPixelValue=\&quot;%.12f\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_fMetersMinPixelValue);</highlight></codeline>
<codeline lineno="5176"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="5177"><highlight class="normal"></highlight></codeline>
<codeline lineno="5178"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MetersMaxPixelValue=\&quot;%.12f\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_fMetersMaxPixelValue);</highlight></codeline>
<codeline lineno="5179"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="5180"><highlight class="normal"></highlight></codeline>
<codeline lineno="5181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_nSize)<sp/>{</highlight></codeline>
<codeline lineno="5182"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5185"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5186"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;Image&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1aac906ed45d63b044aa871d3366c05c6f" kindref="member">icXmlDumpHexData</ref>(xml,<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>m_pData,<sp/>m_nSize);</highlight></codeline>
<codeline lineno="5188"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;/Image&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5189"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/HeightImage&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5191"><highlight class="normal"></highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5194"><highlight class="normal"></highlight></codeline>
<codeline lineno="5195" refid="d3/def/a01985_1a40585eab56b698d0579d922b924997e9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d3/def/a01985_1a40585eab56b698d0579d922b924997e9" kindref="member">CIccTagXmlEmbeddedNormalImage::ParseXml</ref>(xmlNode<sp/>*pNode,<sp/>std::string<sp/>&amp;parseStr)</highlight></codeline>
<codeline lineno="5196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5198"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*tagNode;</highlight></codeline>
<codeline lineno="5199"><highlight class="normal"></highlight></codeline>
<codeline lineno="5200"><highlight class="normal"><sp/><sp/>tagNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(pNode,<sp/></highlight><highlight class="stringliteral">&quot;NormalImage&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tagNode)</highlight></codeline>
<codeline lineno="5202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5203"><highlight class="normal"></highlight></codeline>
<codeline lineno="5204"><highlight class="normal"><sp/><sp/>m_nSeamlesIndicator<sp/>=<sp/>atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(tagNode,<sp/></highlight><highlight class="stringliteral">&quot;SeamlessIndicator&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="5205"><highlight class="normal"><sp/><sp/>m_nEncodingFormat<sp/>=<sp/>(<ref refid="d7/d46/a00002_1a715a38b528f62dfc3bcbdb5b313e5ae3" kindref="member">icImageEncodingType</ref>)atoi(<ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(tagNode,<sp/></highlight><highlight class="stringliteral">&quot;EncodingFormat&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="5206"><highlight class="normal"></highlight></codeline>
<codeline lineno="5207"><highlight class="normal"><sp/><sp/>xmlNode<sp/>*pImageNode;</highlight></codeline>
<codeline lineno="5208"><highlight class="normal"><sp/><sp/>pImageNode<sp/>=<sp/><ref refid="d9/d39/a00257_1a73c51b42259052bca0b176744f8a6bae" kindref="member">icXmlFindNode</ref>(tagNode-&gt;children,<sp/></highlight><highlight class="stringliteral">&quot;Image&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5209"><highlight class="normal"></highlight></codeline>
<codeline lineno="5210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pImageNode)<sp/>{</highlight></codeline>
<codeline lineno="5211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pImageNode,<sp/></highlight><highlight class="stringliteral">&quot;File&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!filename<sp/>||<sp/>!filename[0])<sp/>{</highlight></codeline>
<codeline lineno="5213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filename<sp/>=<sp/><ref refid="d9/d39/a00257_1a7f3c355a3556d385d49bc415410aaf6d" kindref="member">icXmlAttrValue</ref>(pImageNode,<sp/></highlight><highlight class="stringliteral">&quot;Filename&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5215"><highlight class="normal"></highlight></codeline>
<codeline lineno="5216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filename[0])<sp/>{</highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d2c/a00893" kindref="compound">CIccIO</ref><sp/>*file<sp/>=<sp/><ref refid="d9/dd6/a00272_1a1787be4d01fe1c357f48a2e8531622a6" kindref="member">IccOpenFileIO</ref>(filename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file)<sp/>{</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Error!<sp/>-<sp/>File<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>not<sp/>found.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="5224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"></highlight></codeline>
<codeline lineno="5227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a63276cc6df51af4efa1945ecae93a182" kindref="member">icUInt32Number</ref><sp/>num<sp/>=<sp/>file-&gt;<ref refid="dc/d2c/a00893_1a2548156a3c8c463b27ec06a433b7d427" kindref="member">GetLength</ref>();</highlight></codeline>
<codeline lineno="5228"><highlight class="normal"></highlight></codeline>
<codeline lineno="5229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(num);</highlight></codeline>
<codeline lineno="5230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d46/a00002_1a0462ca2992be7c80b056e640a192b325" kindref="member">icUInt8Number</ref><sp/>*dst<sp/>=<sp/>GetData(0);</highlight></codeline>
<codeline lineno="5231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file-&gt;<ref refid="dc/d2c/a00893_1a3a42fb785255dda8609fc46c83fe4f2c" kindref="member">Read8</ref>(dst,<sp/>num)<sp/>!=<sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="5232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Read-File<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/>filename;</highlight></codeline>
<codeline lineno="5235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>may<sp/>not<sp/>be<sp/>a<sp/>valid<sp/>binary<sp/>file&apos;.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="5237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="5240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pImageNode-&gt;children<sp/>&amp;&amp;<sp/>pImageNode-&gt;children-&gt;content)<sp/>{</highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nSize<sp/>=<sp/><ref refid="d9/d39/a00257_1a4798bcdc271228ef7083a57412803e06" kindref="member">icXmlGetHexDataSize</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pImageNode-&gt;children-&gt;content);</highlight></codeline>
<codeline lineno="5245"><highlight class="normal"></highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetSize(nSize);</highlight></codeline>
<codeline lineno="5247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pData)<sp/>{</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d9/d39/a00257_1a7e2e6f47df3c6baacbda01035dfbbbee" kindref="member">icXmlGetHexData</ref>(m_pData,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d81/a00110_1a706623de1338f49b9c9cf7bed2eab0f2" kindref="member">icChar</ref>*)pImageNode-&gt;children-&gt;content,<sp/>m_nSize)<sp/>!=<sp/>m_nSize)</highlight></codeline>
<codeline lineno="5249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5256"><highlight class="normal"></highlight></codeline>
<codeline lineno="5257" refid="d3/def/a01985_1a26df4c9fce06a9898921b9e456960aac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d3/def/a01985_1a26df4c9fce06a9898921b9e456960aac" kindref="member">CIccTagXmlEmbeddedNormalImage::ToXml</ref>(std::string<sp/>&amp;xml,<sp/>std::string<sp/>blanks</highlight><highlight class="comment">/*=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[200];</highlight></codeline>
<codeline lineno="5260"><highlight class="normal"></highlight></codeline>
<codeline lineno="5261"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;NormalImage&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5262"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>SeamlessIndicator=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nSeamlesIndicator);</highlight></codeline>
<codeline lineno="5263"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="5264"><highlight class="normal"></highlight></codeline>
<codeline lineno="5265"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>EncodingFormat=\&quot;%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>m_nEncodingFormat);</highlight></codeline>
<codeline lineno="5266"><highlight class="normal"><sp/><sp/>xml<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="5267"><highlight class="normal"></highlight></codeline>
<codeline lineno="5268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_nSize)<sp/>{</highlight></codeline>
<codeline lineno="5269"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5272"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;Image&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d39/a00257_1aac906ed45d63b044aa871d3366c05c6f" kindref="member">icXmlDumpHexData</ref>(xml,<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>m_pData,<sp/>m_nSize);</highlight></codeline>
<codeline lineno="5275"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;/Image&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5276"><highlight class="normal"><sp/><sp/><sp/><sp/>xml<sp/>+=<sp/>blanks<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;/NormalImage&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5278"><highlight class="normal"></highlight></codeline>
<codeline lineno="5279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5281"><highlight class="normal"></highlight></codeline>
<codeline lineno="5282"><highlight class="normal"></highlight></codeline>
<codeline lineno="5283"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USEREFICCMAXNAMESPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5285"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="IccXML/IccLibXML/IccTagXml.cpp"/>
  </compounddef>
</doxygen>
